<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\simpleBlePeripheral.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\simpleBlePeripheral.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Fri May 20 15:53:52 2022
<BR><P>
<H3>Maximum Stack Usage =       1152 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SimpleBLEPeripheral_ProcessEvent &rArr; tuya_ble_main_tasks_exec &rArr; tuya_sched_execute &rArr; tuya_ble_event_process &rArr; tuya_ble_handle_ble_cmd_evt &rArr; tuya_ble_evt_process &rArr; tuya_ble_app_production_test_process &rArr; tuya_ble_app_sdk_test_process &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[34]">ATT_BuildErrorRsp</a> from att_util.o(i.ATT_BuildErrorRsp) referenced from att_server.o(i.ATT_ErrorRsp)
 <LI><a href="#[35]">ATT_BuildExchangeMTURsp</a> from att_util.o(i.ATT_BuildExchangeMTURsp) referenced from att_server.o(i.ATT_ExchangeMTURsp)
 <LI><a href="#[36]">ATT_BuildFindByTypeValueRsp</a> from att_util.o(i.ATT_BuildFindByTypeValueRsp) referenced from att_server.o(i.ATT_FindByTypeValueRsp)
 <LI><a href="#[37]">ATT_BuildFindInfoRsp</a> from att_util.o(i.ATT_BuildFindInfoRsp) referenced from att_server.o(i.ATT_FindInfoRsp)
 <LI><a href="#[38]">ATT_BuildHandleValueInd</a> from att_util.o(i.ATT_BuildHandleValueInd) referenced from att_server.o(i.ATT_HandleValueNoti)
 <LI><a href="#[39]">ATT_BuildPrepareWriteRsp</a> from att_util.o(i.ATT_BuildPrepareWriteRsp) referenced from att_server.o(i.ATT_PrepareWriteRsp)
 <LI><a href="#[3a]">ATT_BuildReadBlobRsp</a> from att_util.o(i.ATT_BuildReadBlobRsp) referenced from att_server.o(i.ATT_ReadBlobRsp)
 <LI><a href="#[3b]">ATT_BuildReadByGrpTypeRsp</a> from att_util.o(i.ATT_BuildReadByGrpTypeRsp) referenced from att_server.o(i.ATT_ReadByGrpTypeRsp)
 <LI><a href="#[3c]">ATT_BuildReadByTypeRsp</a> from att_util.o(i.ATT_BuildReadByTypeRsp) referenced from att_server.o(i.ATT_ReadByTypeRsp)
 <LI><a href="#[3d]">ATT_BuildReadMultiRsp</a> from att_util.o(i.ATT_BuildReadMultiRsp) referenced from att_server.o(i.ATT_ReadMultiRsp)
 <LI><a href="#[3e]">ATT_BuildReadRsp</a> from att_util.o(i.ATT_BuildReadRsp) referenced from att_server.o(i.ATT_ReadRsp)
 <LI><a href="#[7c]">ATT_ParseExchangeMTUReq</a> from att_util.o(i.ATT_ParseExchangeMTUReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[8d]">ATT_ParseExecuteWriteReq</a> from att_util.o(i.ATT_ParseExecuteWriteReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[80]">ATT_ParseFindByTypeValueReq</a> from att_util.o(i.ATT_ParseFindByTypeValueReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[7e]">ATT_ParseFindInfoReq</a> from att_util.o(i.ATT_ParseFindInfoReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[8c]">ATT_ParsePrepareWriteReq</a> from att_util.o(i.ATT_ParsePrepareWriteReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[86]">ATT_ParseReadBlobReq</a> from att_util.o(i.ATT_ParseReadBlobReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[82]">ATT_ParseReadByTypeReq</a> from att_util.o(i.ATT_ParseReadByTypeReq) referenced 2 times from gatt_server.o(.constdata)
 <LI><a href="#[87]">ATT_ParseReadMultiReq</a> from att_util.o(i.ATT_ParseReadMultiReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[84]">ATT_ParseReadReq</a> from att_util.o(i.ATT_ParseReadReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[8a]">ATT_ParseWriteReq</a> from att_util.o(i.ATT_ParseWriteReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[1c]">DTM_UART_IRQHandler</a> from rf_phy_driver.o(i.DTM_UART_IRQHandler) referenced from rf_phy_driver.o(i.rf_phy_direct_test)
 <LI><a href="#[78]">GAPRole_ProcessEvent</a> from peripheral.o(i.GAPRole_ProcessEvent) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[76]">GAP_ProcessEvent</a> from gap_task.o(i.GAP_ProcessEvent) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[79]">GATTServApp_ProcessEvent</a> from gattservapp.o(i.GATTServApp_ProcessEvent) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[77]">GATT_ProcessEvent</a> from gatt_task.o(i.GATT_ProcessEvent) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[72]">HCI_ProcessEvent</a> from bb_rom_sym_m0.txt(ABSOLUTE) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[42]">L2CAP_BuildCmdReject</a> from l2cap_util.o(i.L2CAP_BuildCmdReject) referenced from l2cap_if.o(i.L2CAP_CmdReject)
 <LI><a href="#[74]">L2CAP_ProcessEvent</a> from l2cap_task.o(i.L2CAP_ProcessEvent) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[27]">LL_ENC_AES128_Encrypt1</a> from patch.o(i.LL_ENC_AES128_Encrypt1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[29]">LL_ENC_Decrypt1</a> from patch.o(i.LL_ENC_Decrypt1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[28]">LL_ENC_Encrypt1</a> from patch.o(i.LL_ENC_Encrypt1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[24]">LL_IRQHandler1</a> from patch.o(i.LL_IRQHandler1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[71]">LL_ProcessEvent</a> from bb_rom_sym_m0.txt(ABSOLUTE) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[16]">LL_SetAdvControl1</a> from patch.o(i.LL_SetAdvControl1) referenced from patch.o(i.ll_patch_slave)
 <LI><a href="#[13]">LL_SetAdvParam1</a> from patch.o(i.LL_SetAdvParam1) referenced from patch.o(i.ll_patch_slave)
 <LI><a href="#[2e]">LL_SetDataLengh1</a> from patch.o(i.LL_SetDataLengh1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[33]">LL_set_default_conn_params1</a> from patch.o(i.LL_set_default_conn_params1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[b]">Reset_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[75]">SM_ProcessEvent</a> from sm_task.o(i.SM_ProcessEvent) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[7a]">SimpleBLEPeripheral_ProcessEvent</a> from simplebleperipheral.o(i.SimpleBLEPeripheral_ProcessEvent) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[e]">SystemInit</a> from system_armcm0.o(i.SystemInit) referenced from startup_armcm0.o(.text)
 <LI><a href="#[f]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_armcm0.o(.text)
 <LI><a href="#[d]">_hard_fault</a> from jump_table.o(i._hard_fault) referenced from jump_table.o(.emb_text)
 <LI><a href="#[10]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[45]">_uart_putc</a> from my_printf.o(i._uart_putc) referenced from my_printf.o(i.dbg_printf)
 <LI><a href="#[68]">adc_evt</a> from ty_adc_phy62xx.o(i.adc_evt) referenced from ty_adc_phy62xx.o(i.ty_adc_start)
 <LI><a href="#[46]">adc_wakeup_hdl</a> from adc.o(i.adc_wakeup_hdl) referenced from adc.o(i.hal_adc_init)
 <LI><a href="#[2a]">config_RTC1</a> from patch.o(i.config_RTC1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[1]">cpt_key_state_handler</a> from ty_pin_phy62xx.o(i.cpt_key_state_handler) referenced 2 times from ty_pin_phy62xx.o(.data)
 <LI><a href="#[5]">gapPeriProcessHCICmdCompleteEvt</a> from gap_peridevmgr.o(i.gapPeriProcessHCICmdCompleteEvt) referenced 2 times from gap_peridevmgr.o(.data)
 <LI><a href="#[6]">gapProcessAdvertisingEvt</a> from gap_peridevmgr.o(i.gapProcessAdvertisingEvt) referenced 2 times from gap_peridevmgr.o(.data)
 <LI><a href="#[7]">gapSetAdvParams</a> from gap_peridevmgr.o(i.gapSetAdvParams) referenced 2 times from gap_peridevmgr.o(.data)
 <LI><a href="#[7d]">gattProcessExchangeMTUReq</a> from gatt_server.o(i.gattProcessExchangeMTUReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[8e]">gattProcessExecuteWriteReq</a> from gatt_server.o(i.gattProcessExecuteWriteReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[81]">gattProcessFindByTypeValueReq</a> from gatt_server.o(i.gattProcessFindByTypeValueReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[7f]">gattProcessFindInfoReq</a> from gatt_server.o(i.gattProcessFindInfoReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[89]">gattProcessReadByGrpTypeReq</a> from gatt_server.o(i.gattProcessReadByGrpTypeReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[83]">gattProcessReadByTypeReq</a> from gatt_server.o(i.gattProcessReadByTypeReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[88]">gattProcessReadMultiReq</a> from gatt_server.o(i.gattProcessReadMultiReq) referenced from gatt_server.o(.constdata)
 <LI><a href="#[85]">gattProcessReadReq</a> from gatt_server.o(i.gattProcessReadReq) referenced 2 times from gatt_server.o(.constdata)
 <LI><a href="#[8b]">gattProcessWriteReq</a> from gatt_server.o(i.gattProcessWriteReq) referenced 2 times from gatt_server.o(.constdata)
 <LI><a href="#[3f]">gattServApp_HandleConnStatusCB</a> from gattservapp.o(i.gattServApp_HandleConnStatusCB) referenced from gattservapp.o(i.GATTServApp_Init)
 <LI><a href="#[6e]">gattServApp_WriteAttrCB</a> from gattservapp.o(i.gattServApp_WriteAttrCB) referenced from gattservapp.o(.constdata)
 <LI><a href="#[41]">gattServerHandleConnStatusCB</a> from gatt_server.o(i.gattServerHandleConnStatusCB) referenced from gatt_server.o(i.GATT_InitServer)
 <LI><a href="#[40]">gattServerProcessMsgCB</a> from gatt_server.o(i.gattServerProcessMsgCB) referenced from gatt_server.o(i.GATT_InitServer)
 <LI><a href="#[6f]">ggs_ReadAttrCB</a> from gapgattserver.o(i.ggs_ReadAttrCB) referenced from gapgattserver.o(.constdata)
 <LI><a href="#[70]">ggs_WriteAttrCB</a> from gapgattserver.o(i.ggs_WriteAttrCB) referenced from gapgattserver.o(.constdata)
 <LI><a href="#[47]">hal_ADC_IRQHandler</a> from adc.o(i.hal_ADC_IRQHandler) referenced from adc.o(i.hal_adc_start)
 <LI><a href="#[4a]">hal_GPIO_IRQHandler</a> from gpio.o(i.hal_GPIO_IRQHandler) referenced from gpio.o(i.hal_gpioin_register)
 <LI><a href="#[5e]">hal_SPI0_IRQHandler</a> from spi.o(i.hal_SPI0_IRQHandler) referenced from spi.o(i.spi_int_enable)
 <LI><a href="#[5f]">hal_SPI1_IRQHandler</a> from spi.o(i.hal_SPI1_IRQHandler) referenced from spi.o(i.spi_int_enable)
 <LI><a href="#[22]">hal_UART0_IRQHandler</a> from uart.o(_section_sram_code_) referenced from uart.o(i.uart_hw_init)
 <LI><a href="#[22]">hal_UART0_IRQHandler</a> from uart.o(_section_sram_code_) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[6a]">hal_UART1_IRQHandler</a> from uart.o(_section_sram_code_) referenced from uart.o(i.uart_hw_init)
 <LI><a href="#[49]">hal_gpio_sleep_handler</a> from gpio.o(i.hal_gpio_sleep_handler) referenced from gpio.o(i.hal_gpio_init)
 <LI><a href="#[48]">hal_gpio_wakeup_handler</a> from gpio.o(i.hal_gpio_wakeup_handler) referenced from gpio.o(i.hal_gpio_init)
 <LI><a href="#[1e]">hal_pwrmgr_sleep_process</a> from pwrmgr.o(i.hal_pwrmgr_sleep_process) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[1f]">hal_pwrmgr_wakeup_process</a> from pwrmgr.o(i.hal_pwrmgr_wakeup_process) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[21]">hard_fault</a> from jump_table.o(.emb_text) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[12]">hw_spif_cache_config</a> from flash.o(i.hw_spif_cache_config) referenced from flash.o(i.hal_spif_cache_init)
 <LI><a href="#[43]">l2capBuildParamUpdateReq</a> from l2cap_util.o(i.l2capBuildParamUpdateReq) referenced from l2cap_if.o(i.L2CAP_ConnParamUpdateReq)
 <LI><a href="#[51]">l2capHandleTimerCB</a> from l2cap_util.o(i.l2capHandleTimerCB) referenced from l2cap_util.o(i.l2capSendReq)
 <LI><a href="#[2d]">l2capPocessFragmentTxData</a> from l2cap_util.o(_section_sram_code_) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[14]">llCalcMaxScanTime1</a> from patch.o(i.llCalcMaxScanTime1) referenced from patch.o(i.ll_patch_slave)
 <LI><a href="#[32]">llConnTerminate1</a> from patch.o(i.llConnTerminate1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[2f]">llProcessTxData1</a> from patch.o(i.llProcessTxData1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[15]">llSecAdvAllow1</a> from patch.o(i.llSecAdvAllow1) referenced from patch.o(i.ll_patch_slave)
 <LI><a href="#[19]">llSetupNextSlaveEvent1</a> from patch.o(i.llSetupNextSlaveEvent1) referenced from patch.o(i.ll_patch_slave)
 <LI><a href="#[17]">llSetupSecAdvEvt1</a> from patch.o(i.llSetupSecAdvEvt1) referenced from patch.o(i.ll_patch_slave)
 <LI><a href="#[31]">ll_adptive_adj_next_time1</a> from patch.o(i.ll_adptive_adj_next_time1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[30]">ll_generateTxBuffer1</a> from patch.o(i.ll_generateTxBuffer1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[23]">ll_hw_go1</a> from patch.o(i.ll_hw_go1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[18]">ll_scheduler2</a> from patch.o(i.ll_scheduler2) referenced from patch.o(i.ll_patch_slave)
 <LI><a href="#[c]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[0]">memset</a> from bb_rom_sym_m0.txt(ABSOLUTE) referenced 2 times from aes.o(.data)
 <LI><a href="#[1d]">osalInitTasks</a> from osal_simplebleperipheral.o(i.osalInitTasks) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[73]">osal_CbTimerProcessEvent</a> from bb_rom_sym_m0.txt(ABSOLUTE) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[11]">osal_idle_task</a> from pwrmgr.o(_section_sram_code_) referenced from pwrmgr.o(i.hal_pwrmgr_init)
 <LI><a href="#[2]">param_update_CB</a> from simplebleperipheral.o(i.param_update_CB) referenced 2 times from simplebleperipheral.o(.data)
 <LI><a href="#[3]">peripheralStateNotificationCB</a> from simplebleperipheral.o(i.peripheralStateNotificationCB) referenced 2 times from simplebleperipheral.o(.data)
 <LI><a href="#[4]">peripheralStateReadRssiCB</a> from simplebleperipheral.o(i.peripheralStateReadRssiCB) referenced 2 times from simplebleperipheral.o(.data)
 <LI><a href="#[7b]">phy_timer_ProcessEvent</a> from simplebleperipheral.o(i.phy_timer_ProcessEvent) referenced from osal_simplebleperipheral.o(.constdata)
 <LI><a href="#[6d]">phy_uart_evt_hdl</a> from ty_uart_phy62xx.o(_section_sram_code_) referenced from ty_uart_phy62xx.o(.constdata)
 <LI><a href="#[25]">rf_calibrate1</a> from rf_phy_driver.o(i.rf_calibrate1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[26]">rf_phy_change_cfg0</a> from rf_phy_driver.o(i.rf_phy_change_cfg0) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[20]">rf_phy_ini</a> from rf_phy_driver.o(i.rf_phy_ini) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[44]">smLinkCheck</a> from sm_pairing.o(i.smLinkCheck) referenced from sm_task.o(i.SM_Init)
 <LI><a href="#[a]">smResponderProcessLTKReq</a> from sm_rsppairing.o(i.smResponderProcessLTKReq) referenced 2 times from sm_rsppairing.o(.data)
 <LI><a href="#[9]">smResponderSendNextKeyInfo</a> from sm_rsppairing.o(i.smResponderSendNextKeyInfo) referenced 2 times from sm_rsppairing.o(.data)
 <LI><a href="#[5b]">smState_timerCB</a> from sm_task.o(i.smState_timerCB) referenced from sm_rsppairing.o(i.smResponderSendNextKeyInfo)
 <LI><a href="#[5d]">smTo_timerCB</a> from sm_task.o(i.smTo_timerCB) referenced from sm_mgr.o(i.smStartRspTimer)
 <LI><a href="#[56]">smpBuildEncInfo</a> from smp.o(i.smpBuildEncInfo) referenced from sm_pairing.o(i.smPairingSendEncInfo)
 <LI><a href="#[57]">smpBuildIdentityAddrInfo</a> from smp.o(i.smpBuildIdentityAddrInfo) referenced from sm_pairing.o(i.smPairingSendIdentityAddrInfo)
 <LI><a href="#[58]">smpBuildIdentityInfo</a> from smp.o(i.smpBuildIdentityInfo) referenced from sm_pairing.o(i.smPairingSendIdentityInfo)
 <LI><a href="#[59]">smpBuildMasterID</a> from smp.o(i.smpBuildMasterID) referenced from sm_pairing.o(i.smPairingSendMasterID)
 <LI><a href="#[52]">smpBuildPairingConfirm</a> from smp.o(i.smpBuildPairingConfirm) referenced from sm_pairing.o(i.smGenerateConfirm)
 <LI><a href="#[5c]">smpBuildPairingFailed</a> from smp.o(i.smpBuildPairingFailed) referenced from sm_pairing.o(i.smSendFailAndEnd)
 <LI><a href="#[55]">smpBuildPairingRandom</a> from smp.o(i.smpBuildPairingRandom) referenced from sm_pairing.o(i.smGenerateRandMsg)
 <LI><a href="#[53]">smpBuildPairingReq</a> from smp.o(i.smpBuildPairingReq) referenced from sm_pairing.o(i.smGeneratePairingReqRsp)
 <LI><a href="#[54]">smpBuildPairingRsp</a> from smp.o(i.smpBuildPairingRsp) referenced from sm_pairing.o(i.smGeneratePairingReqRsp)
 <LI><a href="#[5a]">smpBuildSigningInfo</a> from smp.o(i.smpBuildSigningInfo) referenced from sm_pairing.o(i.smPairingSendSingingInfo)
 <LI><a href="#[8]">smpResponderProcessIncoming</a> from sm_rsppairing.o(i.smpResponderProcessIncoming) referenced 2 times from sm_rsppairing.o(.data)
 <LI><a href="#[4c]">spi0_sleep_handler</a> from spi.o(i.spi0_sleep_handler) referenced from spi.o(i.hal_spi_init)
 <LI><a href="#[4b]">spi0_wakeup_handler</a> from spi.o(i.spi0_wakeup_handler) referenced from spi.o(i.hal_spi_init)
 <LI><a href="#[4e]">spi1_sleep_handler</a> from spi.o(i.spi1_sleep_handler) referenced from spi.o(i.hal_spi_init)
 <LI><a href="#[4d]">spi1_wakeup_handler</a> from spi.o(i.spi1_wakeup_handler) referenced from spi.o(i.hal_spi_init)
 <LI><a href="#[62]">tuya_ble_disconnect_and_reset_timer_cb</a> from tuya_ble_sdk_demo.o(i.tuya_ble_disconnect_and_reset_timer_cb) referenced from tuya_ble_sdk_demo.o(i.tuya_ble_disconnect_and_reset_timer_init)
 <LI><a href="#[63]">tuya_ble_gatt_send_data_handle</a> from tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_data_handle) referenced from tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_data_handle)
 <LI><a href="#[64]">tuya_ble_sdk_callback</a> from tuya_ble_sdk_demo.o(i.tuya_ble_sdk_callback) referenced from tuya_ble_sdk_demo.o(i.tuya_ble_sdk_demo_init)
 <LI><a href="#[66]">tuya_ble_update_conn_param_timer_cb</a> from tuya_ble_sdk_demo.o(i.tuya_ble_update_conn_param_timer_cb) referenced from tuya_ble_sdk_demo.o(i.tuya_ble_update_conn_param_timer_init)
 <LI><a href="#[61]">tuya_ble_vtimer_conncet_monitor_callback</a> from tuya_ble_main.o(i.tuya_ble_vtimer_conncet_monitor_callback) referenced from tuya_ble_main.o(i.tuya_ble_connect_monitor_timer_init)
 <LI><a href="#[60]">tuya_ble_vtimer_prod_monitor_callback</a> from tuya_ble_app_production_test.o(i.tuya_ble_vtimer_prod_monitor_callback) referenced from tuya_ble_app_production_test.o(i.tuya_ble_auc_enter)
 <LI><a href="#[67]">ty_conn_status_cb</a> from tuya_ble_service.o(i.ty_conn_status_cb) referenced from tuya_ble_service.o(i.tuya_gen_AddService)
 <LI><a href="#[69]">ty_pin_handler</a> from ty_pin_phy62xx.o(i.ty_pin_handler) referenced from ty_pin_phy62xx.o(i.ty_pin_init)
 <LI><a href="#[6b]">ty_read_attr_cb</a> from tuya_ble_service.o(i.ty_read_attr_cb) referenced from tuya_ble_service.o(.constdata)
 <LI><a href="#[1b]">ty_sleep_handler</a> from main.o(i.ty_sleep_handler) referenced from main.o(i.main)
 <LI><a href="#[65]">ty_uart_virtual_enter_sleep_timer_cb</a> from tuya_ble_sdk_test.o(i.ty_uart_virtual_enter_sleep_timer_cb) referenced from tuya_ble_sdk_test.o(i.tuya_ble_sdk_test_init)
 <LI><a href="#[1a]">ty_wakeup_handler</a> from main.o(i.ty_wakeup_handler) referenced from main.o(i.main)
 <LI><a href="#[6c]">ty_write_attr_cb</a> from tuya_ble_service.o(i.ty_write_attr_cb) referenced from tuya_ble_service.o(.constdata)
 <LI><a href="#[50]">uart_wakeup_process_0</a> from uart.o(i.uart_wakeup_process_0) referenced from uart.o(i.hal_uart_init)
 <LI><a href="#[4f]">uart_wakeup_process_1</a> from uart.o(i.uart_wakeup_process_1) referenced from uart.o(i.hal_uart_init)
 <LI><a href="#[2c]">wakeupProcess1</a> from patch.o(i.wakeupProcess1) referenced from patch.o(_section_xip_code_)
 <LI><a href="#[2b]">wakeup_init1</a> from patch.o(i.wakeup_init1) referenced from patch.o(_section_xip_code_)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[f2]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start (via Veneer)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_conn_param (via Veneer)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_utc_sec_2_mytime (via Veneer)
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_is_leap_year (via Veneer)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_dayindex (via Veneer)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_decrease (via Veneer)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_enqueue (via Veneer)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dequeue (via Veneer)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ms_intv (via Veneer)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs (via Veneer)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_master_init (via Veneer)
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;number (via Veneer)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_init (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_adptive_adj_next_time1 (via Veneer)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capPktToSegmentBuff (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core (via Veneer)
</UL>

<P><STRONG><a name="[17b]"></a>__aeabi_idivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_utc_sec_2_mytime (via Veneer)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_dayindex (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[1fb]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change (via Veneer)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist (via Veneer)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_response (via Veneer)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_receive_data (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data (via Veneer)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_data_unpack (via Veneer)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_product_test_rsp (via Veneer)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_response (via Veneer)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac (via Veneer)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rand_generator (via Veneer)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_production_test_asynchronous_response (via Veneer)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_feature_weather_data_request_with_location (via Veneer)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_with_time_send (via Veneer)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_send (via Veneer)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_update_product_id (via Veneer)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_data_passthrough (via Veneer)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_generation (via Veneer)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_send (via Veneer)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init (via Veneer)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_demo_init (via Veneer)
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_ble_handler (via Veneer)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue (via Veneer)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encryption (via Veneer)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_decryption (via Veneer)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_send_pkg_encode_with_packet_length (via Veneer)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_recv_pkg_decode (via Veneer)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process (via Veneer)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc (via Veneer)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_with_dst_date_resp (via Veneer)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp (via Veneer)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req (via Veneer)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_net_config_info_req (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req (via Veneer)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_write_req (via Veneer)
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req (via Veneer)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send (via Veneer)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_bulk_data_evt (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_hid (via Veneer)
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings (via Veneer)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_get (via Veneer)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_enqueue (via Veneer)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dequeue (via Veneer)
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sched_event_put (via Veneer)
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_sched_execute (via Veneer)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_scan_rsp_data_update (via Veneer)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_adv_data_update (via Veneer)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change_with_connecting_request (via Veneer)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_uart_handler (via Veneer)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send (via Veneer)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid (via Veneer)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info (via Veneer)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_read_mac (via Veneer)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info (via Veneer)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid (via Veneer)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_data_lktlv_parse (via Veneer)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt (via Veneer)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt (via Veneer)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt (via Veneer)
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt (via Veneer)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_info_update_evt (via Veneer)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_update_ret (via Veneer)
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_crypt_cbc (via Veneer)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit (via Veneer)
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_mac (via Veneer)
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_get_mac (via Veneer)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_offset_handler (via Veneer)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_info_handler (via Veneer)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_write (via Veneer)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf (via Veneer)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate (via Veneer)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_generate_key1 (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_key_generate (via Veneer)
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_Add_Pkcs (via Veneer)
</UL>

<P><STRONG><a name="[123]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_response (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process (via Veneer)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_demo_init (via Veneer)
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings (via Veneer)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid (via Veneer)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init (via Veneer)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_low_power_io_init (via Veneer)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unregister (via Veneer)
</UL>

<P><STRONG><a name="[23b]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data (via Veneer)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_data_unpack (via Veneer)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc (via Veneer)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond (via Veneer)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc (via Veneer)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_net_config_info_req (via Veneer)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send (via Veneer)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change_with_connecting_request (via Veneer)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_uart_handler (via Veneer)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info (via Veneer)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint (via Veneer)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt (via Veneer)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt (via Veneer)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt (via Veneer)
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt (via Veneer)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish_ret (via Veneer)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_req_handler (via Veneer)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_info_handler (via Veneer)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_end_handler (via Veneer)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate (via Veneer)
</UL>

<P><STRONG><a name="[133]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_receive_data (via Veneer)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process (via Veneer)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_demo_handler (via Veneer)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_init (via Veneer)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_with_dst_date_resp (via Veneer)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp (via Veneer)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp (via Veneer)
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req (via Veneer)
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req (via Veneer)
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_app_local_time_data_resp (via Veneer)
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test (via Veneer)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_factory_reset_evt (via Veneer)
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_init (via Veneer)
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_free (via Veneer)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish_ret (via Veneer)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_init (via Veneer)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_notify (via Veneer)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init (via Veneer)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_deinit (via Veneer)
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init (via Veneer)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_adcc_cfg (via Veneer)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init (via Veneer)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init (via Veneer)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_info_handler (via Veneer)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spis_int_handle (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_key_generate (via Veneer)
</UL>

<P><STRONG><a name="[0]"></a>memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> aes.o(.data)
</UL>
<P><STRONG><a name="[331]"></a>strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_custom_app_production_test_process (via Veneer)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_feature_weather_data_request_with_location (via Veneer)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process (via Veneer)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid (via Veneer)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test (via Veneer)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid (via Veneer)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_gpio_test (via Veneer)
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_key_string_to_enum_type (via Veneer)
</UL>

<P><STRONG><a name="[357]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac (via Veneer)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init (via Veneer)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_hid (via Veneer)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid (via Veneer)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info (via Veneer)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_offset_handler (via Veneer)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate (via Veneer)
</UL>

<P><STRONG><a name="[41d]"></a>strncmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_key_string_to_enum_type (via Veneer)
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process (via Veneer)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_dp_report_handler (via Veneer)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process (via Veneer)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_write_req (via Veneer)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_md5_process (via Veneer)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_aes_encrypt (via Veneer)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_aes_decrypt (via Veneer)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_setkey_enc (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_key_press_timeout_handler (via Veneer)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_advdata_and_scanrsp (via Veneer)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_offset_handler (via Veneer)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_info_handler (via Veneer)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_Encrypt1 (via Veneer)
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_Decrypt1 (via Veneer)
</UL>

<P><STRONG><a name="[ad]"></a>__rt_ctype_table</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol (via Veneer)
</UL>

<P><STRONG><a name="[ae]"></a>_strtoul</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol (via Veneer)
</UL>

<P><STRONG><a name="[c9]"></a>HCI_CommandCompleteEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_LtkReqReplyCmd (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_LtkReqNegReplyCmd (via Veneer)
</UL>

<P><STRONG><a name="[1d4]"></a>HCI_DisconnectCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_TerminateLinkReq (via Veneer)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnectNext (via Veneer)
</UL>

<P><STRONG><a name="[1c0]"></a>HCI_GAPTaskRegister</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Init (via Veneer)
</UL>

<P><STRONG><a name="[203]"></a>HCI_HostNumCompletedPktCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HostNumCompletedPkts (via Veneer)
</UL>

<P><STRONG><a name="[15f]"></a>HCI_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[204]"></a>HCI_L2CAPTaskRegister</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Init (via Veneer)
</UL>

<P><STRONG><a name="[2fa]"></a>HCI_LE_RandCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessRandComplete (via Veneer)
</UL>

<P><STRONG><a name="[262]"></a>HCI_LE_ReadBufSizeCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapReadBD_ADDRStatus (via Veneer)
</UL>

<P><STRONG><a name="[226]"></a>HCI_LE_ReadResolvingListSizeCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[1d5]"></a>HCI_LE_SetAdvDataCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_UpdateAdvertisingData (via Veneer)
</UL>

<P><STRONG><a name="[1be]"></a>HCI_LE_SetAdvEnableCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_EndDiscoverable (via Veneer)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSetAdvParamsStatus (via Veneer)
</UL>

<P><STRONG><a name="[268]"></a>HCI_LE_SetAdvParamCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSetAdvParams (via Veneer)
</UL>

<P><STRONG><a name="[224]"></a>HCI_LE_SetDefaultPhyMode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init (via Veneer)
</UL>

<P><STRONG><a name="[260]"></a>HCI_LE_SetRandomAddressCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessNewAddr (via Veneer)
</UL>

<P><STRONG><a name="[1d6]"></a>HCI_LE_SetScanRspDataCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_UpdateAdvertisingData (via Veneer)
</UL>

<P><STRONG><a name="[72]"></a>HCI_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[1c6]"></a>HCI_ReadBDADDRCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB (via Veneer)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ParamsInit (via Veneer)
</UL>

<P><STRONG><a name="[1ae]"></a>HCI_ReadRssiCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[217]"></a>HCI_SMPTaskRegister</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_Init (via Veneer)
</UL>

<P><STRONG><a name="[c5]"></a>HCI_SendDataPkt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Fragment_SendDataPkt (via Veneer)
</UL>

<P><STRONG><a name="[20e]"></a>HCI_bm_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_bm_alloc (via Veneer)
</UL>

<P><STRONG><a name="[d0]"></a>LL_ConnActive</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EncLtkReply (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EncLtkNegReply (via Veneer)
</UL>

<P><STRONG><a name="[193]"></a>LL_ENC_AES128_Encrypt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRNG_Rand (via Veneer)
</UL>

<P><STRONG><a name="[cc]"></a>LL_ENC_AES128_Encrypt0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_AES128_Encrypt1 (via Veneer)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finidv (via Veneer)
</UL>

<P><STRONG><a name="[ce]"></a>LL_ENC_GenerateNonce</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_Encrypt1 (via Veneer)
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_Decrypt1 (via Veneer)
</UL>

<P><STRONG><a name="[cd]"></a>LL_ENC_LoadKey</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_Encrypt1 (via Veneer)
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_Decrypt1 (via Veneer)
</UL>

<P><STRONG><a name="[2da]"></a>LL_Encrypt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEncryptLocal (via Veneer)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEncrypt (via Veneer)
</UL>

<P><STRONG><a name="[15e]"></a>LL_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[13d]"></a>LL_InitConnectContext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init (via Veneer)
</UL>

<P><STRONG><a name="[71]"></a>LL_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>LL_SetAdvParam0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvParam1 (via Veneer)
</UL>

<P><STRONG><a name="[ef]"></a>LL_SetDataLengh0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetDataLengh1 (via Veneer)
</UL>

<P><STRONG><a name="[202]"></a>LL_TX_bm_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Fragment_bm_alloc (via Veneer)
</UL>

<P><STRONG><a name="[f0]"></a>LL_set_default_conn_params0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_set_default_conn_params1 (via Veneer)
</UL>

<P><STRONG><a name="[f3]"></a>WaitRTCCount</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_spif_wait_nobusy_x (via Veneer)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_RTC1 (via Veneer)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_96MXtal_by_rcTracking (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_16MXtal_by_rcTracking (via Veneer)
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRNG_Output (via Veneer)
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration (via Veneer)
</UL>

<P><STRONG><a name="[e8]"></a>__ARM_common_switch8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_data_unpack (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process (via Veneer)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_handler (via Veneer)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback (via Veneer)
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_ble_handler (via Veneer)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process (via Veneer)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req (via Veneer)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process (via Veneer)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inter_event_response (via Veneer)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_hex2int (via Veneer)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_uart_handler (via Veneer)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_response_evt (via Veneer)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter (via Veneer)
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpt_key_state_handler (via Veneer)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel (via Veneer)
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sampling_resolution (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_xmit_polling (via Veneer)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvControl1 (via Veneer)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg (via Veneer)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming (via Veneer)
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo (via Veneer)
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPeriProcessHCICmdCompleteEvt (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tp_cal (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rxDcoc_cfg (via Veneer)
</UL>

<P><STRONG><a name="[188]"></a>app_wakeup_process</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
</UL>

<P><STRONG><a name="[10e]"></a>bit_to_byte</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_pn_prbs9 (via Veneer)
</UL>

<P><STRONG><a name="[ed]"></a>clear_timer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvControl1 (via Veneer)
</UL>

<P><STRONG><a name="[119]"></a>clk_get_pclk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init (via Veneer)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_master_init (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_init (via Veneer)
</UL>

<P><STRONG><a name="[156]"></a>clk_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
</UL>

<P><STRONG><a name="[c0]"></a>config_RTC</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_enter_sleep_rtc_reset (via Veneer)
</UL>

<P><STRONG><a name="[134]"></a>disableSleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock (via Veneer)
</UL>

<P><STRONG><a name="[bb]"></a>drv_disable_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_set_external_mcu_version (via Veneer)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set (via Veneer)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_callback_queue_register (via Veneer)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_reset_ble_sn (via Veneer)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_clear (via Veneer)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send (via Veneer)
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sched_event_put (via Veneer)
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTuyaPortFree (via Veneer)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTuyaPortMalloc (via Veneer)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_tx_buf (via Veneer)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_cache_tag_flush (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_unlock (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_lock (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_is_lock (via Veneer)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_by_dma (via Veneer)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read (via Veneer)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_sector (via Veneer)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_write_fifo (via Veneer)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unregister (via Veneer)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_enter_sleep_rtc_reset (via Veneer)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf (via Veneer)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSecAdvAllow1 (via Veneer)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llCalcMaxScanTime1 (via Veneer)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvControl1 (via Veneer)
</UL>

<P><STRONG><a name="[bc]"></a>drv_enable_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_set_external_mcu_version (via Veneer)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set (via Veneer)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_callback_queue_register (via Veneer)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_reset_ble_sn (via Veneer)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_clear (via Veneer)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send (via Veneer)
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sched_event_put (via Veneer)
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTuyaPortFree (via Veneer)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTuyaPortMalloc (via Veneer)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_tx_buf (via Veneer)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_cache_tag_flush (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_unlock (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_lock (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_is_lock (via Veneer)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_by_dma (via Veneer)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read (via Veneer)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_sector (via Veneer)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_write_fifo (via Veneer)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unregister (via Veneer)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf (via Veneer)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSecAdvAllow1 (via Veneer)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llCalcMaxScanTime1 (via Veneer)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvControl1 (via Veneer)
</UL>

<P><STRONG><a name="[153]"></a>drv_irq_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
</UL>

<P><STRONG><a name="[f7]"></a>efuse_read</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finidv (via Veneer)
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_efuse_chip_version_check (via Veneer)
</UL>

<P><STRONG><a name="[135]"></a>enableSleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config (via Veneer)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
</UL>

<P><STRONG><a name="[c2]"></a>enter_sleep_off_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_enter_sleep_rtc_reset (via Veneer)
</UL>

<P><STRONG><a name="[14d]"></a>getTxBufferSize</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_generateTxBuffer1 (via Veneer)
</UL>

<P><STRONG><a name="[14e]"></a>get_tx_read_ptr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_generateTxBuffer1 (via Veneer)
</UL>

<P><STRONG><a name="[178]"></a>gpio_write</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_cmd_parse (via Veneer)
</UL>

<P><STRONG><a name="[142]"></a>llConnTerminate0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llConnTerminate1 (via Veneer)
</UL>

<P><STRONG><a name="[d1]"></a>llEnqueueCtrlPkt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_generateTxBuffer1 (via Veneer)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EncLtkReply (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EncLtkNegReply (via Veneer)
</UL>

<P><STRONG><a name="[221]"></a>llInitFeatureSet2MPHY</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init (via Veneer)
</UL>

<P><STRONG><a name="[222]"></a>llInitFeatureSetDLE</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init (via Veneer)
</UL>

<P><STRONG><a name="[143]"></a>llProcessChanMap</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llConnTerminate1 (via Veneer)
</UL>

<P><STRONG><a name="[144]"></a>llProcessTxData0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llProcessTxData1 (via Veneer)
</UL>

<P><STRONG><a name="[e3]"></a>llSecAdvAllow</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[e9]"></a>llSetupAdv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecAdvEvt1 (via Veneer)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvControl1 (via Veneer)
</UL>

<P><STRONG><a name="[145]"></a>llSetupNextSlaveEvent0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupNextSlaveEvent1 (via Veneer)
</UL>

<P><STRONG><a name="[e4]"></a>llSetupSecAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[146]"></a>llSetupSecConnectableAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecAdvEvt1 (via Veneer)
</UL>

<P><STRONG><a name="[e7]"></a>llSetupSecInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[147]"></a>llSetupSecNonConnectableAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecAdvEvt1 (via Veneer)
</UL>

<P><STRONG><a name="[e6]"></a>llSetupSecScan</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[148]"></a>llSetupSecScannableAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecAdvEvt1 (via Veneer)
</UL>

<P><STRONG><a name="[d3]"></a>ll_debug_output</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvControl1 (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[d6]"></a>ll_hw_clr_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[14a]"></a>ll_hw_get_anchor</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_adptive_adj_next_time1 (via Veneer)
</UL>

<P><STRONG><a name="[d4]"></a>ll_hw_get_irq_status</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[149]"></a>ll_hw_get_loop_cycle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_adptive_adj_next_time1 (via Veneer)
</UL>

<P><STRONG><a name="[14c]"></a>ll_hw_get_tfifo_wrptr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_generateTxBuffer1 (via Veneer)
</UL>

<P><STRONG><a name="[d5]"></a>ll_hw_get_tr_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1 (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[18e]"></a>ll_hw_ign_rfifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
</UL>

<P><STRONG><a name="[173]"></a>ll_hw_rst_tfifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[16d]"></a>ll_hw_set_crc_fmt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_bb_cfg (via Veneer)
</UL>

<P><STRONG><a name="[18b]"></a>ll_hw_set_empty_head</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
</UL>

<P><STRONG><a name="[181]"></a>ll_hw_set_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[18d]"></a>ll_hw_set_loop_timeout</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
</UL>

<P><STRONG><a name="[e5]"></a>ll_hw_set_rx_timeout</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1 (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[18c]"></a>ll_hw_set_rx_timeout_1st</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
</UL>

<P><STRONG><a name="[183]"></a>ll_hw_set_srx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[182]"></a>ll_hw_set_stx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[17d]"></a>ll_hw_set_timing</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[172]"></a>ll_hw_set_trx_settle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
</UL>

<P><STRONG><a name="[174]"></a>ll_hw_trigger</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[185]"></a>ll_hw_tx2rx_timing_config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
</UL>

<P><STRONG><a name="[14b]"></a>ll_hw_write_tfifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_generateTxBuffer1 (via Veneer)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_zigbee_pkt_gen (via Veneer)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ble_pkt_gen (via Veneer)
</UL>

<P><STRONG><a name="[df]"></a>ll_processBasicIRQ</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ_secondaryScanSRX (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ_secondaryInitSRX (via Veneer)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ_secondaryAdvTRX (via Veneer)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ_ScanTRX (via Veneer)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ_SRX (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[d7]"></a>ll_processExtAdvIRQ</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[d9]"></a>ll_processExtInitIRQ</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[d8]"></a>ll_processExtScanIRQ</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[da]"></a>ll_processPrdAdvIRQ</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[db]"></a>ll_processPrdScanIRQ</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[e2]"></a>ll_schedule_next_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
</UL>

<P><STRONG><a name="[152]"></a>ll_scheduler0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_scheduler2 (via Veneer)
</UL>

<P><STRONG><a name="[fb]"></a>log_printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hard_fault (via Veneer)
</UL>

<P><STRONG><a name="[187]"></a>osalTimeUpdate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_timer_start (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
</UL>

<P><STRONG><a name="[160]"></a>osal_CbTimerInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[73]"></a>osal_CbTimerProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[2b9]"></a>osal_CbTimerStart</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo (via Veneer)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendReq (via Veneer)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smStartRspTimer (via Veneer)
</UL>

<P><STRONG><a name="[276]"></a>osal_CbTimerStop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capStopTimer (via Veneer)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattStopTimer (via Veneer)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smStopRspTimer (via Veneer)
</UL>

<P><STRONG><a name="[301]"></a>osal_CbTimerUpdate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smStartRspTimer (via Veneer)
</UL>

<P><STRONG><a name="[20f]"></a>osal_bm_adjust_header</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_bm_alloc (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capParsePacket (via Veneer)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capEncapSendData (via Veneer)
</UL>

<P><STRONG><a name="[208]"></a>osal_bm_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg (via Veneer)
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessOSALMsg (via Veneer)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSarBufReset (via Veneer)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRxData (via Veneer)
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendCmd (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessRxData (via Veneer)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg (via Veneer)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_SegmentPkt_Reset (via Veneer)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ReassemblePkt_Reset (via Veneer)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capPktToSegmentBuff (via Veneer)
</UL>

<P><STRONG><a name="[1b5]"></a>osal_get_timeoutEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[104]"></a>osal_init_system</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[1d0]"></a>osal_isbufset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SecParamsInit (via Veneer)
</UL>

<P><STRONG><a name="[15c]"></a>osal_mem_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterService (via Veneer)
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_MakeDiscoverable (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_VerifyAuthenSig (via Veneer)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_GenerateAuthenSig (via Veneer)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSavePairInfo (via Veneer)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessSigningInfo (via Veneer)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIdentityInfo (via Veneer)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessEncryptionInformation (via Veneer)
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapAllocAdvRecs (via Veneer)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPairingCompleteCB (via Veneer)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_CMAC (via Veneer)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_subkey (via Veneer)
</UL>

<P><STRONG><a name="[1c7]"></a>osal_mem_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_PeriDevMgrInit (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_VerifyAuthenSig (via Veneer)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_GenerateAuthenSig (via Veneer)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessRandComplete (via Veneer)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFreeAdvertState (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapAllocAdvRecs (via Veneer)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Remove (via Veneer)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPairingCompleteCB (via Veneer)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFreeAuthLink (via Veneer)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFreeEstLink (via Veneer)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smFreePairingParams (via Veneer)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_CMAC (via Veneer)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_subkey (via Veneer)
</UL>

<P><STRONG><a name="[13c]"></a>osal_mem_set_heap</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init (via Veneer)
</UL>

<P><STRONG><a name="[10c]"></a>osal_memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_write_attr_cb (via Veneer)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_read_attr_cb (via Veneer)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_CompareUUID (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_VerifyAuthenSig (via Veneer)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llConnTerminate1 (via Veneer)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingRandom (via Veneer)
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderProcessLTKReq (via Veneer)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finidv (via Veneer)
</UL>

<P><STRONG><a name="[150]"></a>osal_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_read_attr_cb (via Veneer)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter (via Veneer)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_notify (via Veneer)
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_evt (via Veneer)
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_advdata_and_scanrsp (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterService (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq (via Veneer)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq (via Veneer)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_UpdateAdvertisingData (via Veneer)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_MakeDiscoverable (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_WriteAttrCB (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ParseWriteReq (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ParseReadByTypeReq (via Veneer)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ParsePrepareWriteReq (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ParseFindByTypeValueReq (via Veneer)
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ConvertUUIDto128 (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_BuildReadRsp (via Veneer)
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_BuildReadMultiRsp (via Veneer)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_BuildReadByTypeRsp (via Veneer)
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_BuildReadByGrpTypeRsp (via Veneer)
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_BuildReadBlobRsp (via Veneer)
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_BuildPrepareWriteRsp (via Veneer)
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_BuildHandleValueInd (via Veneer)
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_BuildFindInfoRsp (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1 (via Veneer)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRNG_Rand (via Veneer)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessRandComplete (via Veneer)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSavePairInfo (via Veneer)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendMasterID (via Veneer)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendIdentityAddrInfo (via Veneer)
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateRandMsg (via Veneer)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateConfirm (via Veneer)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingReq (via Veneer)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessSigningInfo (via Veneer)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingRandom (via Veneer)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingConfirm (via Veneer)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessMasterID (via Veneer)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIdentityInfo (via Veneer)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIdentityAddrInfo (via Veneer)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessEncryptionInformation (via Veneer)
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderProcessLTKReq (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capParsePacket (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifySignal (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifyData (via Veneer)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattNotifyEvent (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessFindInfoReq (via Veneer)
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Add (via Veneer)
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPasskeyNeededCB (via Veneer)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPairingCompleteCB (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendAuthEvent (via Veneer)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_CalcRandomAddr (via Veneer)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapUpdateConnSignCounter (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapReadBD_ADDRStatus (via Veneer)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessRandomAddrComplete (via Veneer)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessNewAddr (via Veneer)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendDeviceInitDoneEvent (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendEstLinkEvent (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseSigningInfo (via Veneer)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParsePairingRandom (via Veneer)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParsePairingConfirm (via Veneer)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseMasterID (via Veneer)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseIdentityInfo (via Veneer)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseIdentityAddrInfo (via Veneer)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseEncInfo (via Veneer)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildSigningInfo (via Veneer)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildPairingRandom (via Veneer)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildPairingConfirm (via Veneer)
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildMasterID (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildIdentityInfo (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildIdentityAddrInfo (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildEncInfo (via Veneer)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1new (via Veneer)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_CMAC (via Veneer)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capPktToSegmentBuff (via Veneer)
</UL>

<P><STRONG><a name="[24c]"></a>osal_memdup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPairingCompleteCB (via Veneer)
</UL>

<P><STRONG><a name="[15d]"></a>osal_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_SetNumPrepareWrites (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq (via Veneer)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB (via Veneer)
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ParamsInit (via Veneer)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_UpdateAdvertisingData (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_Init (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_VerifyAuthenSig (via Veneer)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingReq (via Veneer)
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo (via Veneer)
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderProcessLTKReq (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifySignal (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifyData (via Veneer)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattNotifyEvent (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapAllocAdvRecs (via Veneer)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Remove (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendPairingReqEvent (via Veneer)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendBondCompleteEvent (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendAuthEvent (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendEstLinkEvent (via Veneer)
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSetPairingReqRsp (via Veneer)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1new (via Veneer)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_ah (via Veneer)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_CMAC (via Veneer)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_subkey (via Veneer)
</UL>

<P><STRONG><a name="[1ea]"></a>osal_msg_allocate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent (via Veneer)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessRandComplete (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifySignal (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifyData (via Veneer)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capEncapSendData (via Veneer)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattNotifyEvent (via Veneer)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvEnableStatus (via Veneer)
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvDataStatus (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendMakeDiscEvent (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendPairingReqEvent (via Veneer)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendBondCompleteEvent (via Veneer)
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPasskeyNeededCB (via Veneer)
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendTerminateEvent (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendAuthEvent (via Veneer)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapUpdateConnSignCounter (via Veneer)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessRandomAddrComplete (via Veneer)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendDeviceInitDoneEvent (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendEstLinkEvent (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendLinkUpdateEvent (via Veneer)
</UL>

<P><STRONG><a name="[1ac]"></a>osal_msg_deallocate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent (via Veneer)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_ProcessEvent (via Veneer)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_ProcessEvent (via Veneer)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ProcessEvent (via Veneer)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_ProcessEvent (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ProcessEvent (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[1aa]"></a>osal_msg_receive</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent (via Veneer)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_ProcessEvent (via Veneer)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_ProcessEvent (via Veneer)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ProcessEvent (via Veneer)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_ProcessEvent (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ProcessEvent (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[1cb]"></a>osal_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent (via Veneer)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_ProcessEvent (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ProcessEvent (via Veneer)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessRandComplete (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifySignal (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifyData (via Veneer)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capEncapSendData (via Veneer)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattNotifyEvent (via Veneer)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvEnableStatus (via Veneer)
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvDataStatus (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendMakeDiscEvent (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendPairingReqEvent (via Veneer)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendBondCompleteEvent (via Veneer)
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPasskeyNeededCB (via Veneer)
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendTerminateEvent (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendAuthEvent (via Veneer)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapUpdateConnSignCounter (via Veneer)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessRandomAddrComplete (via Veneer)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendDeviceInitDoneEvent (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendEstLinkEvent (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendLinkUpdateEvent (via Veneer)
</UL>

<P><STRONG><a name="[105]"></a>osal_pwrmgr_device</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[be]"></a>osal_pwrmgr_powerconserve0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_idle_task (via Veneer)
</UL>

<P><STRONG><a name="[2e2]"></a>osal_rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateRandBuf (via Veneer)
</UL>

<P><STRONG><a name="[213]"></a>osal_revmemcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_VerifyAuthenSig (via Veneer)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_GenerateAuthenSig (via Veneer)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_s1 (via Veneer)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1new (via Veneer)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_ah (via Veneer)
</UL>

<P><STRONG><a name="[eb]"></a>osal_set_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_wakeup_handler (via Veneer)
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB (via Veneer)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvControl1 (via Veneer)
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapIncSignCounter (via Veneer)
</UL>

<P><STRONG><a name="[1c4]"></a>osal_start_reload_timer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_rtc_init (via Veneer)
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_timer_start (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_mainloop_timer_start (via Veneer)
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pin_handler (via Veneer)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_MakeDiscoverable (via Veneer)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvEnableStatus (via Veneer)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessRandomAddrComplete (via Veneer)
</UL>

<P><STRONG><a name="[106]"></a>osal_start_system</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
</UL>

<P><STRONG><a name="[ec]"></a>osal_start_timerEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_timer_start (via Veneer)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate (via Veneer)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvControl1 (via Veneer)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvEnableStatus (via Veneer)
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessAdvertisingEvt (via Veneer)
</UL>

<P><STRONG><a name="[ea]"></a>osal_stop_timerEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_rtc_uninit (via Veneer)
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_timer_stop (via Veneer)
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpt_key_state_handler (via Veneer)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_mainloop_timer_stop (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ProcessEvent (via Veneer)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_EndDiscoverable (via Veneer)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SendUpdateParam (via Veneer)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvControl1 (via Veneer)
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessAdvertisingEvt (via Veneer)
</UL>

<P><STRONG><a name="[1e8]"></a>osal_strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_WriteAttrCB (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
</UL>

<P><STRONG><a name="[10b]"></a>read_LL_remainder_time</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_RTC1 (via Veneer)
</UL>

<P><STRONG><a name="[d2]"></a>read_current_fine_time</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1 (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1 (via Veneer)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRNG_Rand (via Veneer)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_LL_remainder_time1 (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged (via Veneer)
</UL>

<P><STRONG><a name="[108]"></a>rtc_get_counter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_16MXtal_by_rcTracking (via Veneer)
</UL>

<P><STRONG><a name="[18f]"></a>setSleepMode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config (via Veneer)
</UL>

<P><STRONG><a name="[151]"></a>set_max_length</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1 (via Veneer)
</UL>

<P><STRONG><a name="[109]"></a>set_sleep_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_16MXtal_by_rcTracking (via Veneer)
</UL>

<P><STRONG><a name="[16e]"></a>set_timer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1 (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1 (via Veneer)
</UL>

<P><STRONG><a name="[101]"></a>spif_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_spif_wait_nobusy_x (via Veneer)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_flash_info (via Veneer)
</UL>

<P><STRONG><a name="[140]"></a>spif_config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_spif_cache_config (via Veneer)
</UL>

<P><STRONG><a name="[111]"></a>spif_erase_sector</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_sector (via Veneer)
</UL>

<P><STRONG><a name="[102]"></a>spif_rddata</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_spif_wait_nobusy_x (via Veneer)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_flash_info (via Veneer)
</UL>

<P><STRONG><a name="[114]"></a>spif_write_dma</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_by_dma (via Veneer)
</UL>

<P><STRONG><a name="[14f]"></a>update_tx_read_ptr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_generateTxBuffer1 (via Veneer)
</UL>

<P><STRONG><a name="[184]"></a>zigbee_crc16_gen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, bb_rom_sym_m0.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_zigbee_pkt_gen (via Veneer)
</UL>

<P><STRONG><a name="[154]"></a>init_config</STRONG> (Thumb, 586 bytes, Stack size 24 bytes, patch.o(_section_xip_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = init_config
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSleep (via Veneer)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSleepMode (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[191]"></a>TRNG_INIT</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, patch.o(_section_xip_code_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRNG_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRNG_Rand
</UL>

<P><STRONG><a name="[192]"></a>TRNG_Rand</STRONG> (Thumb, 152 bytes, Stack size 64 bytes, patch.o(_section_xip_code_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_AES128_Encrypt (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_fine_time (via Veneer)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRNG_INIT
</UL>

<P><STRONG><a name="[34]"></a>ATT_BuildErrorRsp</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, att_util.o(i.ATT_BuildErrorRsp))
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_ErrorRsp)
</UL>
<P><STRONG><a name="[35]"></a>ATT_BuildExchangeMTURsp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, att_util.o(i.ATT_BuildExchangeMTURsp))
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_ExchangeMTURsp)
</UL>
<P><STRONG><a name="[36]"></a>ATT_BuildFindByTypeValueRsp</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, att_util.o(i.ATT_BuildFindByTypeValueRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATT_BuildFindByTypeValueRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_FindByTypeValueRsp)
</UL>
<P><STRONG><a name="[37]"></a>ATT_BuildFindInfoRsp</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, att_util.o(i.ATT_BuildFindInfoRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ATT_BuildFindInfoRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_FindInfoRsp)
</UL>
<P><STRONG><a name="[38]"></a>ATT_BuildHandleValueInd</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, att_util.o(i.ATT_BuildHandleValueInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATT_BuildHandleValueInd
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_HandleValueNoti)
</UL>
<P><STRONG><a name="[39]"></a>ATT_BuildPrepareWriteRsp</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, att_util.o(i.ATT_BuildPrepareWriteRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATT_BuildPrepareWriteRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_PrepareWriteRsp)
</UL>
<P><STRONG><a name="[3a]"></a>ATT_BuildReadBlobRsp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, att_util.o(i.ATT_BuildReadBlobRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATT_BuildReadBlobRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_ReadBlobRsp)
</UL>
<P><STRONG><a name="[3b]"></a>ATT_BuildReadByGrpTypeRsp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, att_util.o(i.ATT_BuildReadByGrpTypeRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATT_BuildReadByGrpTypeRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_ReadByGrpTypeRsp)
</UL>
<P><STRONG><a name="[3c]"></a>ATT_BuildReadByTypeRsp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, att_util.o(i.ATT_BuildReadByTypeRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATT_BuildReadByTypeRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_ReadByTypeRsp)
</UL>
<P><STRONG><a name="[3d]"></a>ATT_BuildReadMultiRsp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, att_util.o(i.ATT_BuildReadMultiRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATT_BuildReadMultiRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_ReadMultiRsp)
</UL>
<P><STRONG><a name="[3e]"></a>ATT_BuildReadRsp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, att_util.o(i.ATT_BuildReadRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATT_BuildReadRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> att_server.o(i.ATT_ReadRsp)
</UL>
<P><STRONG><a name="[194]"></a>ATT_CompareUUID</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, att_util.o(i.ATT_CompareUUID))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ConvertUUIDto128
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterService
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessReadByGrpTypeReq
</UL>

<P><STRONG><a name="[195]"></a>ATT_ConvertUUIDto128</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, att_util.o(i.ATT_ConvertUUIDto128))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_CompareUUID
</UL>

<P><STRONG><a name="[196]"></a>ATT_ErrorRsp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, att_server.o(i.ATT_ErrorRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_ErrorRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessRxData
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServerProcessMsgCB
</UL>

<P><STRONG><a name="[198]"></a>ATT_ExchangeMTURsp</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, att_server.o(i.ATT_ExchangeMTURsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = ATT_ExchangeMTURsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_UpdateMtuSize
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[19a]"></a>ATT_ExecuteWriteRsp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, att_server.o(i.ATT_ExecuteWriteRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_ExecuteWriteRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
</UL>

<P><STRONG><a name="[19b]"></a>ATT_FindByTypeValueRsp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, att_server.o(i.ATT_FindByTypeValueRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_FindByTypeValueRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
</UL>

<P><STRONG><a name="[19c]"></a>ATT_FindInfoRsp</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, att_server.o(i.ATT_FindInfoRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_FindInfoRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessFindInfoReq
</UL>

<P><STRONG><a name="[2ad]"></a>ATT_GetCurrentMTUSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, att_util.o(i.ATT_GetCurrentMTUSize))
<BR><BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_notify
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capPktToSegmentBuff
</UL>

<P><STRONG><a name="[19d]"></a>ATT_HandleValueNoti</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, att_server.o(i.ATT_HandleValueNoti))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Notification
</UL>

<P><STRONG><a name="[1f1]"></a>ATT_InitMtuSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, att_util.o(i.ATT_InitMtuSize))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Init
</UL>

<P><STRONG><a name="[7c]"></a>ATT_ParseExchangeMTUReq</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, att_util.o(i.ATT_ParseExchangeMTUReq))
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>ATT_ParseExecuteWriteReq</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, att_util.o(i.ATT_ParseExecuteWriteReq))
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>ATT_ParseFindByTypeValueReq</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, att_util.o(i.ATT_ParseFindByTypeValueReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ATT_ParseFindByTypeValueReq
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>ATT_ParseFindInfoReq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, att_util.o(i.ATT_ParseFindInfoReq))
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[19e]"></a>ATT_ParsePacket</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, att_util.o(i.ATT_ParsePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = ATT_ParsePacket &rArr; SM_VerifyAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_VerifyAuthenSig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessRxData
</UL>

<P><STRONG><a name="[8c]"></a>ATT_ParsePrepareWriteReq</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, att_util.o(i.ATT_ParsePrepareWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATT_ParsePrepareWriteReq
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>ATT_ParseReadBlobReq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, att_util.o(i.ATT_ParseReadBlobReq))
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>ATT_ParseReadByTypeReq</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, att_util.o(i.ATT_ParseReadByTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATT_ParseReadByTypeReq
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>ATT_ParseReadMultiReq</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, att_util.o(i.ATT_ParseReadMultiReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ATT_ParseReadMultiReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>ATT_ParseReadReq</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, att_util.o(i.ATT_ParseReadReq))
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>ATT_ParseWriteReq</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, att_util.o(i.ATT_ParseWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ATT_ParseWriteReq
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[1a0]"></a>ATT_PrepareWriteRsp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, att_server.o(i.ATT_PrepareWriteRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_PrepareWriteRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
</UL>

<P><STRONG><a name="[1a1]"></a>ATT_ReadBlobRsp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, att_server.o(i.ATT_ReadBlobRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_ReadBlobRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[1a2]"></a>ATT_ReadByGrpTypeRsp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, att_server.o(i.ATT_ReadByGrpTypeRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_ReadByGrpTypeRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
</UL>

<P><STRONG><a name="[1a3]"></a>ATT_ReadByTypeRsp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, att_server.o(i.ATT_ReadByTypeRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_ReadByTypeRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
</UL>

<P><STRONG><a name="[1a4]"></a>ATT_ReadMultiRsp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, att_server.o(i.ATT_ReadMultiRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_ReadMultiRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq
</UL>

<P><STRONG><a name="[1a5]"></a>ATT_ReadRsp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, att_server.o(i.ATT_ReadRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_ReadRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[223]"></a>ATT_SetMTUSizeMax</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, att_util.o(i.ATT_SetMTUSizeMax))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init
</UL>

<P><STRONG><a name="[199]"></a>ATT_UpdateMtuSize</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, att_util.o(i.ATT_UpdateMtuSize))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExchangeMTURsp
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessDisconnectCompleteEvt
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnectionCompleteEvt
</UL>

<P><STRONG><a name="[1a6]"></a>ATT_WriteRsp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, att_server.o(i.ATT_WriteRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ATT_WriteRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
</UL>

<P><STRONG><a name="[1a7]"></a>GAPRole_GetParameter</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, peripheral.o(i.GAPRole_GetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAPRole_GetParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_notify
</UL>

<P><STRONG><a name="[165]"></a>GAPRole_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, peripheral.o(i.GAPRole_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAPRole_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_RegisterForHCIMsgs
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[78]"></a>GAPRole_ProcessEvent</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, peripheral.o(i.GAPRole_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GAPRole_ProcessEvent &rArr; GAPRole_SendUpdateParam &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_ReadRssiCmd (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_MakeDiscoverable
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SendUpdateParam
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[225]"></a>GAPRole_RegisterAppCBs</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, peripheral.o(i.GAPRole_RegisterAppCBs))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init
</UL>

<P><STRONG><a name="[1b0]"></a>GAPRole_SendUpdateParam</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, peripheral.o(i.GAPRole_SendUpdateParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GAPRole_SendUpdateParam &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
</UL>

<P><STRONG><a name="[1b2]"></a>GAPRole_SetParameter</STRONG> (Thumb, 518 bytes, Stack size 32 bytes, peripheral.o(i.GAPRole_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_get_timeoutEx (via Veneer)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_UpdateAdvertisingData
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_EndDiscoverable
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_stop_adv
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_start_adv
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_adv_param
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_conn_param
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_advdata_and_scanrsp
</UL>

<P><STRONG><a name="[1b7]"></a>GAPRole_StartDevice</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, peripheral.o(i.GAPRole_StartDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GAPRole_StartDevice &rArr; GAP_DeviceInit &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_ProcessEvent
</UL>

<P><STRONG><a name="[1b1]"></a>GAPRole_TerminateConnection</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, peripheral.o(i.GAPRole_TerminateConnection))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GAPRole_TerminateConnection &rArr; GAP_TerminateLinkReq &rArr; disconnectNext &rArr; linkDB_FindFirst
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_TerminateLinkReq
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_disconnect
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
</UL>

<P><STRONG><a name="[1b8]"></a>GAP_DeviceInit</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, gap.o(i.GAP_DeviceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GAP_DeviceInit &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_ResponderInit
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SecParamsInit
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_PeriDevMgrInit
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ParamsInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_StartDevice
</UL>

<P><STRONG><a name="[1b3]"></a>GAP_EndDiscoverable</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gap_peridevmgr.o(i.GAP_EndDiscoverable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAP_EndDiscoverable
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetAdvEnableCmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessAdvertisingEvt
</UL>

<P><STRONG><a name="[1a8]"></a>GAP_GetParamValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gap_configmgr.o(i.GAP_GetParamValue))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ProcessEvent
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_MakeDiscoverable
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvEnableStatus
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSetAdvParams
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendPairingReqEvent
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendBondCompleteEvent
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPasskeyNeededCB
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendAuthEvent
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapUpdateConnSignCounter
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParsePairingReq
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smStartRspTimer
</UL>

<P><STRONG><a name="[163]"></a>GAP_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gap_task.o(i.GAP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAP_Init &rArr; linkDB_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_GAPTaskRegister (via Veneer)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Init
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_RegisterApp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[1ad]"></a>GAP_MakeDiscoverable</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, gap_peridevmgr.o(i.GAP_MakeDiscoverable))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = GAP_MakeDiscoverable &rArr; gapSetAdvParams &rArr; isLimitedDiscoverableMode &rArr; gapFindADType
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_reload_timer (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_NumActiveConnections
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSetAdvParams
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFreeAdvertState
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
</UL>

<P><STRONG><a name="[1c2]"></a>GAP_NumActiveConnections</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gap_task.o(i.GAP_NumActiveConnections))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GAP_NumActiveConnections
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_NumActive
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_MakeDiscoverable
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSetAdvParams
</UL>

<P><STRONG><a name="[1ba]"></a>GAP_ParamsInit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gap_configmgr.o(i.GAP_ParamsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAP_ParamsInit
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_ReadBDADDRCmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit
</UL>

<P><STRONG><a name="[1bc]"></a>GAP_PeriDevMgrInit</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gap_peridevmgr.o(i.GAP_PeriDevMgrInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GAP_PeriDevMgrInit &rArr; gapAllocAdvRecs
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRegisterPeripheral
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapAllocAdvRecs
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit
</UL>

<P><STRONG><a name="[76]"></a>GAP_ProcessEvent</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, gap_task.o(i.GAP_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GAP_ProcessEvent &rArr; gapProcessOSALMsg &rArr; L2CAP_CmdReject &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessOSALMsg
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapIsAdvertising
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_CalcRandomAddr
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessNewAddr
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapGetIRK
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[1a9]"></a>GAP_RegisterForHCIMsgs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_task.o(i.GAP_RegisterForHCIMsgs))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_Init
</UL>

<P><STRONG><a name="[1bb]"></a>GAP_SecParamsInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gap_configmgr.o(i.GAP_SecParamsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GAP_SecParamsInit &rArr; smGenerateRandBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateRandBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit
</UL>

<P><STRONG><a name="[1b6]"></a>GAP_SetParamValue</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gap_configmgr.o(i.GAP_SetParamValue))
<BR><BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_adv_param
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init
</UL>

<P><STRONG><a name="[1b9]"></a>GAP_TerminateLinkReq</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gap_linkmgr.o(i.GAP_TerminateLinkReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GAP_TerminateLinkReq &rArr; disconnectNext &rArr; linkDB_FindFirst
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_DisconnectCmd (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnectNext
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection
</UL>

<P><STRONG><a name="[1b4]"></a>GAP_UpdateAdvertisingData</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gap_peridevmgr.o(i.GAP_UpdateAdvertisingData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GAP_UpdateAdvertisingData
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetScanRspDataCmd (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetAdvDataCmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg
</UL>

<P><STRONG><a name="[1d7]"></a>GATTServApp_AddService</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gattservapp.o(i.GATTServApp_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GATTServApp_AddService &rArr; GATTServApp_RegisterService &rArr; GATT_RegisterService &rArr; ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init
</UL>

<P><STRONG><a name="[166]"></a>GATTServApp_Init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GATTServApp_Init &rArr; gattServApp_SetNumPrepareWrites
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Register
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterForReq
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_SetNumPrepareWrites
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[1d9]"></a>GATTServApp_InitCharCfg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_InitCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_conn_status_cb
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB
</UL>

<P><STRONG><a name="[1de]"></a>GATTServApp_ProcessCCCWriteReq</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_ProcessCCCWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GATTServApp_ProcessCCCWriteReq &rArr; GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteCharCfg
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_write_attr_cb
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_WriteAttrCB
</UL>

<P><STRONG><a name="[79]"></a>GATTServApp_ProcessEvent</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = GATTServApp_ProcessEvent &rArr; gattServApp_ProcessMsg &rArr; gattServApp_ProcessReadByTypeReq &rArr; ATT_ReadByTypeRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[1e3]"></a>GATTServApp_ReadAttr</STRONG> (Thumb, 534 bytes, Stack size 64 bytes, gattservapp.o(i.GATTServApp_ReadAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GATTServApp_ReadAttr &rArr; GATT_FindNextAttr &rArr; GATT_FindHandleUUID &rArr; ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_CompareUUID
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
</UL>

<P><STRONG><a name="[1df]"></a>GATTServApp_ReadCharCfg</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gattservapp.o(i.GATTServApp_ReadCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_notify
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>

<P><STRONG><a name="[1d8]"></a>GATTServApp_RegisterService</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_RegisterService))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GATTServApp_RegisterService &rArr; GATT_RegisterService &rArr; ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_gen_AddService
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_AddService
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_AddService
</UL>

<P><STRONG><a name="[1e1]"></a>GATTServApp_SendCCCUpdatedEvent</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_SendCCCUpdatedEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>

<P><STRONG><a name="[1eb]"></a>GATTServApp_WriteAttr</STRONG> (Thumb, 62 bytes, Stack size 48 bytes, gattservapp.o(i.GATTServApp_WriteAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GATTServApp_WriteAttr &rArr; GATT_FindHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
</UL>

<P><STRONG><a name="[1e0]"></a>GATTServApp_WriteCharCfg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_WriteCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GATTServApp_WriteCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>

<P><STRONG><a name="[1ec]"></a>GATT_AppCompletedMsg</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gatt_task.o(i.GATT_AppCompletedMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATT_AppCompletedMsg &rArr; L2CAP_HostNumCompletedPkts
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HostNumCompletedPkts
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[1e6]"></a>GATT_FindHandle</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, gatt_server.o(i.GATT_FindHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GATT_FindHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessWriteReq
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessReadReq
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessReadMultiReq
</UL>

<P><STRONG><a name="[1ee]"></a>GATT_FindHandleUUID</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, gatt_server.o(i.GATT_FindHandleUUID))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GATT_FindHandleUUID &rArr; ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_CompareUUID
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessReadByTypeReq
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessReadByGrpTypeReq
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessFindInfoReq
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessFindByTypeValueReq
</UL>

<P><STRONG><a name="[1e7]"></a>GATT_FindNextAttr</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gatt_server.o(i.GATT_FindNextAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GATT_FindNextAttr &rArr; GATT_FindHandleUUID &rArr; ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_CompareUUID
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServiceLastHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
</UL>

<P><STRONG><a name="[164]"></a>GATT_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gatt_task.o(i.GATT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATT_Init &rArr; GATT_InitServer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_InitMtuSize
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_InitServer
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_RegisterApp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[1f0]"></a>GATT_InitServer</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gatt_server.o(i.GATT_InitServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GATT_InitServer
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Register
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattRegisterServer
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Init
</UL>

<P><STRONG><a name="[1f3]"></a>GATT_Notification</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gatt_server.o(i.GATT_Notification))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_HandleValueNoti
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Authen
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattGetServerStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_notify
</UL>

<P><STRONG><a name="[77]"></a>GATT_ProcessEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gatt_task.o(i.GATT_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = GATT_ProcessEvent &rArr; gattProcessRxData &rArr; ATT_ErrorRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessRxData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[1db]"></a>GATT_RegisterForReq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gatt_server.o(i.GATT_RegisterForReq))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
</UL>

<P><STRONG><a name="[1e9]"></a>GATT_RegisterService</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, gatt_server.o(i.GATT_RegisterService))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GATT_RegisterService &rArr; ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_CompareUUID
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>

<P><STRONG><a name="[275]"></a>GATT_ServiceNumAttrs</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gatt_server.o(i.GATT_ServiceNumAttrs))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServiceLastHandle
</UL>

<P><STRONG><a name="[1f7]"></a>GATT_VerifyReadPermissions</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gatt_server.o(i.GATT_VerifyReadPermissions))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATT_VerifyReadPermissions &rArr; linkDB_Authen
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Authen
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessReadReq
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessReadMultiReq
</UL>

<P><STRONG><a name="[1f8]"></a>GATT_VerifyWritePermissions</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, gatt_server.o(i.GATT_VerifyWritePermissions))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATT_VerifyWritePermissions &rArr; linkDB_Authen
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Authen
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessWriteReq
</UL>

<P><STRONG><a name="[1f9]"></a>GGS_AddService</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gapgattserver.o(i.GGS_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GGS_AddService &rArr; GATTServApp_RegisterService &rArr; GATT_RegisterService &rArr; ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init
</UL>

<P><STRONG><a name="[1fa]"></a>GGS_SetParameter</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, gapgattserver.o(i.GGS_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GGS_SetParameter &rArr; ggs_SetAttrWPermit
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_SetAttrWPermit
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_device_name
</UL>

<P><STRONG><a name="[42]"></a>L2CAP_BuildCmdReject</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, l2cap_util.o(i.L2CAP_BuildCmdReject))
<BR>[Address Reference Count : 1]<UL><LI> l2cap_if.o(i.L2CAP_CmdReject)
</UL>
<P><STRONG><a name="[1fd]"></a>L2CAP_CmdReject</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, l2cap_if.o(i.L2CAP_CmdReject))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = L2CAP_CmdReject &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessSignal
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessOSALMsg
</UL>

<P><STRONG><a name="[1ff]"></a>L2CAP_ConnParamUpdateReq</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, l2cap_if.o(i.L2CAP_ConnParamUpdateReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendReq
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
</UL>

<P><STRONG><a name="[201]"></a>L2CAP_Fragment_bm_alloc</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, l2cap_util.o(i.L2CAP_Fragment_bm_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TX_bm_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capPktToSegmentBuff
</UL>

<P><STRONG><a name="[1ed]"></a>L2CAP_HostNumCompletedPkts</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, l2cap_if.o(i.L2CAP_HostNumCompletedPkts))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = L2CAP_HostNumCompletedPkts
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_HostNumCompletedPktCmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_AppCompletedMsg
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRxData
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattProcessRxData
</UL>

<P><STRONG><a name="[161]"></a>L2CAP_Init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, l2cap_task.o(i.L2CAP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = L2CAP_Init &rArr; l2capSarBufReset
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_L2CAPTaskRegister (via Veneer)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSarBufReset
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[2b6]"></a>L2CAP_ParseParamUpdateReq</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, l2cap_util.o(i.L2CAP_ParseParamUpdateReq))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessSignal
</UL>

<P><STRONG><a name="[74]"></a>L2CAP_ProcessEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, l2cap_task.o(i.L2CAP_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = L2CAP_ProcessEvent &rArr; l2capProcessRxData &rArr; l2capProcessSignal &rArr; L2CAP_CmdReject &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRxData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[207]"></a>L2CAP_ReassemblePkt_Reset</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, l2cap_util.o(i.L2CAP_ReassemblePkt_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = L2CAP_ReassemblePkt_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capParsePacket
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessDisconnectCompleteEvt
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnectionCompleteEvt
</UL>

<P><STRONG><a name="[1c1]"></a>L2CAP_RegisterApp</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, l2cap_if.o(i.L2CAP_RegisterApp))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Init
</UL>

<P><STRONG><a name="[209]"></a>L2CAP_SegmentPkt_Reset</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, l2cap_util.o(i.L2CAP_SegmentPkt_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = L2CAP_SegmentPkt_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessDisconnectCompleteEvt
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnectionCompleteEvt
</UL>

<P><STRONG><a name="[20a]"></a>L2CAP_SendData</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, l2cap_if.o(i.L2CAP_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capEncapSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>

<P><STRONG><a name="[20d]"></a>L2CAP_bm_alloc</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, l2cap_util.o(i.L2CAP_bm_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L2CAP_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_bm_alloc (via Veneer)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_adjust_header (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capParsePacket
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendCmd
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>

<P><STRONG><a name="[1ce]"></a>SM_CalcRandomAddr</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, sm_mgr.o(i.SM_CalcRandomAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SM_CalcRandomAddr &rArr; sm_ah &rArr; smEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateRandBuf
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_ah
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ProcessEvent
</UL>

<P><STRONG><a name="[211]"></a>SM_GenerateAuthenSig</STRONG> (Thumb, 154 bytes, Stack size 88 bytes, sm_mgr.o(i.SM_GenerateAuthenSig))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_revmemcpy (via Veneer)
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapIncSignCounter
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapGetSignCounter
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapGetSRK
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_CMAC
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
</UL>

<P><STRONG><a name="[162]"></a>SM_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sm_task.o(i.SM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Register
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_SMPTaskRegister (via Veneer)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_RegisterApp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[75]"></a>SM_ProcessEvent</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, sm_task.o(i.SM_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = SM_ProcessEvent &rArr; smProcessOSALMsg &rArr; smProcessDataMsg &rArr; smSendFailAndEnd &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessOSALMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[1bd]"></a>SM_ResponderInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sm_rsppairing.o(i.SM_ResponderInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SM_ResponderInit
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smRegisterResponder
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit
</UL>

<P><STRONG><a name="[19f]"></a>SM_VerifyAuthenSig</STRONG> (Thumb, 206 bytes, Stack size 88 bytes, sm_mgr.o(i.SM_VerifyAuthenSig))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = SM_VerifyAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_revmemcpy (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapUpdateConnSignCounter
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_CMAC
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ParsePacket
</UL>

<P><STRONG><a name="[167]"></a>SimpleBLEPeripheral_Init</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, simplebleperipheral.o(i.SimpleBLEPeripheral_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = SimpleBLEPeripheral_Init &rArr; ty_ble_set_conn_param &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_adv_param
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_conn_param
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_gen_AddService
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_device_name
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_RegisterForHCIMsgs
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_AddService
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llInitFeatureSetDLE (via Veneer)
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llInitFeatureSet2MPHY (via Veneer)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetDefaultPhyMode (via Veneer)
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_SetMTUSizeMax
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_RegisterAppCBs
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_AddService
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite8 (via Veneer)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[7a]"></a>SimpleBLEPeripheral_ProcessEvent</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, simplebleperipheral.o(i.SimpleBLEPeripheral_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = SimpleBLEPeripheral_ProcessEvent &rArr; tuya_ble_main_tasks_exec &rArr; tuya_sched_execute &rArr; tuya_ble_event_process &rArr; tuya_ble_handle_ble_cmd_evt &rArr; tuya_ble_evt_process &rArr; tuya_ble_app_production_test_process &rArr; tuya_ble_app_sdk_test_process &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_start_adv
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_main_tasks_exec
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_key_press_timeout_handler
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_disconnect_handler
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_connect_handler
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_rtc_handler
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_ReadResolvingListSizeCmd (via Veneer)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_StartDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[197]"></a>attSendMsg</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, att_util.o(i.attSendMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_GenerateAuthenSig
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_bm_alloc
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_SendData
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_WriteRsp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadRsp
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadMultiRsp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadByTypeRsp
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadByGrpTypeRsp
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadBlobRsp
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_PrepareWriteRsp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_FindByTypeValueRsp
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExecuteWriteRsp
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExchangeMTURsp
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ErrorRsp
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_HandleValueNoti
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_FindInfoRsp
</UL>

<P><STRONG><a name="[242]"></a>data_2_klvlist</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, tuya_ble_mutli_tsf_protocol.o(i.data_2_klvlist))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = data_2_klvlist &rArr; free_klv_list &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_klv_list
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_with_time_send
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_send
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_write_req
</UL>

<P><STRONG><a name="[121]"></a>dbg_printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, my_printf.o(i.dbg_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_start
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_gen_AddService
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_wait_tx_completed (via Veneer)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_load_calibration_value
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_xmit_polling
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
</UL>

<P><STRONG><a name="[158]"></a>dbg_printf_init</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, my_printf.o(i.dbg_printf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dbg_printf_init &rArr; hal_uart_init &rArr; uart_hw_init &rArr; uart_hw_deinit &rArr; hal_clk_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[243]"></a>free_klv_list</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tuya_ble_mutli_tsf_protocol.o(i.free_klv_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = free_klv_list &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_with_time_send
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_send
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_write_req
</UL>

<P><STRONG><a name="[25f]"></a>gapAddAddrAdj</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gap_configmgr.o(i.gapAddAddrAdj))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSetAdvParams
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessNewAddr
</UL>

<P><STRONG><a name="[255]"></a>gapDetermineAddrType</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gap_configmgr.o(i.gapDetermineAddrType))
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnectionCompleteEvt
</UL>

<P><STRONG><a name="[247]"></a>gapFindADType</STRONG> (Thumb, 72 bytes, Stack size 36 bytes, gap_devmgr.o(i.gapFindADType))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gapFindADType
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapValidADType
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isLimitedDiscoverableMode
</UL>

<P><STRONG><a name="[24a]"></a>gapFreeEstLink</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gap_linkmgr.o(i.gapFreeEstLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapFreeEstLink
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnectionCompleteEvt
</UL>

<P><STRONG><a name="[2fe]"></a>gapGetDevAddress</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gap_configmgr.o(i.gapGetDevAddress))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
</UL>

<P><STRONG><a name="[2fd]"></a>gapGetDevAddressMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_configmgr.o(i.gapGetDevAddressMode))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
</UL>

<P><STRONG><a name="[1cd]"></a>gapGetIRK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_configmgr.o(i.gapGetIRK))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ProcessEvent
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
</UL>

<P><STRONG><a name="[214]"></a>gapGetSRK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_configmgr.o(i.gapGetSRK))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_GenerateAuthenSig
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
</UL>

<P><STRONG><a name="[212]"></a>gapGetSignCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gap_configmgr.o(i.gapGetSignCounter))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_GenerateAuthenSig
</UL>

<P><STRONG><a name="[216]"></a>gapIncSignCounter</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gap_configmgr.o(i.gapIncSignCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapIncSignCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_GenerateAuthenSig
</UL>

<P><STRONG><a name="[1cc]"></a>gapIsAdvertising</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gap_devmgr.o(i.gapIsAdvertising))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ProcessEvent
</UL>

<P><STRONG><a name="[24b]"></a>gapPairingCompleteCB</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, gap_linkmgr.o(i.gapPairingCompleteCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memdup (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendAuthEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
</UL>

<P><STRONG><a name="[24e]"></a>gapPasskeyNeededCB</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, gap_linkmgr.o(i.gapPasskeyNeededCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapPasskeyNeededCB
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingReq
</UL>

<P><STRONG><a name="[252]"></a>gapProcessConnUpdateCompleteEvt</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gap_linkmgr.o(i.gapProcessConnUpdateCompleteEvt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapProcessConnUpdateCompleteEvt &rArr; gapSendLinkUpdateEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendLinkUpdateEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessOSALMsg
</UL>

<P><STRONG><a name="[254]"></a>gapProcessConnectionCompleteEvt</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, gap_linkmgr.o(i.gapProcessConnectionCompleteEvt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gapProcessConnectionCompleteEvt &rArr; linkDB_Add &rArr; reportStatusChange
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapDetermineAddrType
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_UpdateMtuSize
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Add
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_SegmentPkt_Reset
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ReassemblePkt_Reset
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendTerminateEvent
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnectNext
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendEstLinkEvent
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFreeEstLink
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessOSALMsg
</UL>

<P><STRONG><a name="[259]"></a>gapProcessDisconnectCompleteEvt</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gap_linkmgr.o(i.gapProcessDisconnectCompleteEvt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapProcessDisconnectCompleteEvt &rArr; linkDB_Remove &rArr; reportStatusChange
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_UpdateMtuSize
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Remove
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_SegmentPkt_Reset
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ReassemblePkt_Reset
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendTerminateEvent
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFreeAuthLink
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnectNext
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessOSALMsg
</UL>

<P><STRONG><a name="[1cf]"></a>gapProcessNewAddr</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gap_configmgr.o(i.gapProcessNewAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapProcessNewAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetRandomAddressCmd (via Veneer)
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapAddAddrAdj
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ProcessEvent
</UL>

<P><STRONG><a name="[25c]"></a>gapProcessRandomAddrComplete</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gap_configmgr.o(i.gapProcessRandomAddrComplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapProcessRandomAddrComplete
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_reload_timer (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessHCICmdCompleteEvt
</UL>

<P><STRONG><a name="[25e]"></a>gapReadBD_ADDRStatus</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gap_configmgr.o(i.gapReadBD_ADDRStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapReadBD_ADDRStatus &rArr; gapSendDeviceInitDoneEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_ReadBufSizeCmd (via Veneer)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendDeviceInitDoneEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessHCICmdCompleteEvt
</UL>

<P><STRONG><a name="[25d]"></a>gapReadBufSizeCmdStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gap_configmgr.o(i.gapReadBufSizeCmdStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapReadBufSizeCmdStatus &rArr; gapSendDeviceInitDoneEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendDeviceInitDoneEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessHCICmdCompleteEvt
</UL>

<P><STRONG><a name="[1c8]"></a>gapRegisterPeripheral</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_task.o(i.gapRegisterPeripheral))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_PeriDevMgrInit
</UL>

<P><STRONG><a name="[264]"></a>gapSendBondCompleteEvent</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gap_linkmgr.o(i.gapSendBondCompleteEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapSendBondCompleteEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessEncryptChange
</UL>

<P><STRONG><a name="[253]"></a>gapSendLinkUpdateEvent</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, gap_linkmgr.o(i.gapSendLinkUpdateEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapSendLinkUpdateEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnUpdateCompleteEvt
</UL>

<P><STRONG><a name="[266]"></a>gapSendPairingReqEvent</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, gap_linkmgr.o(i.gapSendPairingReqEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapSendPairingReqEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
</UL>

<P><STRONG><a name="[7]"></a>gapSetAdvParams</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, gap_peridevmgr.o(i.gapSetAdvParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = gapSetAdvParams &rArr; isLimitedDiscoverableMode &rArr; gapFindADType
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetAdvParamCmd (via Veneer)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_NumActiveConnections
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isLimitedDiscoverableMode
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapAddAddrAdj
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_MakeDiscoverable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gap_peridevmgr.o(.data)
</UL>
<P><STRONG><a name="[24f]"></a>gapSetAdvParamsStatus</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gap_peridevmgr.o(i.gapSetAdvParamsStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapSetAdvParamsStatus &rArr; gapSendMakeDiscEvent &rArr; gapFreeAdvertState
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_SetAdvEnableCmd (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendMakeDiscEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPeriProcessHCICmdCompleteEvt
</UL>

<P><STRONG><a name="[21a]"></a>gapUpdateConnSignCounter</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gap_configmgr.o(i.gapUpdateConnSignCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapUpdateConnSignCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_VerifyAuthenSig
</UL>

<P><STRONG><a name="[248]"></a>gapValidADType</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gap_devmgr.o(i.gapValidADType))
<BR><BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFindADType
</UL>

<P><STRONG><a name="[251]"></a>gapWriteAdvDataStatus</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gap_peridevmgr.o(i.gapWriteAdvDataStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapWriteAdvDataStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPeriProcessHCICmdCompleteEvt
</UL>

<P><STRONG><a name="[250]"></a>gapWriteAdvEnableStatus</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, gap_peridevmgr.o(i.gapWriteAdvEnableStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = gapWriteAdvEnableStatus &rArr; isLimitedDiscoverableMode &rArr; gapFindADType
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_reload_timer (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isLimitedDiscoverableMode
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendMakeDiscEvent
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFreeAdvertState
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPeriProcessHCICmdCompleteEvt
</UL>

<P><STRONG><a name="[26a]"></a>gattNotifyEvent</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, gatt_task.o(i.gattNotifyEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gattNotifyEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServerProcessMsgCB
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServerHandleConnStatusCB
</UL>

<P><STRONG><a name="[1f2]"></a>gattRegisterServer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gatt_task.o(i.gattRegisterServer))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_InitServer
</UL>

<P><STRONG><a name="[26c]"></a>gattStopTimer</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gatt_task.o(i.gattStopTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gattStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_CbTimerStop (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattResetServerInfo
</UL>

<P><STRONG><a name="[239]"></a>get_trsmitr_frame_total_len</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_mutli_tsf_protocol.o(i.get_trsmitr_frame_total_len))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
</UL>

<P><STRONG><a name="[23d]"></a>get_trsmitr_subpkg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_mutli_tsf_protocol.o(i.get_trsmitr_subpkg))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[23c]"></a>get_trsmitr_subpkg_len</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_mutli_tsf_protocol.o(i.get_trsmitr_subpkg_len))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[47]"></a>hal_ADC_IRQHandler</STRONG> (Thumb, 180 bytes, Stack size 104 bytes, adc.o(i.hal_ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = hal_ADC_IRQHandler &rArr; hal_adc_stop &rArr; hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adc.o(i.hal_adc_start)
</UL>
<P><STRONG><a name="[4a]"></a>hal_GPIO_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gpio.o(i.hal_GPIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_GPIO_IRQHandler &rArr; hal_gpioin_event &rArr; hal_gpio_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(i.hal_gpioin_register)
</UL>
<P><STRONG><a name="[5e]"></a>hal_SPI0_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, spi.o(i.hal_SPI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hal_SPI0_IRQHandler &rArr; spis_int_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spis_int_handle
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spi.o(i.spi_int_enable)
</UL>
<P><STRONG><a name="[5f]"></a>hal_SPI1_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, spi.o(i.hal_SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hal_SPI1_IRQHandler &rArr; spis_int_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spis_int_handle
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spi.o(i.spi_int_enable)
</UL>
<P><STRONG><a name="[282]"></a>hal_adc_config_channel</STRONG> (Thumb, 658 bytes, Stack size 48 bytes, adc.o(i.hal_adc_config_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = hal_adc_config_channel &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_ds_control
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_enable (via Veneer)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sampling_resolution
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_start
</UL>

<P><STRONG><a name="[286]"></a>hal_adc_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, adc.o(i.hal_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hal_adc_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_adcc_cfg
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_init
</UL>

<P><STRONG><a name="[288]"></a>hal_adc_start</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, adc.o(i.hal_adc_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_adc_start &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_start
</UL>

<P><STRONG><a name="[27e]"></a>hal_adc_stop</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, adc.o(i.hal_adc_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = hal_adc_stop &rArr; hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_disable (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_adcc_cfg
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_uninit
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_start
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ADC_IRQHandler
</UL>

<P><STRONG><a name="[22e]"></a>hal_adc_value_cal</STRONG> (Thumb, 294 bytes, Stack size 40 bytes, adc.o(i.hal_adc_value_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = hal_adc_value_cal &rArr; hal_adc_load_calibration_value &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f (via Veneer)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f (via Veneer)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f (via Veneer)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf (via Veneer)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_load_calibration_value
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_evt
</UL>

<P><STRONG><a name="[285]"></a>hal_gpio_cfg_analog_io</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, gpio.o(i.hal_gpio_cfg_analog_io))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_start
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
</UL>

<P><STRONG><a name="[284]"></a>hal_gpio_ds_control</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpio.o(i.hal_gpio_ds_control))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
</UL>

<P><STRONG><a name="[128]"></a>hal_gpio_fmux</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpio.o(i.hal_gpio_fmux))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_close_channel (via Veneer)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_deinit
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_deinit
</UL>

<P><STRONG><a name="[11c]"></a>hal_gpio_fmux_set</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_fmux_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_open_channel (via Veneer)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_pin_init (via Veneer)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_pin_init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_init
</UL>

<P><STRONG><a name="[159]"></a>hal_gpio_init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, gpio.o(i.hal_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hal_gpio_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[179]"></a>hal_gpio_pin2pin3_control</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(i.hal_gpio_pin2pin3_control))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_handler
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_cmd_parse (via Veneer)
</UL>

<P><STRONG><a name="[289]"></a>hal_gpio_pin_init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin2pin3_control
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_disable
</UL>

<P><STRONG><a name="[11d]"></a>hal_gpio_pull_set</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_pull_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_pull_set
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pin_init
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_uninit
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_pin_init (via Veneer)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config (via Veneer)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_low_power_io_init (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_init
</UL>

<P><STRONG><a name="[15a]"></a>hal_gpio_read</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gpio.o(i.hal_gpio_read))
<BR><BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_key_press_get_pin_level
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_sleep_handler
</UL>

<P><STRONG><a name="[290]"></a>hal_gpio_wakeup_set</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gpio.o(i.hal_gpio_wakeup_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_gpio_wakeup_set &rArr; hal_gpio_wakeup_control
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_control
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_sleep_handler
</UL>

<P><STRONG><a name="[291]"></a>hal_gpio_write</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, gpio.o(i.hal_gpio_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_gpio_write &rArr; hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_start
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_handler
</UL>

<P><STRONG><a name="[295]"></a>hal_gpioin_disable</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, gpio.o(i.hal_gpioin_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_gpioin_disable &rArr; hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_register
</UL>

<P><STRONG><a name="[292]"></a>hal_gpioin_enable</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gpio.o(i.hal_gpioin_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = hal_gpioin_enable &rArr; hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_register
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_handler
</UL>

<P><STRONG><a name="[297]"></a>hal_gpioin_register</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gpio.o(i.hal_gpioin_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = hal_gpioin_register &rArr; hal_gpioin_enable &rArr; hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pin_init
</UL>

<P><STRONG><a name="[298]"></a>hal_spi_bus_deinit</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, spi.o(i.hal_spi_bus_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_spi_bus_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_disable (via Veneer)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_spi_disable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_sleep_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_sleep_handler
</UL>

<P><STRONG><a name="[299]"></a>hal_spi_bus_init</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, spi.o(i.hal_spi_bus_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_spi_bus_init &rArr; hal_spi_master_init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_enable (via Veneer)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_enable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_disable
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_pin_init
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_master_init
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_spi_enable
</UL>

<P><STRONG><a name="[29e]"></a>hal_spi_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, spi.o(i.hal_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hal_spi_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_spi_init
</UL>

<P><STRONG><a name="[2a0]"></a>hal_spi_tmod_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, spi.o(i.hal_spi_tmod_set))
<BR><BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit
</UL>

<P><STRONG><a name="[29f]"></a>hal_spi_transmit</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, spi.o(i.hal_spi_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = hal_spi_transmit &rArr; hal_spi_xmit_polling &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock (via Veneer)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_enable
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_tmod_set
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_disable
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_xmit_polling
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_write_fifo
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_spi_readWriteData
</UL>

<P><STRONG><a name="[2a3]"></a>hal_uart_deinit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, uart.o(i.hal_uart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_uart_deinit &rArr; uart_hw_deinit &rArr; hal_clk_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unregister (via Veneer)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart2_uninit
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart2_init
</UL>

<P><STRONG><a name="[245]"></a>hal_uart_init</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, uart.o(i.hal_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_uart_init &rArr; uart_hw_init &rArr; uart_hw_deinit &rArr; hal_clk_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart2_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf_init
</UL>

<P><STRONG><a name="[22d]"></a>hal_uart_send_buff</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart.o(i.hal_uart_send_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_polling
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart2_send
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart_putc
</UL>

<P><STRONG><a name="[17a]"></a>hal_uart_send_byte</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, uart.o(i.hal_uart_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_evt_send (via Veneer)
</UL>

<P><STRONG><a name="[2a8]"></a>hal_uart_set_tx_buf</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, uart.o(i.hal_uart_set_tx_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_set_tx_buf
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart2_init
</UL>

<P><STRONG><a name="[2b8]"></a>l2capAllocChannel</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, l2cap_util.o(i.l2capAllocChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = l2capAllocChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendReq
</UL>

<P><STRONG><a name="[43]"></a>l2capBuildParamUpdateReq</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, l2cap_util.o(i.l2capBuildParamUpdateReq))
<BR>[Address Reference Count : 1]<UL><LI> l2cap_if.o(i.L2CAP_ConnParamUpdateReq)
</UL>
<P><STRONG><a name="[20c]"></a>l2capEncapSendData</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, l2cap_util.o(i.l2capEncapSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_adjust_header (via Veneer)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capPktToSegmentBuff
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSegmentBuffToLinkLayer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_SendData
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendCmd
</UL>

<P><STRONG><a name="[2af]"></a>l2capFindLocalId</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, l2cap_util.o(i.l2capFindLocalId))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = l2capFindLocalId
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRsp
</UL>

<P><STRONG><a name="[2b3]"></a>l2capFreeChannel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, l2cap_util.o(i.l2capFreeChannel))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRsp
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendReq
</UL>

<P><STRONG><a name="[2b7]"></a>l2capHandleRxError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, l2cap_util.o(i.l2capHandleRxError))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessSignal
</UL>

<P><STRONG><a name="[2ab]"></a>l2capNotifyData</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, l2cap_util.o(i.l2capNotifyData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = l2capNotifyData
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRxData
</UL>

<P><STRONG><a name="[2aa]"></a>l2capNotifySignal</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, l2cap_util.o(i.l2capNotifySignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = l2capNotifySignal
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessSignal
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRsp
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capHandleTimerCB
</UL>

<P><STRONG><a name="[2b0]"></a>l2capParseCmdReject</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, l2cap_util.o(i.l2capParseCmdReject))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRsp
</UL>

<P><STRONG><a name="[2ac]"></a>l2capParsePacket</STRONG> (Thumb, 406 bytes, Stack size 24 bytes, l2cap_util.o(i.l2capParsePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = l2capParsePacket &rArr; L2CAP_ReassemblePkt_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_bm_alloc
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_adjust_header (via Veneer)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ReassemblePkt_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRxData
</UL>

<P><STRONG><a name="[2b1]"></a>l2capParseParamUpdateRsp</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, l2cap_util.o(i.l2capParseParamUpdateRsp))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRsp
</UL>

<P><STRONG><a name="[2b5]"></a>l2capParseSignalHdr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, l2cap_util.o(i.l2capParseSignalHdr))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessSignal
</UL>

<P><STRONG><a name="[2a9]"></a>l2capPktToSegmentBuff</STRONG> (Thumb, 252 bytes, Stack size 72 bytes, l2cap_util.o(i.l2capPktToSegmentBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_GetCurrentMTUSize
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_free (via Veneer)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Fragment_bm_alloc
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Fragment_SendDataPkt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capEncapSendData
</UL>

<P><STRONG><a name="[205]"></a>l2capSarBufReset</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, l2cap_util.o(i.l2capSarBufReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = l2capSarBufReset
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Init
</UL>

<P><STRONG><a name="[1fe]"></a>l2capSendCmd</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, l2cap_util.o(i.l2capSendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_bm_alloc
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_free (via Veneer)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capEncapSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendReq
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_CmdReject
</UL>

<P><STRONG><a name="[200]"></a>l2capSendReq</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, l2cap_util.o(i.l2capSendReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_CbTimerStart (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capFreeChannel
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendCmd
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capAllocChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ConnParamUpdateReq
</UL>

<P><STRONG><a name="[2b2]"></a>l2capStopTimer</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, l2cap_util.o(i.l2capStopTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = l2capStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_CbTimerStop (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRsp
</UL>

<P><STRONG><a name="[257]"></a>linkDB_Add</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, linkdb.o(i.linkDB_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = linkDB_Add &rArr; reportStatusChange
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reportStatusChange
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnectionCompleteEvt
</UL>

<P><STRONG><a name="[1f5]"></a>linkDB_Authen</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, linkdb.o(i.linkDB_Authen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = linkDB_Authen
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Notification
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyWritePermissions
</UL>

<P><STRONG><a name="[1d3]"></a>linkDB_Find</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, linkdb.o(i.linkDB_Find))
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_TerminateLinkReq
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_VerifyAuthenSig
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessEncryptChange
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderProcessLTKReq
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Authen
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Remove
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Add
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendPairingReqEvent
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendBondCompleteEvent
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessDisconnectCompleteEvt
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPasskeyNeededCB
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPairingCompleteCB
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendAuthEvent
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapUpdateConnSignCounter
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendLinkUpdateEvent
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpProcessIncoming
</UL>

<P><STRONG><a name="[246]"></a>linkDB_FindFirst</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, linkdb.o(i.linkDB_FindFirst))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = linkDB_FindFirst
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnectNext
</UL>

<P><STRONG><a name="[1bf]"></a>linkDB_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, linkdb.o(i.linkDB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = linkDB_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Init
</UL>

<P><STRONG><a name="[1c5]"></a>linkDB_NumActive</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, linkdb.o(i.linkDB_NumActive))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_NumActiveConnections
</UL>

<P><STRONG><a name="[1dc]"></a>linkDB_Register</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, linkdb.o(i.linkDB_Register))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_gen_AddService
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_Init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_InitServer
</UL>

<P><STRONG><a name="[25a]"></a>linkDB_Remove</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, linkdb.o(i.linkDB_Remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = linkDB_Remove &rArr; reportStatusChange
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reportStatusChange
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessDisconnectCompleteEvt
</UL>

<P><STRONG><a name="[20b]"></a>linkDB_State</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, linkdb.o(i.linkDB_State))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = linkDB_State
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_conn_status_cb
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_SendData
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attSendMsg
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSendReq
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServerHandleConnStatusCB
</UL>

<P><STRONG><a name="[2bd]"></a>mbedtls_aes_crypt_cbc</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, aes.o(i.mbedtls_aes_crypt_cbc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_crypt_ecb
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_decrypt
</UL>

<P><STRONG><a name="[2be]"></a>mbedtls_aes_crypt_ecb</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aes.o(i.mbedtls_aes_crypt_ecb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_aes_encrypt
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_aes_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_crypt_cbc
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_ecb_encrypt
</UL>

<P><STRONG><a name="[2c4]"></a>mbedtls_aes_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, aes.o(i.mbedtls_aes_free))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_setkey_dec
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_ecb_encrypt
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_decrypt
</UL>

<P><STRONG><a name="[2c1]"></a>mbedtls_aes_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, aes.o(i.mbedtls_aes_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbedtls_aes_init
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_setkey_dec
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_ecb_encrypt
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_decrypt
</UL>

<P><STRONG><a name="[2c2]"></a>mbedtls_aes_setkey_dec</STRONG> (Thumb, 184 bytes, Stack size 304 bytes, aes.o(i.mbedtls_aes_setkey_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = mbedtls_aes_setkey_dec &rArr; mbedtls_aes_setkey_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_setkey_enc
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_free
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_decrypt
</UL>

<P><STRONG><a name="[2c3]"></a>mbedtls_aes_setkey_enc</STRONG> (Thumb, 402 bytes, Stack size 40 bytes, aes.o(i.mbedtls_aes_setkey_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mbedtls_aes_setkey_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_setkey_dec
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_ecb_encrypt
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt
</UL>

<P><STRONG><a name="[2bf]"></a>mbedtls_internal_aes_decrypt</STRONG> (Thumb, 1018 bytes, Stack size 72 bytes, aes.o(i.mbedtls_internal_aes_decrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mbedtls_internal_aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_crypt_ecb
</UL>

<P><STRONG><a name="[2c0]"></a>mbedtls_internal_aes_encrypt</STRONG> (Thumb, 1028 bytes, Stack size 72 bytes, aes.o(i.mbedtls_internal_aes_encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_crypt_ecb
</UL>

<P><STRONG><a name="[2c5]"></a>mbedtls_internal_md5_process</STRONG> (Thumb, 2012 bytes, Stack size 120 bytes, md5.o(i.mbedtls_internal_md5_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_update_ret
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish_ret
</UL>

<P><STRONG><a name="[2c6]"></a>mbedtls_md5_finish</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, md5.o(i.mbedtls_md5_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mbedtls_md5_finish &rArr; mbedtls_md5_finish_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish_ret
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt
</UL>

<P><STRONG><a name="[2c7]"></a>mbedtls_md5_finish_ret</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, md5.o(i.mbedtls_md5_finish_ret))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = mbedtls_md5_finish_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_md5_process
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish
</UL>

<P><STRONG><a name="[2c8]"></a>mbedtls_md5_free</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, md5.o(i.mbedtls_md5_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbedtls_md5_free
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt
</UL>

<P><STRONG><a name="[2c9]"></a>mbedtls_md5_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, md5.o(i.mbedtls_md5_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbedtls_md5_init
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt
</UL>

<P><STRONG><a name="[2ca]"></a>mbedtls_md5_starts</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, md5.o(i.mbedtls_md5_starts))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = mbedtls_md5_starts
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_starts_ret
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt
</UL>

<P><STRONG><a name="[2cb]"></a>mbedtls_md5_starts_ret</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, md5.o(i.mbedtls_md5_starts_ret))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_starts
</UL>

<P><STRONG><a name="[2cc]"></a>mbedtls_md5_update</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, md5.o(i.mbedtls_md5_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_update_ret
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt
</UL>

<P><STRONG><a name="[2cd]"></a>mbedtls_md5_update_ret</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, md5.o(i.mbedtls_md5_update_ret))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_md5_process
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_update
</UL>

<P><STRONG><a name="[2d0]"></a>oled_show_char</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, ty_oled.o(i.oled_show_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = oled_show_char &rArr; oled_set_pos &rArr; oled_write_byte &rArr; ty_i2c_send &rArr; hal_i2c_wait_tx_completed &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_write_byte
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_oled_show_string
</UL>

<P><STRONG><a name="[7b]"></a>phy_timer_ProcessEvent</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, simplebleperipheral.o(i.phy_timer_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = phy_timer_ProcessEvent &rArr; phy_timer_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_timer_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_simplebleperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[2d2]"></a>phy_timer_handler</STRONG> (Thumb, 324 bytes, Stack size 8 bytes, ty_timer_phy62xx.o(i.phy_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = phy_timer_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_timer_ProcessEvent
</UL>

<P><STRONG><a name="[168]"></a>phy_timer_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, simplebleperipheral.o(i.phy_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = phy_timer_init &rArr; tuya_ble_sdk_demo_init &rArr; tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_demo_init
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_mainloop_timer_start
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[2d6]"></a>pvTuyaPortMalloc</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, tuya_ble_heap.o(i.pvTuyaPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
</UL>

<P><STRONG><a name="[256]"></a>sendEstLinkEvent</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gap_linkmgr.o(i.sendEstLinkEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sendEstLinkEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnectionCompleteEvt
</UL>

<P><STRONG><a name="[307]"></a>smAuthReqToUint8</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sm_mgr.o(i.smAuthReqToUint8))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildPairingReqRsp
</UL>

<P><STRONG><a name="[2fc]"></a>smDetermineKeySize</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, sm_pairing.o(i.smDetermineKeySize))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessEncryptionInformation
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderProcessLTKReq
</UL>

<P><STRONG><a name="[2db]"></a>smEndPairing</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, sm_pairing.o(i.smEndPairing))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = smEndPairing &rArr; gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPairingCompleteCB
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smFreePairingParams
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smTimedOut
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessEncryptChange
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smNextPairingState
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessSigningInfo
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessMasterID
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIdentityAddrInfo
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderProcessLTKReq
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendFailAndEnd
</UL>

<P><STRONG><a name="[2de]"></a>smGenerateConfirm</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, sm_pairing.o(i.smGenerateConfirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = smGenerateConfirm &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingConfirm
</UL>

<P><STRONG><a name="[2e0]"></a>smGeneratePairingReqRsp</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, sm_pairing.o(i.smGeneratePairingReqRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = smGeneratePairingReqRsp &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSetPairingReqRsp
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingReq
</UL>

<P><STRONG><a name="[1d1]"></a>smGenerateRandBuf</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sm_mgr.o(i.smGenerateRandBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smGenerateRandBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_rand (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SecParamsInit
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingReq
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_CalcRandomAddr
</UL>

<P><STRONG><a name="[2e3]"></a>smGenerateRandMsg</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, sm_pairing.o(i.smGenerateRandMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = smGenerateRandMsg &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingRandom
</UL>

<P><STRONG><a name="[44]"></a>smLinkCheck</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sm_pairing.o(i.smLinkCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = smLinkCheck &rArr; smFreePairingParams &rArr; smStopRspTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smFreePairingParams
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_task.o(i.SM_Init)
</UL>
<P><STRONG><a name="[2e4]"></a>smNextPairingState</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sm_pairing.o(i.smNextPairingState))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = smNextPairingState &rArr; smEndPairing &rArr; gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smState_timerCB
</UL>

<P><STRONG><a name="[2e5]"></a>smPairingSendEncInfo</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sm_pairing.o(i.smPairingSendEncInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = smPairingSendEncInfo &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
</UL>

<P><STRONG><a name="[2e6]"></a>smPairingSendIdentityAddrInfo</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, sm_pairing.o(i.smPairingSendIdentityAddrInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = smPairingSendIdentityAddrInfo &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
</UL>

<P><STRONG><a name="[2e7]"></a>smPairingSendIdentityInfo</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sm_pairing.o(i.smPairingSendIdentityInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = smPairingSendIdentityInfo &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
</UL>

<P><STRONG><a name="[2e8]"></a>smPairingSendMasterID</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, sm_pairing.o(i.smPairingSendMasterID))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = smPairingSendMasterID &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
</UL>

<P><STRONG><a name="[2e9]"></a>smPairingSendSingingInfo</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sm_pairing.o(i.smPairingSendSingingInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = smPairingSendSingingInfo &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderSendNextKeyInfo
</UL>

<P><STRONG><a name="[2ea]"></a>smProcessDataMsg</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, sm_pairing.o(i.smProcessDataMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = smProcessDataMsg &rArr; smSendFailAndEnd &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendFailAndEnd
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseSigningInfo
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseSecurityReq
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParsePairingReq
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParsePairingRandom
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParsePairingFailed
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParsePairingConfirm
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseMasterID
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseIdentityInfo
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseIdentityAddrInfo
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseEncInfo
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpProcessIncoming
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smStartRspTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessOSALMsg
</UL>

<P><STRONG><a name="[2f8]"></a>smProcessEncryptChange</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, sm_pairing.o(i.smProcessEncryptChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = smProcessEncryptChange &rArr; smEndPairing &rArr; gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendBondCompleteEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessOSALMsg
</UL>

<P><STRONG><a name="[2f9]"></a>smProcessRandComplete</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, sm_mgr.o(i.smProcessRandComplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smProcessRandComplete
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_RandCmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessOSALMsg
</UL>

<P><STRONG><a name="[219]"></a>smRegisterResponder</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sm_pairing.o(i.smRegisterResponder))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_ResponderInit
</UL>

<P><STRONG><a name="[2ff]"></a>smSavePairInfo</STRONG> (Thumb, 356 bytes, Stack size 24 bytes, sm_pairing.o(i.smSavePairInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smSavePairInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingReq
</UL>

<P><STRONG><a name="[2f6]"></a>smSendFailAndEnd</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sm_pairing.o(i.smSendFailAndEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = smSendFailAndEnd &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[2df]"></a>smSendSMMsg</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, smp.o(i.smSendSMMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_bm_alloc
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_SendData
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_free (via Veneer)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smStartRspTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendSingingInfo
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendMasterID
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendIdentityInfo
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendIdentityAddrInfo
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendEncInfo
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateRandMsg
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGeneratePairingReqRsp
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateConfirm
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendFailAndEnd
</UL>

<P><STRONG><a name="[2f7]"></a>smStartRspTimer</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, sm_mgr.o(i.smStartRspTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smStartRspTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_CbTimerStart (via Veneer)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_CbTimerUpdate (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSendSMMsg
</UL>

<P><STRONG><a name="[5b]"></a>smState_timerCB</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sm_task.o(i.smState_timerCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = smState_timerCB &rArr; smNextPairingState &rArr; smEndPairing &rArr; gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smNextPairingState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_rsppairing.o(i.smResponderSendNextKeyInfo)
</UL>
<P><STRONG><a name="[2dd]"></a>smStopRspTimer</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, sm_mgr.o(i.smStopRspTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smStopRspTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_CbTimerStop (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smFreePairingParams
</UL>

<P><STRONG><a name="[302]"></a>smTimedOut</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sm_pairing.o(i.smTimedOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = smTimedOut &rArr; smEndPairing &rArr; gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smTo_timerCB
</UL>

<P><STRONG><a name="[5d]"></a>smTo_timerCB</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sm_task.o(i.smTo_timerCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = smTo_timerCB &rArr; smTimedOut &rArr; smEndPairing &rArr; gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smTimedOut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_mgr.o(i.smStartRspTimer)
</UL>
<P><STRONG><a name="[300]"></a>smUint8ToAuthReq</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sm_mgr.o(i.smUint8ToAuthReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smUint8ToAuthReq
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParseSecurityReq
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpParsePairingReq
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSetPairingReqRsp
</UL>

<P><STRONG><a name="[210]"></a>sm_ah</STRONG> (Thumb, 68 bytes, Stack size 64 bytes, sm_mgr.o(i.sm_ah))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sm_ah &rArr; smEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_revmemcpy (via Veneer)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEncrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_CalcRandomAddr
</UL>

<P><STRONG><a name="[303]"></a>sm_c1</STRONG> (Thumb, 148 bytes, Stack size 88 bytes, sm_pairing.o(i.sm_c1))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = sm_c1 &rArr; sm_c1new &rArr; sm_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapGetDevAddressMode
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapGetDevAddress
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildPairingRsp
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildPairingReq
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSetPairingReqRsp
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1new
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingRandom
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingConfirm
</UL>

<P><STRONG><a name="[304]"></a>sm_c1new</STRONG> (Thumb, 194 bytes, Stack size 120 bytes, sm_mgr.o(i.sm_c1new))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sm_c1new &rArr; sm_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_revmemcpy (via Veneer)
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_xor
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEncrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1
</UL>

<P><STRONG><a name="[2fb]"></a>sm_s1</STRONG> (Thumb, 64 bytes, Stack size 64 bytes, sm_mgr.o(i.sm_s1))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sm_s1 &rArr; smEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_revmemcpy (via Veneer)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEncrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderProcessLTKReq
</UL>

<P><STRONG><a name="[56]"></a>smpBuildEncInfo</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, smp.o(i.smpBuildEncInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpBuildEncInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_pairing.o(i.smPairingSendEncInfo)
</UL>
<P><STRONG><a name="[57]"></a>smpBuildIdentityAddrInfo</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, smp.o(i.smpBuildIdentityAddrInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpBuildIdentityAddrInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_pairing.o(i.smPairingSendIdentityAddrInfo)
</UL>
<P><STRONG><a name="[58]"></a>smpBuildIdentityInfo</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, smp.o(i.smpBuildIdentityInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpBuildIdentityInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_pairing.o(i.smPairingSendIdentityInfo)
</UL>
<P><STRONG><a name="[59]"></a>smpBuildMasterID</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, smp.o(i.smpBuildMasterID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpBuildMasterID
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_pairing.o(i.smPairingSendMasterID)
</UL>
<P><STRONG><a name="[52]"></a>smpBuildPairingConfirm</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, smp.o(i.smpBuildPairingConfirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpBuildPairingConfirm
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_pairing.o(i.smGenerateConfirm)
</UL>
<P><STRONG><a name="[5c]"></a>smpBuildPairingFailed</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, smp.o(i.smpBuildPairingFailed))
<BR>[Address Reference Count : 1]<UL><LI> sm_pairing.o(i.smSendFailAndEnd)
</UL>
<P><STRONG><a name="[55]"></a>smpBuildPairingRandom</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, smp.o(i.smpBuildPairingRandom))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpBuildPairingRandom
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_pairing.o(i.smGenerateRandMsg)
</UL>
<P><STRONG><a name="[53]"></a>smpBuildPairingReq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, smp.o(i.smpBuildPairingReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smpBuildPairingReq &rArr; smpBuildPairingReqRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildPairingReqRsp
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_pairing.o(i.smGeneratePairingReqRsp)
</UL>
<P><STRONG><a name="[306]"></a>smpBuildPairingReqRsp</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, smp.o(i.smpBuildPairingReqRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpBuildPairingReqRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smAuthReqToUint8
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildPairingRsp
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildPairingReq
</UL>

<P><STRONG><a name="[54]"></a>smpBuildPairingRsp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, smp.o(i.smpBuildPairingRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smpBuildPairingRsp &rArr; smpBuildPairingReqRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpBuildPairingReqRsp
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_pairing.o(i.smGeneratePairingReqRsp)
</UL>
<P><STRONG><a name="[5a]"></a>smpBuildSigningInfo</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, smp.o(i.smpBuildSigningInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpBuildSigningInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_pairing.o(i.smPairingSendSingingInfo)
</UL>
<P><STRONG><a name="[2ef]"></a>smpParseEncInfo</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, smp.o(i.smpParseEncInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpParseEncInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[2f2]"></a>smpParseIdentityAddrInfo</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, smp.o(i.smpParseIdentityAddrInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpParseIdentityAddrInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[2f1]"></a>smpParseIdentityInfo</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, smp.o(i.smpParseIdentityInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpParseIdentityInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[2f0]"></a>smpParseMasterID</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, smp.o(i.smpParseMasterID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpParseMasterID
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[2ec]"></a>smpParsePairingConfirm</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, smp.o(i.smpParsePairingConfirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpParsePairingConfirm
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[2ee]"></a>smpParsePairingFailed</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, smp.o(i.smpParsePairingFailed))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[2ed]"></a>smpParsePairingRandom</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, smp.o(i.smpParsePairingRandom))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpParsePairingRandom
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[2eb]"></a>smpParsePairingReq</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, smp.o(i.smpParsePairingReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smpParsePairingReq &rArr; smUint8ToAuthReq
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smUint8ToAuthReq
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[2f4]"></a>smpParseSecurityReq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, smp.o(i.smpParseSecurityReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpParseSecurityReq &rArr; smUint8ToAuthReq
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smUint8ToAuthReq
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[2f3]"></a>smpParseSigningInfo</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, smp.o(i.smpParseSigningInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpParseSigningInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[30b]"></a>smpResponderProcessPairingReq</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, sm_rsppairing.o(i.smpResponderProcessPairingReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = smpResponderProcessPairingReq &rArr; smGeneratePairingReqRsp &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smSavePairInfo
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGeneratePairingReqRsp
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPasskeyNeededCB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateRandBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
</UL>

<P><STRONG><a name="[29c]"></a>spi_int_enable</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, spi.o(i.spi_int_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_int_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
</UL>

<P><STRONG><a name="[311]"></a>ssd1306_init</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, ty_oled.o(i.ssd1306_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = ssd1306_init &rArr; ty_oled_clear &rArr; oled_write_byte &rArr; ty_i2c_send &rArr; hal_i2c_wait_tx_completed &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_oled_clear
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_oled_init
</UL>

<P><STRONG><a name="[314]"></a>trsmitr_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_mutli_tsf_protocol.o(i.trsmitr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = trsmitr_init
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[237]"></a>trsmitr_recv_pkg_decode</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, tuya_ble_mutli_tsf_protocol.o(i.trsmitr_recv_pkg_decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = trsmitr_recv_pkg_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
</UL>

<P><STRONG><a name="[315]"></a>trsmitr_send_pkg_encode_with_packet_length</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, tuya_ble_mutli_tsf_protocol.o(i.trsmitr_send_pkg_encode_with_packet_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = trsmitr_send_pkg_encode_with_packet_length
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_frame_seq
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[318]"></a>tuya_ble_adv_change</STRONG> (Thumb, 308 bytes, Stack size 72 bytes, tuya_ble_main.o(i.tuya_ble_adv_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_scan_rsp_data_update
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_adv_data_update
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encrypt_old_with_key
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_encrypt_v4
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_info_update_evt
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connecting_request_evt
</UL>

<P><STRONG><a name="[31d]"></a>tuya_ble_adv_change_with_connecting_request</STRONG> (Thumb, 312 bytes, Stack size 72 bytes, tuya_ble_main.o(i.tuya_ble_adv_change_with_connecting_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = tuya_ble_adv_change_with_connecting_request &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_scan_rsp_data_update
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_adv_data_update
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encrypt_old_with_key
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_encrypt_v4
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connecting_request_evt
</UL>

<P><STRONG><a name="[31e]"></a>tuya_ble_adv_data_connecting_request_set</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, tuya_ble_api.o(i.tuya_ble_adv_data_connecting_request_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = tuya_ble_adv_data_connecting_request_set &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[321]"></a>tuya_ble_aes128_cbc_decrypt</STRONG> (Thumb, 66 bytes, Stack size 312 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_aes128_cbc_decrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = tuya_ble_aes128_cbc_decrypt &rArr; mbedtls_aes_setkey_dec &rArr; mbedtls_aes_setkey_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_setkey_dec
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_free
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_crypt_cbc
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_decryption
</UL>

<P><STRONG><a name="[322]"></a>tuya_ble_aes128_cbc_encrypt</STRONG> (Thumb, 66 bytes, Stack size 312 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_aes128_cbc_encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_setkey_enc
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_free
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_crypt_cbc
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encryption
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_encrypt_v4
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_generate_key1
</UL>

<P><STRONG><a name="[323]"></a>tuya_ble_aes128_ecb_encrypt</STRONG> (Thumb, 74 bytes, Stack size 304 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_aes128_ecb_encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = tuya_ble_aes128_ecb_encrypt &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_setkey_enc
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_free
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_aes_crypt_ecb
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_register_key_generate
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encrypt_old_with_key
</UL>

<P><STRONG><a name="[23e]"></a>tuya_ble_air_recv_packet_free</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tuya_ble_data_handler.o(i.tuya_ble_air_recv_packet_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tuya_ble_air_recv_packet_free &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
</UL>

<P><STRONG><a name="[324]"></a>tuya_ble_app_production_test_process</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, tuya_ble_app_production_test.o(i.tuya_ble_app_production_test_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = tuya_ble_app_production_test_process &rArr; tuya_ble_app_sdk_test_process &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_custom_app_production_test_process
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_delay_ms
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_stop
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_read_mac
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_gpio_test
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_enter
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_uart_cmd_evt
</UL>

<P><STRONG><a name="[327]"></a>tuya_ble_app_sdk_test_process</STRONG> (Thumb, 1478 bytes, Stack size 344 bytes, tuya_ble_sdk_test.o(i.tuya_ble_app_sdk_test_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = tuya_ble_app_sdk_test_process &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_spi_readWriteData
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_spi_enable
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_spi_disable
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_rtc_get_time
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_oled_init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_oled_clear
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_adv_param
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_start
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_time_req
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_set_device_version
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rand_generator
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inverted_array
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_hexstr2hex
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_addr_set
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_feature_weather_data_request_with_location
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_with_time_send
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_send
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_update_product_id
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbind
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_factory_reset
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_data_passthrough
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_generation
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_data_connecting_request_set
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_conn_param
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_utc_sec_2_mytime
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_start
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_send
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnect_and_reset_timer_start
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite8 (via Veneer)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[3e6]"></a>tuya_ble_ascii_to_int</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, tuya_ble_utils.o(i.tuya_ble_ascii_to_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tuya_ble_ascii_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback
</UL>

<P><STRONG><a name="[354]"></a>tuya_ble_buffer_value_is_all_x</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, tuya_ble_utils.o(i.tuya_ble_buffer_value_is_all_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tuya_ble_buffer_value_is_all_x
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid
</UL>

<P><STRONG><a name="[35b]"></a>tuya_ble_bulk_data_demo_handler</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, tuya_ble_bulk_data_demo.o(i.tuya_ble_bulk_data_demo_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = tuya_ble_bulk_data_demo_handler &rArr; tuya_ble_bulk_data_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc16_compute
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_response
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_bulk_data_block_crc16
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback
</UL>

<P><STRONG><a name="[340]"></a>tuya_ble_bulk_data_generation</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, tuya_ble_bulk_data_demo.o(i.tuya_ble_bulk_data_generation))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = tuya_ble_bulk_data_generation &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_erase
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_rtc_get_time
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[35c]"></a>tuya_ble_bulk_data_response</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, tuya_ble_bulk_data.o(i.tuya_ble_bulk_data_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = tuya_ble_bulk_data_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_demo_handler
</UL>

<P><STRONG><a name="[35f]"></a>tuya_ble_callback_queue_register</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tuya_ble_api.o(i.tuya_ble_callback_queue_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_callback_queue_register
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_demo_init
</UL>

<P><STRONG><a name="[360]"></a>tuya_ble_cb_event_send</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_cb_event_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = tuya_ble_cb_event_send &rArr; tuya_ble_inter_event_response &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inter_event_response
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_request_response
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_received
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_with_dst_date_resp
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_net_config_info_req
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_write_req
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_app_local_time_data_resp
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_bulk_data_req
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_bulk_data_evt
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_factory_reset_evt
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_unbind_evt
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
</UL>

<P><STRONG><a name="[400]"></a>tuya_ble_char_2_ascii</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tuya_ble_utils.o(i.tuya_ble_char_2_ascii))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_str_to_hex
</UL>

<P><STRONG><a name="[3ae]"></a>tuya_ble_check_sum</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tuya_ble_utils.o(i.tuya_ble_check_sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_check_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_product_test_rsp
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_send
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_ble_handler
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_uart_cmd_evt
</UL>

<P><STRONG><a name="[362]"></a>tuya_ble_commData_send</STRONG> (Thumb, 456 bytes, Stack size 96 bytes, tuya_ble_data_handler.o(i.tuya_ble_commData_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc16_compute
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encryption
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_send_pkg_encode_with_packet_length
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_init
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trsmitr_subpkg_len
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trsmitr_subpkg
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_received
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_net_config_info_req
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_write_req
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_bulk_data_evt
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_uart_handler
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_request_evt
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_time_request_evt
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_response_evt
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_net_config_response_evt
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_extend_time_request_evt
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_send_evt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_reported_evt
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_send_evt
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_reported_evt
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_prod_test_response_evt
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_passthrough_evt
</UL>

<P><STRONG><a name="[366]"></a>tuya_ble_commonData_rx_proc</STRONG> (Thumb, 382 bytes, Stack size 80 bytes, tuya_ble_data_handler.o(i.tuya_ble_commonData_rx_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = tuya_ble_commonData_rx_proc &rArr; tuya_ble_decryption &rArr; tuya_ble_aes128_cbc_decrypt &rArr; mbedtls_aes_setkey_dec &rArr; mbedtls_aes_setkey_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc16_compute
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_decryption
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_air_recv_packet_free
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_data_evt
</UL>

<P><STRONG><a name="[3f2]"></a>tuya_ble_common_uart_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_common_uart_init))
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[b9]"></a>tuya_ble_common_uart_receive_data</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, tuya_ble_api.o(i.tuya_ble_common_uart_receive_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = tuya_ble_common_uart_receive_data &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_data_unpack
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_uart_evt_hdl (via Veneer)
</UL>

<P><STRONG><a name="[36a]"></a>tuya_ble_common_uart_send_data</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_common_uart_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart2_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_ble_handler
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_prod_test_response_evt
</UL>

<P><STRONG><a name="[36c]"></a>tuya_ble_connect_monitor_timer_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_connect_monitor_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuya_ble_connect_monitor_timer_init &rArr; tuya_ble_timer_create &rArr; ty_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[36d]"></a>tuya_ble_connect_monitor_timer_start</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_connect_monitor_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuya_ble_connect_monitor_timer_start &rArr; tuya_ble_timer_start &rArr; ty_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
</UL>

<P><STRONG><a name="[325]"></a>tuya_ble_connect_monitor_timer_stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_connect_monitor_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_connect_monitor_timer_stop &rArr; tuya_ble_timer_stop &rArr; ty_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
</UL>

<P><STRONG><a name="[31f]"></a>tuya_ble_connect_status_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tuya_ble_main.o(i.tuya_ble_connect_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_response
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_response
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_with_time_send
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_send
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_data_passthrough
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_data_connecting_request_set
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_uart_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_factory_reset_evt
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_unbind_evt
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_prod_test_response_evt
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connecting_request_evt
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
</UL>

<P><STRONG><a name="[36f]"></a>tuya_ble_connect_status_set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_connect_status_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_connect_status_set
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
</UL>

<P><STRONG><a name="[370]"></a>tuya_ble_connected_handler</STRONG> (Thumb, 22 bytes, Stack size 48 bytes, tuya_ble_api.o(i.tuya_ble_connected_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tuya_ble_connected_handler &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_connect_handler
</UL>

<P><STRONG><a name="[3af]"></a>tuya_ble_count_bits</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tuya_ble_utils.o(i.tuya_ble_count_bits))
<BR><BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_feature_weather_data_request_with_location
</UL>

<P><STRONG><a name="[27d]"></a>tuya_ble_crc16_compute</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, tuya_ble_utils.o(i.tuya_ble_crc16_compute))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tuya_ble_crc16_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_bulk_data_block_crc16
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_demo_handler
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_data_handler
</UL>

<P><STRONG><a name="[235]"></a>tuya_ble_crc32_compute</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, tuya_ble_utils.o(i.tuya_ble_crc32_compute))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_generation
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_settings_crc_ok
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_settings_crc_ok
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_get_crc32_in_flash
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_data_handler
</UL>

<P><STRONG><a name="[328]"></a>tuya_ble_custom_app_production_test_process</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, tuya_ble_product_test_demo.o(i.tuya_ble_custom_app_production_test_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = tuya_ble_custom_app_production_test_process &rArr; tuya_ble_product_test_rsp &rArr; tuya_ble_production_test_asynchronous_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_product_test_rsp
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inverted_array
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[405]"></a>tuya_ble_custom_app_uart_common_process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tuya_ble_app_uart_common_handler.o(i.tuya_ble_custom_app_uart_common_process))
<BR><BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_process
</UL>

<P><STRONG><a name="[33c]"></a>tuya_ble_data_passthrough</STRONG> (Thumb, 82 bytes, Stack size 64 bytes, tuya_ble_api.o(i.tuya_ble_data_passthrough))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = tuya_ble_data_passthrough &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[367]"></a>tuya_ble_decryption</STRONG> (Thumb, 172 bytes, Stack size 80 bytes, tuya_ble_secure.o(i.tuya_ble_decryption))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = tuya_ble_decryption &rArr; tuya_ble_aes128_cbc_decrypt &rArr; mbedtls_aes_setkey_dec &rArr; mbedtls_aes_setkey_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_decrypt
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
</UL>

<P><STRONG><a name="[373]"></a>tuya_ble_dequeue</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, tuya_ble_queue.o(i.tuya_ble_dequeue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_dequeue
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_queue_free
</UL>

<P><STRONG><a name="[333]"></a>tuya_ble_device_delay_ms</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_device_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_device_delay_ms &rArr; ty_system_delay_ms &rArr; WaitMs
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnect_and_reset_timer_cb
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_vtimer_prod_monitor_callback
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_enter
</UL>

<P><STRONG><a name="[343]"></a>tuya_ble_device_factory_reset</STRONG> (Thumb, 26 bytes, Stack size 48 bytes, tuya_ble_api.o(i.tuya_ble_device_factory_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tuya_ble_device_factory_reset &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[3ee]"></a>tuya_ble_device_id_16_to_20</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, tuya_ble_utils.o(i.tuya_ble_device_id_16_to_20))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_device_id_16_to_20
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[3ed]"></a>tuya_ble_device_id_20_to_16</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, tuya_ble_utils.o(i.tuya_ble_device_id_20_to_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_device_id_20_to_16
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[31a]"></a>tuya_ble_device_id_encrypt_v4</STRONG> (Thumb, 80 bytes, Stack size 72 bytes, tuya_ble_secure.o(i.tuya_ble_device_id_encrypt_v4))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change_with_connecting_request
</UL>

<P><STRONG><a name="[334]"></a>tuya_ble_device_reset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_device_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_device_reset &rArr; ty_system_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnect_and_reset_timer_cb
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_vtimer_prod_monitor_callback
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_enter
</UL>

<P><STRONG><a name="[342]"></a>tuya_ble_device_unbind</STRONG> (Thumb, 28 bytes, Stack size 48 bytes, tuya_ble_api.o(i.tuya_ble_device_unbind))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tuya_ble_device_unbind &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[378]"></a>tuya_ble_device_unbond</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, tuya_ble_data_handler.o(i.tuya_ble_device_unbond))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = tuya_ble_device_unbond &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_factory_reset_evt
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_unbind_evt
</UL>

<P><STRONG><a name="[336]"></a>tuya_ble_device_update_product_id</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, tuya_ble_api.o(i.tuya_ble_device_update_product_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = tuya_ble_device_update_product_id &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[37a]"></a>tuya_ble_disconnect_and_reset_timer_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tuya_ble_sdk_demo.o(i.tuya_ble_disconnect_and_reset_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuya_ble_disconnect_and_reset_timer_init &rArr; tuya_ble_timer_create &rArr; ty_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_demo_init
</UL>

<P><STRONG><a name="[341]"></a>tuya_ble_disconnect_and_reset_timer_start</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_sdk_demo.o(i.tuya_ble_disconnect_and_reset_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuya_ble_disconnect_and_reset_timer_start &rArr; tuya_ble_timer_start &rArr; ty_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_exit
</UL>

<P><STRONG><a name="[37b]"></a>tuya_ble_disconnected_handler</STRONG> (Thumb, 22 bytes, Stack size 48 bytes, tuya_ble_api.o(i.tuya_ble_disconnected_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tuya_ble_disconnected_handler &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_disconnect_handler
</UL>

<P><STRONG><a name="[33e]"></a>tuya_ble_dp_data_send</STRONG> (Thumb, 188 bytes, Stack size 88 bytes, tuya_ble_api.o(i.tuya_ble_dp_data_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = tuya_ble_dp_data_send &rArr; data_2_klvlist &rArr; free_klv_list &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_klv_list
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_dp_report_handler
</UL>

<P><STRONG><a name="[33f]"></a>tuya_ble_dp_data_with_time_send</STRONG> (Thumb, 224 bytes, Stack size 96 bytes, tuya_ble_api.o(i.tuya_ble_dp_data_with_time_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = tuya_ble_dp_data_with_time_send &rArr; data_2_klvlist &rArr; free_klv_list &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_klv_list
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_dp_report_handler
</UL>

<P><STRONG><a name="[319]"></a>tuya_ble_encrypt_old_with_key</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, tuya_ble_secure.o(i.tuya_ble_encrypt_old_with_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = tuya_ble_encrypt_old_with_key &rArr; tuya_ble_aes128_ecb_encrypt &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_ecb_encrypt
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_Add_Pkcs
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hextoascii
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change_with_connecting_request
</UL>

<P><STRONG><a name="[364]"></a>tuya_ble_encryption</STRONG> (Thumb, 132 bytes, Stack size 64 bytes, tuya_ble_secure.o(i.tuya_ble_encryption))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_generate_key1 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_Add_Pkcs
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[37d]"></a>tuya_ble_enqueue</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, tuya_ble_queue.o(i.tuya_ble_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
</UL>

<P><STRONG><a name="[37e]"></a>tuya_ble_event_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_event_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuya_ble_event_init &rArr; tuya_ble_event_queue_init &rArr; tuya_ble_sched_init
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_queue_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[380]"></a>tuya_ble_event_process</STRONG> (Thumb, 312 bytes, Stack size 8 bytes, tuya_ble_secure.o(i.tuya_ble_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = tuya_ble_event_process &rArr; tuya_ble_handle_ble_cmd_evt &rArr; tuya_ble_evt_process &rArr; tuya_ble_app_production_test_process &rArr; tuya_ble_app_sdk_test_process &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_bulk_data_evt
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_request_evt
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unbound_response_evt
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_uart_cmd_evt
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_time_request_evt
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_response_evt
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_net_config_response_evt
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_link_update_evt
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_factory_reset_evt
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_extend_time_request_evt
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_send_evt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_reported_evt
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_send_evt
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_reported_evt
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_unbind_evt
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_response_evt
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_info_update_evt
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_prod_test_response_evt
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_passthrough_evt
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connecting_request_evt
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_data_evt
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_cmd_evt
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_anomaly_unbound_response_evt
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_sched_execute
</UL>

<P><STRONG><a name="[37f]"></a>tuya_ble_event_queue_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tuya_ble_event.o(i.tuya_ble_event_queue_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_event_queue_init &rArr; tuya_ble_sched_init
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sched_init
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_init
</UL>

<P><STRONG><a name="[320]"></a>tuya_ble_event_send</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_event_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tuya_ble_event_send &rArr; tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_message_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_response
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_receive_data
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnected_handler
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connected_handler
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_response
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_time_req
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_production_test_asynchronous_response
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_feature_weather_data_request_with_location
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_with_time_send
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_send
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_update_product_id
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbind
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_factory_reset
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_data_passthrough
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_data_connecting_request_set
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[39f]"></a>tuya_ble_evt_process</STRONG> (Thumb, 622 bytes, Stack size 80 bytes, tuya_ble_data_handler.o(i.tuya_ble_evt_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = tuya_ble_evt_process &rArr; tuya_ble_app_production_test_process &rArr; tuya_ble_app_sdk_test_process &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_check_sum
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_request_response
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_received
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_with_dst_date_resp
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_net_config_info_req
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_write_req
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_app_local_time_data_resp
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_bulk_data_req
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_cmd_evt
</UL>

<P><STRONG><a name="[347]"></a>tuya_ble_feature_weather_data_request_with_location</STRONG> (Thumb, 232 bytes, Stack size 104 bytes, tuya_ble_feature_weather.o(i.tuya_ble_feature_weather_data_request_with_location))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = tuya_ble_feature_weather_data_request_with_location &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_count_bits
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[238]"></a>tuya_ble_free</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tuya_ble_mem.o(i.tuya_ble_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTuyaPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_klv_list
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_response
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_receive_data
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_response
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_production_test_asynchronous_response
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_feature_weather_data_request_with_location
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_with_time_send
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_send
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_data_passthrough
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_demo_handler
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_ble_handler
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_received
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_air_recv_packet_free
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_with_dst_date_resp
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_net_config_info_req
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_write_req
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_bulk_data_evt
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inter_event_response
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change_with_connecting_request
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_queue_free
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_request_evt
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_data_lktlv_parse
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_uart_cmd_evt
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_response_evt
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_send_evt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_reported_evt
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_send_evt
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_reported_evt
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_prod_test_response_evt
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_passthrough_evt
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_data_evt
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_cmd_evt
</UL>

<P><STRONG><a name="[3b1]"></a>tuya_ble_gap_addr_get</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_gap_addr_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_gap_addr_get &rArr; ty_ble_get_mac
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_get_mac
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
</UL>

<P><STRONG><a name="[339]"></a>tuya_ble_gap_addr_set</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_gap_addr_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = tuya_ble_gap_addr_set &rArr; ty_ble_set_mac &rArr; ty_ble_stop_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_mac
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[31b]"></a>tuya_ble_gap_advertising_adv_data_update</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_gap_advertising_adv_data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = tuya_ble_gap_advertising_adv_data_update &rArr; ty_ble_set_advdata_and_scanrsp &rArr; ty_ble_stop_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_advdata_and_scanrsp
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change_with_connecting_request
</UL>

<P><STRONG><a name="[31c]"></a>tuya_ble_gap_advertising_scan_rsp_data_update</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_gap_advertising_scan_rsp_data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = tuya_ble_gap_advertising_scan_rsp_data_update &rArr; ty_ble_set_advdata_and_scanrsp &rArr; ty_ble_stop_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_advdata_and_scanrsp
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change_with_connecting_request
</UL>

<P><STRONG><a name="[368]"></a>tuya_ble_gap_disconnect</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_gap_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = tuya_ble_gap_disconnect &rArr; ty_ble_disconnect &rArr; GAPRole_TerminateConnection &rArr; GAP_TerminateLinkReq &rArr; disconnectNext &rArr; linkDB_FindFirst
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnect_and_reset_timer_cb
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_vtimer_conncet_monitor_callback
</UL>

<P><STRONG><a name="[3b6]"></a>tuya_ble_gatt_receive_data</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, tuya_ble_api.o(i.tuya_ble_gatt_receive_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = tuya_ble_gatt_receive_data &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_receive_data_handler
</UL>

<P><STRONG><a name="[3b7]"></a>tuya_ble_gatt_send_data</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_gatt_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[365]"></a>tuya_ble_gatt_send_data_enqueue</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_data_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_enqueue
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[63]"></a>tuya_ble_gatt_send_data_handle</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_data_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_get
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_flush
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_decrease
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_get_queue_used
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_queue_free
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_data_handle)
</UL>
<P><STRONG><a name="[3be]"></a>tuya_ble_gatt_send_queue_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_queue_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_gatt_send_queue_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[3ca]"></a>tuya_ble_get_adv_connect_request_bit_status</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tuya_ble_main.o(i.tuya_ble_get_adv_connect_request_bit_status))
<BR><BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
</UL>

<P><STRONG><a name="[3bc]"></a>tuya_ble_get_queue_used</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_queue.o(i.tuya_ble_get_queue_used))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[395]"></a>tuya_ble_handle_anomaly_unbound_response_evt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_anomaly_unbound_response_evt))
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[38f]"></a>tuya_ble_handle_ble_cmd_evt</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_ble_cmd_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = tuya_ble_handle_ble_cmd_evt &rArr; tuya_ble_evt_process &rArr; tuya_ble_app_production_test_process &rArr; tuya_ble_app_sdk_test_process &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[389]"></a>tuya_ble_handle_ble_data_evt</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_ble_data_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = tuya_ble_handle_ble_data_evt &rArr; tuya_ble_commonData_rx_proc &rArr; tuya_ble_decryption &rArr; tuya_ble_aes128_cbc_decrypt &rArr; mbedtls_aes_setkey_dec &rArr; mbedtls_aes_setkey_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[386]"></a>tuya_ble_handle_bulk_data_evt</STRONG> (Thumb, 392 bytes, Stack size 96 bytes, tuya_ble_bulk_data.o(i.tuya_ble_handle_bulk_data_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = tuya_ble_handle_bulk_data_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[3a7]"></a>tuya_ble_handle_bulk_data_req</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, tuya_ble_bulk_data.o(i.tuya_ble_handle_bulk_data_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = tuya_ble_handle_bulk_data_req &rArr; tuya_ble_cb_event_send &rArr; tuya_ble_inter_event_response &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[391]"></a>tuya_ble_handle_connect_change_evt</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_connect_change_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = tuya_ble_handle_connect_change_evt &rArr; tuya_ble_cb_event_send &rArr; tuya_ble_inter_event_response &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_reset_ble_sn
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_clear
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_air_recv_packet_free
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_start
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_internal_production_test_with_ble_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[397]"></a>tuya_ble_handle_connecting_request_evt</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_connecting_request_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = tuya_ble_handle_connecting_request_evt &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change_with_connecting_request
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[387]"></a>tuya_ble_handle_data_passthrough_evt</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_data_passthrough_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_data_passthrough_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[388]"></a>tuya_ble_handle_data_prod_test_response_evt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_data_prod_test_response_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_data_prod_test_response_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[381]"></a>tuya_ble_handle_device_info_update_evt</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_device_info_update_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = tuya_ble_handle_device_info_update_evt &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[396]"></a>tuya_ble_handle_device_reset_response_evt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_device_reset_response_evt))
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[39a]"></a>tuya_ble_handle_device_unbind_evt</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_device_unbind_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = tuya_ble_handle_device_unbind_evt &rArr; tuya_ble_device_unbond &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[382]"></a>tuya_ble_handle_dp_data_reported_evt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_dp_data_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[398]"></a>tuya_ble_handle_dp_data_send_evt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_send_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_dp_data_send_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[38b]"></a>tuya_ble_handle_dp_data_with_flag_and_time_reported_evt</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_flag_and_time_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = tuya_ble_handle_dp_data_with_flag_and_time_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[38d]"></a>tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[383]"></a>tuya_ble_handle_dp_data_with_flag_reported_evt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_flag_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_dp_data_with_flag_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[38a]"></a>tuya_ble_handle_dp_data_with_time_reported_evt</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_time_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = tuya_ble_handle_dp_data_with_time_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[399]"></a>tuya_ble_handle_dp_data_with_time_send_evt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_time_send_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_dp_data_with_time_send_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[38c]"></a>tuya_ble_handle_dp_data_with_time_string_reported_evt</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_time_string_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = tuya_ble_handle_dp_data_with_time_string_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[393]"></a>tuya_ble_handle_extend_time_request_evt</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_extend_time_request_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_extend_time_request_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[384]"></a>tuya_ble_handle_factory_reset_evt</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_factory_reset_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = tuya_ble_handle_factory_reset_evt &rArr; tuya_ble_device_unbond &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[39c]"></a>tuya_ble_handle_link_update_evt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_link_update_evt))
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[390]"></a>tuya_ble_handle_net_config_response_evt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_net_config_response_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_net_config_response_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[385]"></a>tuya_ble_handle_ota_response_evt</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_ota_response_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_ota_response_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[392]"></a>tuya_ble_handle_time_request_evt</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_time_request_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_time_request_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[38e]"></a>tuya_ble_handle_uart_cmd_evt</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_uart_cmd_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = tuya_ble_handle_uart_cmd_evt &rArr; tuya_ble_app_production_test_process &rArr; tuya_ble_app_sdk_test_process &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_check_sum
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_process
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[394]"></a>tuya_ble_handle_unbound_response_evt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_unbound_response_evt))
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[3a2]"></a>tuya_ble_handle_weather_data_received</STRONG> (Thumb, 184 bytes, Stack size 96 bytes, tuya_ble_feature_weather.o(i.tuya_ble_handle_weather_data_received))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = tuya_ble_handle_weather_data_received &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_data_lktlv_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[39b]"></a>tuya_ble_handle_weather_data_request_evt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tuya_ble_feature_weather.o(i.tuya_ble_handle_weather_data_request_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = tuya_ble_handle_weather_data_request_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[3a1]"></a>tuya_ble_handle_weather_data_request_response</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, tuya_ble_feature_weather.o(i.tuya_ble_handle_weather_data_request_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = tuya_ble_handle_weather_data_request_response &rArr; tuya_ble_cb_event_send &rArr; tuya_ble_inter_event_response &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3cd]"></a>tuya_ble_hex2int</STRONG> (Thumb, 154 bytes, Stack size 4 bytes, tuya_ble_utils.o(i.tuya_ble_hex2int))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tuya_ble_hex2int
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_hexstr2int
</UL>

<P><STRONG><a name="[337]"></a>tuya_ble_hexstr2hex</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, tuya_ble_utils.o(i.tuya_ble_hexstr2hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tuya_ble_hexstr2hex &rArr; tuya_ble_hexstr2int &rArr; tuya_ble_hex2int
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_hexstr2int
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[3ce]"></a>tuya_ble_hexstr2int</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, tuya_ble_utils.o(i.tuya_ble_hexstr2int))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_hexstr2int &rArr; tuya_ble_hex2int
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_hex2int
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_hexstr2hex
</UL>

<P><STRONG><a name="[3f0]"></a>tuya_ble_hextoascii</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, tuya_ble_utils.o(i.tuya_ble_hextoascii))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tuya_ble_hextoascii
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[361]"></a>tuya_ble_inter_event_response</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_inter_event_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tuya_ble_inter_event_response &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>

<P><STRONG><a name="[3c6]"></a>tuya_ble_internal_production_test_with_ble_flag_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tuya_ble_app_production_test.o(i.tuya_ble_internal_production_test_with_ble_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
</UL>

<P><STRONG><a name="[335]"></a>tuya_ble_inverted_array</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tuya_ble_utils.o(i.tuya_ble_inverted_array))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_inverted_array
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_custom_app_production_test_process
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_req_handler
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_offset_handler
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_info_handler
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_data_handler
</UL>

<P><STRONG><a name="[3e3]"></a>tuya_ble_is_word_aligned_tuya</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tuya_ble_utils.o(i.tuya_ble_is_word_aligned_tuya))
<BR><BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sched_init
</UL>

<P><STRONG><a name="[22a]"></a>tuya_ble_main_tasks_exec</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_main_tasks_exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144<LI>Call Chain = tuya_ble_main_tasks_exec &rArr; tuya_sched_execute &rArr; tuya_ble_event_process &rArr; tuya_ble_handle_ble_cmd_evt &rArr; tuya_ble_evt_process &rArr; tuya_ble_app_production_test_process &rArr; tuya_ble_app_sdk_test_process &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_sched_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_ProcessEvent
</UL>

<P><STRONG><a name="[23a]"></a>tuya_ble_malloc</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, tuya_ble_mem.o(i.tuya_ble_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTuyaPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_response
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_receive_data
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_response
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_production_test_asynchronous_response
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_feature_weather_data_request_with_location
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_with_time_send
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_send
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_data_passthrough
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_demo_handler
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_ble_handler
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_received
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_with_dst_date_resp
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_net_config_info_req
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_write_req
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_bulk_data_evt
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change_with_connecting_request
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_data_lktlv_parse
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
</UL>

<P><STRONG><a name="[375]"></a>tuya_ble_md5_crypt</STRONG> (Thumb, 52 bytes, Stack size 104 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_md5_crypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_update
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_starts
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_init
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_free
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_encrypt_v4
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_key_generate
</UL>

<P><STRONG><a name="[39e]"></a>tuya_ble_message_send</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_event.o(i.tuya_ble_message_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sched_event_put
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
</UL>

<P><STRONG><a name="[3c2]"></a>tuya_ble_mytime_2_utc_sec</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, tuya_ble_unix_time.o(i.tuya_ble_mytime_2_utc_sec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tuya_ble_mytime_2_utc_sec &rArr; applib_dt_last_day_of_mon &rArr; applib_dt_is_leap_year
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_last_day_of_mon
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_is_leap_year
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_app_local_time_data_resp
</UL>

<P><STRONG><a name="[35d]"></a>tuya_ble_nv_erase</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_nv_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = tuya_ble_nv_erase &rArr; ty_flash_erase &rArr; hal_flash_erase_sector &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_generation
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_info_save
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_data_handler
</UL>

<P><STRONG><a name="[3fd]"></a>tuya_ble_nv_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_nv_init))
<BR><BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_init
</UL>

<P><STRONG><a name="[27c]"></a>tuya_ble_nv_read</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_nv_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tuya_ble_nv_read &rArr; ty_flash_read &rArr; hal_flash_read &rArr; spif_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_bulk_data_block_crc16
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_init
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_demo_handler
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_get_crc32_in_flash
</UL>

<P><STRONG><a name="[35e]"></a>tuya_ble_nv_write</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_nv_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_generation
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_info_save
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_end_handler
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_data_handler
</UL>

<P><STRONG><a name="[3d8]"></a>tuya_ble_ota_disconn_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tuya_ble_ota.o(i.tuya_ble_ota_disconn_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tuya_ble_ota_disconn_handler &rArr; tuya_ble_ota_exit &rArr; tuya_ble_disconnect_and_reset_timer_start &rArr; tuya_ble_timer_start &rArr; ty_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_disconnect_handler
</UL>

<P><STRONG><a name="[3dd]"></a>tuya_ble_ota_handler</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, tuya_ble_ota.o(i.tuya_ble_ota_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = tuya_ble_ota_handler &rArr; tuya_ble_ota_req_handler &rArr; ty_ble_set_conn_param &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_req_handler
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_offset_handler
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_info_handler
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_end_handler
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_data_handler
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback
</UL>

<P><STRONG><a name="[3df]"></a>tuya_ble_ota_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tuya_ble_ota.o(i.tuya_ble_ota_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = tuya_ble_ota_init &rArr; tuya_ble_nv_read &rArr; ty_flash_read &rArr; hal_flash_read &rArr; spif_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_demo_init
</UL>

<P><STRONG><a name="[3e1]"></a>tuya_ble_ota_response</STRONG> (Thumb, 86 bytes, Stack size 56 bytes, tuya_ble_api.o(i.tuya_ble_ota_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = tuya_ble_ota_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_rsp
</UL>

<P><STRONG><a name="[3c7]"></a>tuya_ble_pair_rand_clear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tuya_ble_data_handler.o(i.tuya_ble_pair_rand_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_pair_rand_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
</UL>

<P><STRONG><a name="[3c4]"></a>tuya_ble_pair_rand_valid_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tuya_ble_data_handler.o(i.tuya_ble_pair_rand_valid_get))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_bulk_data_evt
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_request_evt
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_time_request_evt
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_response_evt
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_net_config_response_evt
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_extend_time_request_evt
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_send_evt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_reported_evt
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_send_evt
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_reported_evt
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_passthrough_evt
</UL>

<P><STRONG><a name="[356]"></a>tuya_ble_prod_beacon_get_rssi_avg</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tuya_ble_app_production_test.o(i.tuya_ble_prod_beacon_get_rssi_avg))
<BR><BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
</UL>

<P><STRONG><a name="[351]"></a>tuya_ble_prod_beacon_scan_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_app_production_test.o(i.tuya_ble_prod_beacon_scan_start))
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_enter
</UL>

<P><STRONG><a name="[355]"></a>tuya_ble_prod_beacon_scan_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_app_production_test.o(i.tuya_ble_prod_beacon_scan_stop))
<BR><BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
</UL>

<P><STRONG><a name="[352]"></a>tuya_ble_prod_gpio_test</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_app_production_test.o(i.tuya_ble_prod_gpio_test))
<BR><BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_gpio_test
</UL>

<P><STRONG><a name="[359]"></a>tuya_ble_prod_updata_mac</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_app_production_test.o(i.tuya_ble_prod_updata_mac))
<BR><BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
</UL>

<P><STRONG><a name="[371]"></a>tuya_ble_product_test_rsp</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, tuya_ble_product_test_demo.o(i.tuya_ble_product_test_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = tuya_ble_product_test_rsp &rArr; tuya_ble_production_test_asynchronous_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_production_test_asynchronous_response
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_check_sum
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_custom_app_production_test_process
</UL>

<P><STRONG><a name="[3e2]"></a>tuya_ble_production_test_asynchronous_response</STRONG> (Thumb, 74 bytes, Stack size 64 bytes, tuya_ble_api.o(i.tuya_ble_production_test_asynchronous_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = tuya_ble_production_test_asynchronous_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_product_test_rsp
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_send
</UL>

<P><STRONG><a name="[3ba]"></a>tuya_ble_queue_decrease</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tuya_ble_queue.o(i.tuya_ble_queue_decrease))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_queue_decrease
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[3bd]"></a>tuya_ble_queue_flush</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tuya_ble_queue.o(i.tuya_ble_queue_flush))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[3bb]"></a>tuya_ble_queue_get</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tuya_ble_queue.o(i.tuya_ble_queue_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_queue_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[3bf]"></a>tuya_ble_queue_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tuya_ble_queue.o(i.tuya_ble_queue_init))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_queue_init
</UL>

<P><STRONG><a name="[348]"></a>tuya_ble_rand_generator</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_rand_generator))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_rand_generator
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
</UL>

<P><STRONG><a name="[3c8]"></a>tuya_ble_register_key_generate</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, tuya_ble_secure.o(i.tuya_ble_register_key_generate))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = tuya_ble_register_key_generate &rArr; tuya_ble_aes128_ecb_encrypt &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_ecb_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
</UL>

<P><STRONG><a name="[3c5]"></a>tuya_ble_reset_ble_sn</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tuya_ble_data_handler.o(i.tuya_ble_reset_ble_sn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_reset_ble_sn
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
</UL>

<P><STRONG><a name="[3c3]"></a>tuya_ble_rtc_set_timestamp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_rtc_set_timestamp))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_with_dst_date_resp
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_app_local_time_data_resp
</UL>

<P><STRONG><a name="[39d]"></a>tuya_ble_sched_init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, tuya_ble_event.o(i.tuya_ble_sched_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_sched_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_is_word_aligned_tuya
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_queue_init
</UL>

<P><STRONG><a name="[2d4]"></a>tuya_ble_sdk_demo_init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, tuya_ble_sdk_demo.o(i.tuya_ble_sdk_demo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = tuya_ble_sdk_demo_init &rArr; tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_init
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_callback_queue_register
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_update_conn_param_timer_init
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnect_and_reset_timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_timer_init
</UL>

<P><STRONG><a name="[3ea]"></a>tuya_ble_sdk_init</STRONG> (Thumb, 380 bytes, Stack size 88 bytes, tuya_ble_api.o(i.tuya_ble_sdk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_str_to_hex
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_init
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_set_external_mcu_version
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_hextoascii
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_queue_init
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_addr_get
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_init
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_20_to_16
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_16_to_20
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_init
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_init
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_buffer_value_is_all_x
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_set_device_version
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inverted_array
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_addr_set
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_demo_init
</UL>

<P><STRONG><a name="[3e5]"></a>tuya_ble_sdk_test_dp_report_handler</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, tuya_ble_sdk_test.o(i.tuya_ble_sdk_test_dp_report_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = tuya_ble_sdk_test_dp_report_handler &rArr; tuya_ble_dp_data_with_time_send &rArr; data_2_klvlist &rArr; free_klv_list &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_with_time_send
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_send
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback
</UL>

<P><STRONG><a name="[3e8]"></a>tuya_ble_sdk_test_get_time_rsp</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, tuya_ble_sdk_test.o(i.tuya_ble_sdk_test_get_time_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = tuya_ble_sdk_test_get_time_rsp &rArr; tuya_ble_sdk_test_send &rArr; tuya_ble_production_test_asynchronous_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_send
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback
</UL>

<P><STRONG><a name="[2d5]"></a>tuya_ble_sdk_test_init</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, tuya_ble_sdk_test.o(i.tuya_ble_sdk_test_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = tuya_ble_sdk_test_init &rArr; tuya_ble_sdk_test_send &rArr; tuya_ble_production_test_asynchronous_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_spi_init
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_init
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pin_init
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_start
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_init
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_init
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_create
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_send
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_timer_init
</UL>

<P><STRONG><a name="[34e]"></a>tuya_ble_sdk_test_send</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, tuya_ble_sdk_test.o(i.tuya_ble_sdk_test_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = tuya_ble_sdk_test_send &rArr; tuya_ble_production_test_asynchronous_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_production_test_asynchronous_response
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_check_sum
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_unbind_mode_rsp
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_get_time_rsp
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback
</UL>

<P><STRONG><a name="[3e9]"></a>tuya_ble_sdk_test_unbind_mode_rsp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tuya_ble_sdk_test.o(i.tuya_ble_sdk_test_unbind_mode_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = tuya_ble_sdk_test_unbind_mode_rsp &rArr; tuya_ble_sdk_test_send &rArr; tuya_ble_production_test_asynchronous_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_send
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback
</UL>

<P><STRONG><a name="[240]"></a>tuya_ble_sdk_test_wake_up_handler</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, tuya_ble_sdk_test.o(i.tuya_ble_sdk_test_wake_up_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = tuya_ble_sdk_test_wake_up_handler &rArr; ty_ble_start_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_init
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart2_init
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_wdt_init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_exit_sleep
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_rtc_init
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_init
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_start
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_init
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_start_adv
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_init
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpt_key_state_handler
</UL>

<P><STRONG><a name="[33b]"></a>tuya_ble_set_device_version</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tuya_ble_data_handler.o(i.tuya_ble_set_device_version))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[3f1]"></a>tuya_ble_set_external_mcu_version</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, tuya_ble_data_handler.o(i.tuya_ble_set_external_mcu_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_set_external_mcu_version
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[3ec]"></a>tuya_ble_storage_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tuya_ble_storage.o(i.tuya_ble_storage_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = tuya_ble_storage_init &rArr; tuya_ble_storage_load_settings &rArr; tuya_ble_storage_save_sys_settings &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_init
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[3fe]"></a>tuya_ble_storage_load_settings</STRONG> (Thumb, 326 bytes, Stack size 56 bytes, tuya_ble_storage.o(i.tuya_ble_storage_load_settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = tuya_ble_storage_load_settings &rArr; tuya_ble_storage_save_sys_settings &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_settings_crc_ok
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_settings_crc_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_init
</UL>

<P><STRONG><a name="[3ff]"></a>tuya_ble_storage_save_auth_settings</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tuya_ble_storage.o(i.tuya_ble_storage_save_auth_settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = tuya_ble_storage_save_auth_settings &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_erase
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_hid
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
</UL>

<P><STRONG><a name="[379]"></a>tuya_ble_storage_save_sys_settings</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, tuya_ble_storage.o(i.tuya_ble_storage_save_sys_settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = tuya_ble_storage_save_sys_settings &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_erase
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
</UL>

<P><STRONG><a name="[338]"></a>tuya_ble_storage_write_auth_key_device_id_mac</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, tuya_ble_storage.o(i.tuya_ble_storage_write_auth_key_device_id_mac))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
</UL>

<P><STRONG><a name="[35a]"></a>tuya_ble_storage_write_hid</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tuya_ble_storage.o(i.tuya_ble_storage_write_hid))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = tuya_ble_storage_write_hid &rArr; tuya_ble_storage_save_auth_settings &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid
</UL>

<P><STRONG><a name="[3ef]"></a>tuya_ble_str_to_hex</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, tuya_ble_utils.o(i.tuya_ble_str_to_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tuya_ble_str_to_hex
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_char_2_ascii
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[33d]"></a>tuya_ble_time_req</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, tuya_ble_api.o(i.tuya_ble_time_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tuya_ble_time_req &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[350]"></a>tuya_ble_timer_create</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_timer_create &rArr; ty_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_init
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_update_conn_param_timer_init
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnect_and_reset_timer_init
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_enter
</UL>

<P><STRONG><a name="[344]"></a>tuya_ble_timer_start</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_timer_start &rArr; ty_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_update_conn_param_timer_start
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnect_and_reset_timer_start
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_start
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_enter
</UL>

<P><STRONG><a name="[36e]"></a>tuya_ble_timer_stop</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port_phy62xx.o(i.tuya_ble_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_timer_stop &rArr; ty_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_stop
</UL>

<P><STRONG><a name="[3c9]"></a>tuya_ble_uart_common_mcu_ota_data_from_ble_handler</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, tuya_ble_app_uart_common_handler.o(i.tuya_ble_uart_common_mcu_ota_data_from_ble_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = tuya_ble_uart_common_mcu_ota_data_from_ble_handler &rArr; tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_check_sum
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_send_data
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
</UL>

<P><STRONG><a name="[3cb]"></a>tuya_ble_uart_common_process</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, tuya_ble_app_uart_common_handler.o(i.tuya_ble_uart_common_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 780<LI>Call Chain = tuya_ble_uart_common_process &rArr; tuya_ble_uart_common_mcu_ota_data_from_uart_handler &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_custom_app_uart_common_process
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_uart_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_uart_cmd_evt
</UL>

<P><STRONG><a name="[3eb]"></a>tuya_ble_update_conn_param_timer_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tuya_ble_sdk_demo.o(i.tuya_ble_update_conn_param_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuya_ble_update_conn_param_timer_init &rArr; tuya_ble_timer_create &rArr; ty_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_demo_init
</UL>

<P><STRONG><a name="[3e4]"></a>tuya_ble_update_conn_param_timer_start</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_sdk_demo.o(i.tuya_ble_update_conn_param_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuya_ble_update_conn_param_timer_start &rArr; tuya_ble_timer_start &rArr; ty_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback
</UL>

<P><STRONG><a name="[346]"></a>tuya_ble_utc_sec_2_mytime</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, tuya_ble_unix_time.o(i.tuya_ble_utc_sec_2_mytime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tuya_ble_utc_sec_2_mytime &rArr; applib_dt_dayindex
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_last_day_of_mon
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_is_leap_year
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_dayindex
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback
</UL>

<P><STRONG><a name="[220]"></a>tuya_gen_AddService</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tuya_ble_service.o(i.tuya_gen_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = tuya_gen_AddService &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Register
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init
</UL>

<P><STRONG><a name="[3cf]"></a>tuya_sched_execute</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tuya_ble_event.o(i.tuya_sched_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = tuya_sched_execute &rArr; tuya_ble_event_process &rArr; tuya_ble_handle_ble_cmd_evt &rArr; tuya_ble_evt_process &rArr; tuya_ble_app_production_test_process &rArr; tuya_ble_app_sdk_test_process &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_main_tasks_exec
</UL>

<P><STRONG><a name="[3f8]"></a>ty_adc_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ty_adc_phy62xx.o(i.ty_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ty_adc_init &rArr; hal_adc_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_start
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init
</UL>

<P><STRONG><a name="[34a]"></a>ty_adc_start</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, ty_adc_phy62xx.o(i.ty_adc_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ty_adc_start &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_delay_ms
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_start
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[406]"></a>ty_adc_uninit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ty_adc_phy62xx.o(i.ty_adc_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ty_adc_uninit &rArr; hal_adc_stop &rArr; hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_virtual_enter_sleep_timer_cb
</UL>

<P><STRONG><a name="[228]"></a>ty_ble_connect_handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ty_ble_phy62xx.o(i.ty_ble_connect_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ty_ble_connect_handler &rArr; tuya_ble_connected_handler &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connected_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_ProcessEvent
</UL>

<P><STRONG><a name="[3b5]"></a>ty_ble_disconnect</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ty_ble_phy62xx.o(i.ty_ble_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ty_ble_disconnect &rArr; GAPRole_TerminateConnection &rArr; GAP_TerminateLinkReq &rArr; disconnectNext &rArr; linkDB_FindFirst
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
</UL>

<P><STRONG><a name="[229]"></a>ty_ble_disconnect_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ty_ble_phy62xx.o(i.ty_ble_disconnect_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ty_ble_disconnect_handler &rArr; tuya_ble_disconnected_handler &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send &rArr; tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnected_handler
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_disconn_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_ProcessEvent
</UL>

<P><STRONG><a name="[3b2]"></a>ty_ble_get_mac</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ty_ble_phy62xx.o(i.ty_ble_get_mac))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ty_ble_get_mac
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_addr_get
</UL>

<P><STRONG><a name="[407]"></a>ty_ble_notify</STRONG> (Thumb, 104 bytes, Stack size 264 bytes, tuya_ble_service.o(i.ty_ble_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Notification
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_GetCurrentMTUSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_send_data
</UL>

<P><STRONG><a name="[408]"></a>ty_ble_receive_data_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ty_ble_phy62xx.o(i.ty_ble_receive_data_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ty_ble_receive_data_handler &rArr; tuya_ble_gatt_receive_data &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_receive_data
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_write_attr_cb
</UL>

<P><STRONG><a name="[3b8]"></a>ty_ble_send_data</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ty_ble_phy62xx.o(i.ty_ble_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data
</UL>

<P><STRONG><a name="[21f]"></a>ty_ble_set_adv_param</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, ty_ble_phy62xx.o(i.ty_ble_set_adv_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ty_ble_set_adv_param &rArr; ty_ble_stop_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_stop_adv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init
</UL>

<P><STRONG><a name="[3b4]"></a>ty_ble_set_advdata_and_scanrsp</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, ty_ble_phy62xx.o(i.ty_ble_set_advdata_and_scanrsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ty_ble_set_advdata_and_scanrsp &rArr; ty_ble_stop_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_stop_adv
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_scan_rsp_data_update
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_adv_data_update
</UL>

<P><STRONG><a name="[21c]"></a>ty_ble_set_conn_param</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, ty_ble_phy62xx.o(i.ty_ble_set_conn_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = ty_ble_set_conn_param &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_update_conn_param_timer_cb
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_req_handler
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init
</UL>

<P><STRONG><a name="[21b]"></a>ty_ble_set_device_name</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ty_ble_phy62xx.o(i.ty_ble_set_device_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ty_ble_set_device_name &rArr; GGS_SetParameter &rArr; ggs_SetAttrWPermit
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init
</UL>

<P><STRONG><a name="[3e0]"></a>ty_ble_set_dle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ty_ble_phy62xx.o(i.ty_ble_set_dle))
<BR><BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_req_handler
</UL>

<P><STRONG><a name="[3b3]"></a>ty_ble_set_mac</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ty_ble_phy62xx.o(i.ty_ble_set_mac))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ty_ble_set_mac &rArr; ty_ble_stop_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_stop_adv
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_addr_set
</UL>

<P><STRONG><a name="[227]"></a>ty_ble_start_adv</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ty_ble_phy62xx.o(i.ty_ble_start_adv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = ty_ble_start_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_ProcessEvent
</UL>

<P><STRONG><a name="[409]"></a>ty_ble_stop_adv</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ty_ble_phy62xx.o(i.ty_ble_stop_adv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = ty_ble_stop_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_adv_param
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_virtual_enter_sleep_timer_cb
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_mac
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_advdata_and_scanrsp
</UL>

<P><STRONG><a name="[3d1]"></a>ty_flash_erase</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ty_flash_phy62xx.o(i.ty_flash_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ty_flash_erase &rArr; hal_flash_erase_sector &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_wdt_feed
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_sector (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_erase
</UL>

<P><STRONG><a name="[416]"></a>ty_flash_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ty_flash_phy62xx.o(i.ty_flash_init))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_init
</UL>

<P><STRONG><a name="[3d2]"></a>ty_flash_read</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ty_flash_phy62xx.o(i.ty_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ty_flash_read &rArr; hal_flash_read &rArr; spif_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_wdt_feed
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
</UL>

<P><STRONG><a name="[3d3]"></a>ty_flash_write</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ty_flash_phy62xx.o(i.ty_flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_wdt_feed
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_by_dma (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
</UL>

<P><STRONG><a name="[3f5]"></a>ty_i2c_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ty_i2c_phy62xx.o(i.ty_i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ty_i2c_init &rArr; hal_i2c_pin_init &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_pin_init (via Veneer)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init
</UL>

<P><STRONG><a name="[2d1]"></a>ty_i2c_send</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ty_i2c_phy62xx.o(i.ty_i2c_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = ty_i2c_send &rArr; hal_i2c_wait_tx_completed &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_wait_tx_completed (via Veneer)
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_send (via Veneer)
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_addr_update (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_write_byte
</UL>

<P><STRONG><a name="[3f6]"></a>ty_i2c_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ty_i2c_phy62xx.o(i.ty_i2c_start))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init
</UL>

<P><STRONG><a name="[40d]"></a>ty_i2c_uninit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ty_i2c_phy62xx.o(i.ty_i2c_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ty_i2c_uninit &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_deinit (via Veneer)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_virtual_enter_sleep_timer_cb
</UL>

<P><STRONG><a name="[40e]"></a>ty_key_press_get_pin_level</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ty_pin_phy62xx.o(i.ty_key_press_get_pin_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ty_key_press_get_pin_level
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_key_press_timeout_handler
</UL>

<P><STRONG><a name="[22c]"></a>ty_key_press_timeout_handler</STRONG> (Thumb, 360 bytes, Stack size 64 bytes, ty_key_press.o(i.ty_key_press_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ty_key_press_timeout_handler &rArr; ty_key_press_get_pin_level
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_util_count_one_in_num
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_key_press_get_pin_level
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_ProcessEvent
</UL>

<P><STRONG><a name="[241]"></a>ty_mainloop_timer_start</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, simplebleperipheral.o(i.ty_mainloop_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ty_mainloop_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_reload_timer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpt_key_state_handler
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_timer_init
</UL>

<P><STRONG><a name="[410]"></a>ty_mainloop_timer_stop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, simplebleperipheral.o(i.ty_mainloop_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ty_mainloop_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_enter_sleep
</UL>

<P><STRONG><a name="[312]"></a>ty_oled_clear</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ty_oled.o(i.ty_oled_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ty_oled_clear &rArr; oled_write_byte &rArr; ty_i2c_send &rArr; hal_i2c_wait_tx_completed &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_virtual_enter_sleep_timer_cb
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_init
</UL>

<P><STRONG><a name="[34f]"></a>ty_oled_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ty_oled.o(i.ty_oled_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ty_oled_init &rArr; ty_oled_show_string &rArr; oled_show_char &rArr; oled_set_pos &rArr; oled_write_byte &rArr; ty_i2c_send &rArr; hal_i2c_wait_tx_completed &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_oled_show_string
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_init
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[411]"></a>ty_oled_show_string</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, ty_oled.o(i.ty_oled_show_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ty_oled_show_string &rArr; oled_show_char &rArr; oled_set_pos &rArr; oled_write_byte &rArr; ty_i2c_send &rArr; hal_i2c_wait_tx_completed &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_show_char
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_oled_init
</UL>

<P><STRONG><a name="[69]"></a>ty_pin_handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ty_pin_phy62xx.o(i.ty_pin_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ty_pin_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_reload_timer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ty_pin_phy62xx.o(i.ty_pin_init)
</UL>
<P><STRONG><a name="[3f3]"></a>ty_pin_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ty_pin_phy62xx.o(i.ty_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ty_pin_init &rArr; hal_gpioin_register &rArr; hal_gpioin_enable &rArr; hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_register
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init
</UL>

<P><STRONG><a name="[3f7]"></a>ty_pwm_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ty_pwm_phy62xx.o(i.ty_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ty_pwm_init &rArr; hal_pwm_module_init &rArr; hal_pwm_stop &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_module_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init
</UL>

<P><STRONG><a name="[349]"></a>ty_pwm_start</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, ty_pwm_phy62xx.o(i.ty_pwm_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ty_pwm_start &rArr; hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_start (via Veneer)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_set_count_val (via Veneer)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_open_channel (via Veneer)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init (via Veneer)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_destroy (via Veneer)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_close_channel (via Veneer)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[413]"></a>ty_pwm_uninit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ty_pwm_phy62xx.o(i.ty_pwm_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ty_pwm_uninit &rArr; hal_pwm_module_deinit &rArr; hal_pwm_stop &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_module_deinit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_virtual_enter_sleep_timer_cb
</UL>

<P><STRONG><a name="[345]"></a>ty_rtc_get_time</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ty_rtc_phy62xx.o(i.ty_rtc_get_time))
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_generation
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[22b]"></a>ty_rtc_handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ty_rtc_phy62xx.o(i.ty_rtc_handler))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_ProcessEvent
</UL>

<P><STRONG><a name="[3fa]"></a>ty_rtc_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ty_rtc_phy62xx.o(i.ty_rtc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ty_rtc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_reload_timer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_init
</UL>

<P><STRONG><a name="[3e7]"></a>ty_rtc_set_time</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ty_rtc_phy62xx.o(i.ty_rtc_set_time))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_callback
</UL>

<P><STRONG><a name="[414]"></a>ty_rtc_uninit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ty_rtc_phy62xx.o(i.ty_rtc_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ty_rtc_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_virtual_enter_sleep_timer_cb
</UL>

<P><STRONG><a name="[34d]"></a>ty_spi_disable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ty_spi_phy62xx.o(i.ty_spi_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ty_spi_disable &rArr; hal_spi_bus_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[34b]"></a>ty_spi_enable</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ty_spi_phy62xx.o(i.ty_spi_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ty_spi_enable &rArr; hal_spi_bus_init &rArr; hal_spi_master_init
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[3f4]"></a>ty_spi_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ty_spi_phy62xx.o(i.ty_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ty_spi_init &rArr; hal_spi_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init
</UL>

<P><STRONG><a name="[34c]"></a>ty_spi_readWriteData</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ty_spi_phy62xx.o(i.ty_spi_readWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ty_spi_readWriteData &rArr; hal_spi_transmit &rArr; hal_spi_xmit_polling &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process
</UL>

<P><STRONG><a name="[374]"></a>ty_system_delay_ms</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ty_system_phy62xx.o(i.ty_system_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ty_system_delay_ms &rArr; WaitMs
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_delay_ms
</UL>

<P><STRONG><a name="[415]"></a>ty_system_enter_sleep</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ty_system_phy62xx.o(i.ty_system_enter_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ty_system_enter_sleep &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_mainloop_timer_stop
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_is_lock (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_virtual_enter_sleep_timer_cb
</UL>

<P><STRONG><a name="[157]"></a>ty_system_exit_sleep</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ty_system_phy62xx.o(i.ty_system_exit_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ty_system_exit_sleep &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_is_lock (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[2d3]"></a>ty_system_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ty_system_phy62xx.o(i.ty_system_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ty_system_init &rArr; ty_uart2_init &rArr; hal_uart_init &rArr; uart_hw_init &rArr; uart_hw_deinit &rArr; hal_clk_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart2_init
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_rtc_init
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_init
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_timer_init
</UL>

<P><STRONG><a name="[377]"></a>ty_system_reset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ty_system_phy62xx.o(i.ty_system_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ty_system_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_system_soft_reset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset
</UL>

<P><STRONG><a name="[40a]"></a>ty_system_wdt_feed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ty_system_phy62xx.o(i.ty_system_wdt_feed))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_write
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_read
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_erase
</UL>

<P><STRONG><a name="[3f9]"></a>ty_system_wdt_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ty_system_phy62xx.o(i.ty_system_wdt_init))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
</UL>

<P><STRONG><a name="[41a]"></a>ty_system_wdt_uninit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ty_system_phy62xx.o(i.ty_system_wdt_uninit))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_virtual_enter_sleep_timer_cb
</UL>

<P><STRONG><a name="[401]"></a>ty_timer_create</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ty_timer_phy62xx.o(i.ty_timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ty_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_create
</UL>

<P><STRONG><a name="[402]"></a>ty_timer_start</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ty_timer_phy62xx.o(i.ty_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ty_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalTimeUpdate (via Veneer)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_reload_timer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_start
</UL>

<P><STRONG><a name="[403]"></a>ty_timer_stop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ty_timer_phy62xx.o(i.ty_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ty_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_stop
</UL>

<P><STRONG><a name="[3fc]"></a>ty_uart2_init</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, ty_uart_phy62xx.o(i.ty_uart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ty_uart2_init &rArr; hal_uart_init &rArr; uart_hw_init &rArr; uart_hw_deinit &rArr; hal_clk_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_tx_buf
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_init
</UL>

<P><STRONG><a name="[36b]"></a>ty_uart2_send</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ty_uart_phy62xx.o(i.ty_uart2_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_send_data
</UL>

<P><STRONG><a name="[418]"></a>ty_uart2_uninit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ty_uart_phy62xx.o(i.ty_uart2_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ty_uart2_uninit &rArr; hal_uart_deinit &rArr; uart_hw_deinit &rArr; hal_clk_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_virtual_enter_sleep_timer_cb
</UL>

<P><STRONG><a name="[3fb]"></a>ty_uart_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ty_uart_phy62xx.o(i.ty_uart_init))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
</UL>

<P><STRONG><a name="[419]"></a>ty_uart_uninit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ty_uart_phy62xx.o(i.ty_uart_uninit))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_virtual_enter_sleep_timer_cb
</UL>

<P><STRONG><a name="[40f]"></a>ty_util_count_one_in_num</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, ty_util.o(i.ty_util_count_one_in_num))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_key_press_timeout_handler
</UL>

<P><STRONG><a name="[3b0]"></a>vTuyaPortFree</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, tuya_ble_heap.o(i.vTuyaPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>

<P><STRONG><a name="[f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(.text)
</UL>
<P><STRONG><a name="[41e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[93]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b6]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[41f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[420]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[421]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[422]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[423]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[21]"></a>hard_fault</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, jump_table.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[b]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[363]"></a>rand</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rand_generator (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send (via Veneer)
</UL>

<P><STRONG><a name="[424]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[21d]"></a>__aeabi_uread8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uread8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_uread8
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_adv_param (via Veneer)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init (via Veneer)
</UL>

<P><STRONG><a name="[425]"></a>__rt_uread8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uread8.o(.text), UNUSED)

<P><STRONG><a name="[426]"></a>_uread8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uread8.o(.text), UNUSED)

<P><STRONG><a name="[33a]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler (via Veneer)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_init (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process (via Veneer)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_dp_report_handler (via Veneer)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_scan_rsp_data_update (via Veneer)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_adv_data_update (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_key_press_timeout_handler (via Veneer)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_advdata_and_scanrsp (via Veneer)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_req_handler (via Veneer)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_offset_handler (via Veneer)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_info_handler (via Veneer)
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_data_handler (via Veneer)
</UL>

<P><STRONG><a name="[427]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[428]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[21e]"></a>__aeabi_uwrite8</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, uwrite8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uwrite8
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process (via Veneer)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init (via Veneer)
</UL>

<P><STRONG><a name="[429]"></a>__rt_uwrite8</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uwrite8.o(.text), UNUSED)

<P><STRONG><a name="[42a]"></a>_uwrite8</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uwrite8.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>atol</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = atol &rArr; strtol
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_with_dst_date_resp (via Veneer)
</UL>

<P><STRONG><a name="[9b]"></a>atoll</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atoll &rArr; __strtoll &rArr; _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp (via Veneer)
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
</UL>

<P><STRONG><a name="[a1]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[22f]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_evt (via Veneer)
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
</UL>

<P><STRONG><a name="[28b]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
</UL>

<P><STRONG><a name="[42b]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_adv_param (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[28a]"></a>__ARM_scalbn</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_adv_param (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
</UL>

<P><STRONG><a name="[42c]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_sdk_test_process (via Veneer)
</UL>

<P><STRONG><a name="[230]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_evt (via Veneer)
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_adv_param (via Veneer)
</UL>

<P><STRONG><a name="[28c]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal (via Veneer)
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[42d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[42e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = strtol
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>

<P><STRONG><a name="[9c]"></a>__strtoll</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, __strtoll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __strtoll &rArr; _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via Veneer)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoll
</UL>

<P><STRONG><a name="[42f]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[9e]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[a6]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a4]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[fa]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[94]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[430]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[431]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>_strtoull</STRONG> (Thumb, 214 bytes, Stack size 48 bytes, _strtoull.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
</UL>

<P><STRONG><a name="[432]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
</UL>

<P><STRONG><a name="[433]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[434]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>phy_uart_evt_hdl</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ty_uart_phy62xx.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = phy_uart_evt_hdl &rArr; tuya_ble_common_uart_receive_data &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ty_uart_phy62xx.o(.constdata)
</UL>
<P><STRONG><a name="[11]"></a>osal_idle_task</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, pwrmgr.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osal_idle_task
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_pwrmgr_powerconserve0 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pwrmgr.o(i.hal_pwrmgr_init)
</UL>
<P><STRONG><a name="[bf]"></a>hal_pwrmgr_enter_sleep_rtc_reset</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, pwrmgr.o(_section_sram_code_))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_sleep_off_mode (via Veneer)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_RTC (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention_clr
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_16MXtal_by_rcTracking
</UL>

<P><STRONG><a name="[6a]"></a>hal_UART1_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, uart.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_UART1_IRQHandler &rArr; irq_rx_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_tx_empty_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_rx_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(i.uart_hw_init)
</UL>
<P><STRONG><a name="[22]"></a>hal_UART0_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, uart.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_UART0_IRQHandler &rArr; irq_rx_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_tx_empty_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_rx_handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> jump_table.o(jump_table_mem_area)
<LI> uart.o(i.uart_hw_init)
</UL>
<P><STRONG><a name="[c4]"></a>L2CAP_Fragment_SendDataPkt</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, l2cap_util.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L2CAP_Fragment_SendDataPkt
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_SendDataPkt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capPktToSegmentBuff (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSegmentBuffToLinkLayer
</UL>

<P><STRONG><a name="[c6]"></a>l2capSegmentBuffToLinkLayer</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, l2cap_util.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = l2capSegmentBuffToLinkLayer &rArr; L2CAP_Fragment_SendDataPkt
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Fragment_SendDataPkt
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capEncapSendData (via Veneer)
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capPocessFragmentTxData
</UL>

<P><STRONG><a name="[2d]"></a>l2capPocessFragmentTxData</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, l2cap_util.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = l2capPocessFragmentTxData &rArr; l2capSegmentBuffToLinkLayer &rArr; L2CAP_Fragment_SendDataPkt
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capSegmentBuffToLinkLayer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[1c]"></a>DTM_UART_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, rf_phy_driver.o(i.DTM_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DTM_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_phy_driver.o(i.rf_phy_direct_test)
</UL>
<P><STRONG><a name="[c7]"></a>HCI_LE_LtkReqNegReplyCmd</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, patch.o(i.HCI_LE_LtkReqNegReplyCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HCI_LE_LtkReqNegReplyCmd &rArr; LL_EncLtkNegReply
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_CommandCompleteEvent (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EncLtkNegReply
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderProcessLTKReq (via Veneer)
</UL>

<P><STRONG><a name="[ca]"></a>HCI_LE_LtkReqReplyCmd</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, patch.o(i.HCI_LE_LtkReqReplyCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HCI_LE_LtkReqReplyCmd &rArr; LL_EncLtkReply
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_CommandCompleteEvent (via Veneer)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EncLtkReply
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smResponderProcessLTKReq (via Veneer)
</UL>

<P><STRONG><a name="[27]"></a>LL_ENC_AES128_Encrypt1</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, patch.o(i.LL_ENC_AES128_Encrypt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_ENC_AES128_Encrypt1
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_AES128_Encrypt0 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[29]"></a>LL_ENC_Decrypt1</STRONG> (Thumb, 364 bytes, Stack size 40 bytes, patch.o(i.LL_ENC_Decrypt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LL_ENC_Decrypt1
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_LoadKey (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_GenerateNonce (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[28]"></a>LL_ENC_Encrypt1</STRONG> (Thumb, 342 bytes, Stack size 40 bytes, patch.o(i.LL_ENC_Encrypt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LL_ENC_Encrypt1
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_LoadKey (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_GenerateNonce (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[c8]"></a>LL_EncLtkNegReply</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, patch.o(i.LL_EncLtkNegReply))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_EncLtkNegReply
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ConnActive (via Veneer)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llEnqueueCtrlPkt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_LtkReqNegReplyCmd
</UL>

<P><STRONG><a name="[cb]"></a>LL_EncLtkReply</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, patch.o(i.LL_EncLtkReply))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_EncLtkReply
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ConnActive (via Veneer)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llEnqueueCtrlPkt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_LtkReqReplyCmd
</UL>

<P><STRONG><a name="[24]"></a>LL_IRQHandler1</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, patch.o(i.LL_IRQHandler1))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LL_IRQHandler1 &rArr; ll_processBasicIRQ_secondaryScanSRX
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_fine_time (via Veneer)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_schedule_next_event (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processPrdScanIRQ (via Veneer)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processPrdAdvIRQ (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processExtScanIRQ (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processExtInitIRQ (via Veneer)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processExtAdvIRQ (via Veneer)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ (via Veneer)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_rx_timeout (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_tr_mode (via Veneer)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_irq_status (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_clr_irq (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_debug_output (via Veneer)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecScan (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecInit (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecAdvEvt (via Veneer)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSecAdvAllow (via Veneer)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ_secondaryScanSRX
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ_secondaryInitSRX
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ_secondaryAdvTRX
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ_ScanTRX
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ_SRX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[16]"></a>LL_SetAdvControl1</STRONG> (Thumb, 444 bytes, Stack size 24 bytes, patch.o(i.LL_SetAdvControl1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_SetAdvControl1
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_timer (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_debug_output (via Veneer)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ll_patch_slave)
</UL>
<P><STRONG><a name="[13]"></a>LL_SetAdvParam1</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, patch.o(i.LL_SetAdvParam1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LL_SetAdvParam1
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetAdvParam0 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ll_patch_slave)
</UL>
<P><STRONG><a name="[2e]"></a>LL_SetDataLengh1</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, patch.o(i.LL_SetDataLengh1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_SetDataLengh1
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetDataLengh0 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[33]"></a>LL_set_default_conn_params1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, patch.o(i.LL_set_default_conn_params1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_set_default_conn_params1
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_set_default_conn_params0 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[e]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_armcm0.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(.text)
</UL>
<P><STRONG><a name="[f1]"></a>WaitMs</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, clock.o(i.WaitMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WaitMs
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_delay_ms (via Veneer)
</UL>

<P><STRONG><a name="[176]"></a>WaitUs</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, clock.o(i.WaitUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WaitUs
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>

<P><STRONG><a name="[f4]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[435]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[353]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_feature_weather_data_request_with_location (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test (via Veneer)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_read_mac (via Veneer)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint (via Veneer)
</UL>

<P><STRONG><a name="[436]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[437]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[b0]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoll
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>

<P><STRONG><a name="[438]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[439]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[43a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[43b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[189]"></a>__wdt_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, patch.o(i.__wdt_init))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1
</UL>

<P><STRONG><a name="[f6]"></a>_efuse_chip_version_check</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, phy_sec_ext.o(i._efuse_chip_version_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _efuse_chip_version_check &rArr; finidv
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;efuse_read (via Veneer)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finidv
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rom_sec_boot_init
</UL>

<P><STRONG><a name="[d]"></a>_hard_fault</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, jump_table.o(i._hard_fault))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.emb_text)
</UL>
<P><STRONG><a name="[fe]"></a>_rom_sec_boot_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, phy_sec_ext.o(i._rom_sec_boot_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _rom_sec_boot_init &rArr; _efuse_chip_version_check &rArr; finidv
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;efuse_init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_efuse_chip_version_check
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_boot_init
</UL>

<P><STRONG><a name="[103]"></a>app_main</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, simplebleperipheral_main.o(i.app_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_main
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_system (via Veneer)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_pwrmgr_device (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_init_system (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>config_RTC1</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, patch.o(i.config_RTC1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = config_RTC1
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_LL_remainder_time (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[ff]"></a>efuse_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, phy_sec_ext.o(i.efuse_init))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rom_sec_boot_init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1
</UL>

<P><STRONG><a name="[f8]"></a>finidv</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, phy_sec_ext.o(i.finidv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = finidv
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ENC_AES128_Encrypt0 (via Veneer)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;efuse_read (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_efuse_chip_version_check
</UL>

<P><STRONG><a name="[10d]"></a>gen_pn_prbs9</STRONG> (Thumb, 116 bytes, Stack size 72 bytes, rf_phy_driver.o(i.gen_pn_prbs9))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gen_pn_prbs9
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bit_to_byte (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ble_pkt_gen
</UL>

<P><STRONG><a name="[8f]"></a>hal_TIMER5_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, timer.o(i.hal_TIMER5_IRQHandler), UNUSED, KEPT)

<P><STRONG><a name="[90]"></a>hal_TIMER6_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, timer.o(i.hal_TIMER6_IRQHandler), UNUSED, KEPT)

<P><STRONG><a name="[117]"></a>hal_clk_gate_disable</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, clock.o(i.hal_clk_gate_disable))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop (via Veneer)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_deinit (via Veneer)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_deinit
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_deinit (via Veneer)
</UL>

<P><STRONG><a name="[11a]"></a>hal_clk_gate_enable</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, clock.o(i.hal_clk_gate_enable))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel (via Veneer)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init (via Veneer)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_pin_init
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_spif_cache_config
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_init (via Veneer)
</UL>

<P><STRONG><a name="[41b]"></a>hal_clk_reset</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, clock.o(i.hal_clk_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_clk_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_init (via Veneer)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_deinit (via Veneer)
</UL>

<P><STRONG><a name="[110]"></a>hal_flash_erase_sector</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, flash.o(i.hal_flash_erase_sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_flash_erase_sector &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_cache_tag_flush
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_spif_wait_nobusy_x
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_unlock
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_lock
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_erase_sector (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_erase (via Veneer)
</UL>

<P><STRONG><a name="[112]"></a>hal_flash_read</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, flash.o(i.hal_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_flash_read &rArr; spif_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_unlock
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_LowCurrentLdo_enable
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_read (via Veneer)
</UL>

<P><STRONG><a name="[113]"></a>hal_flash_write_by_dma</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, flash.o(i.hal_flash_write_by_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_spif_wait_nobusy_x
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_unlock
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_lock
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_write_dma (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_flash_write (via Veneer)
</UL>

<P><STRONG><a name="[115]"></a>hal_get_flash_info</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, flash.o(i.hal_get_flash_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hal_get_flash_info &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_spif_wait_nobusy_x
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_unlock
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_lock
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_rddata (via Veneer)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_cmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_spif_cache_config
</UL>

<P><STRONG><a name="[40b]"></a>hal_i2c_addr_update</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, i2c.o(i.hal_i2c_addr_update))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_send (via Veneer)
</UL>

<P><STRONG><a name="[116]"></a>hal_i2c_deinit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, i2c.o(i.hal_i2c_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_i2c_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_uninit (via Veneer)
</UL>

<P><STRONG><a name="[118]"></a>hal_i2c_init</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, i2c.o(i.hal_i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_i2c_init
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_enable
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_get_pclk (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_init (via Veneer)
</UL>

<P><STRONG><a name="[11b]"></a>hal_i2c_pin_init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, i2c.o(i.hal_i2c_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_i2c_pin_init &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set (via Veneer)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_enable
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_init (via Veneer)
</UL>

<P><STRONG><a name="[40c]"></a>hal_i2c_send</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, i2c.o(i.hal_i2c_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_i2c_send
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_send (via Veneer)
</UL>

<P><STRONG><a name="[11e]"></a>hal_i2c_wait_tx_completed</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, i2c.o(i.hal_i2c_wait_tx_completed))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = hal_i2c_wait_tx_completed &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf (via Veneer)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_systick
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ms_intv
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_send (via Veneer)
</UL>

<P><STRONG><a name="[120]"></a>hal_ms_intv</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, clock.o(i.hal_ms_intv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_ms_intv
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_wait_tx_completed
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_xmit_polling (via Veneer)
</UL>

<P><STRONG><a name="[127]"></a>hal_pwm_close_channel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, pwm.o(i.hal_pwm_close_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwm_close_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start (via Veneer)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_module_deinit
</UL>

<P><STRONG><a name="[12c]"></a>hal_pwm_destroy</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, pwm.o(i.hal_pwm_destroy))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start (via Veneer)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_module_init
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_module_deinit
</UL>

<P><STRONG><a name="[129]"></a>hal_pwm_init</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, pwm.o(i.hal_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = hal_pwm_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_enable
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start (via Veneer)
</UL>

<P><STRONG><a name="[12b]"></a>hal_pwm_module_deinit</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, pwm.o(i.hal_pwm_module_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_pwm_module_deinit &rArr; hal_pwm_stop &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_destroy
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_close_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_uninit (via Veneer)
</UL>

<P><STRONG><a name="[12e]"></a>hal_pwm_module_init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, pwm.o(i.hal_pwm_module_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_pwm_module_init &rArr; hal_pwm_stop &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_init (via Veneer)
</UL>

<P><STRONG><a name="[12f]"></a>hal_pwm_open_channel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, pwm.o(i.hal_pwm_open_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_pwm_open_channel &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start (via Veneer)
</UL>

<P><STRONG><a name="[412]"></a>hal_pwm_set_count_val</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_set_count_val))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_pwm_set_count_val
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start (via Veneer)
</UL>

<P><STRONG><a name="[130]"></a>hal_pwm_start</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_pwm_start &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_start (via Veneer)
</UL>

<P><STRONG><a name="[12d]"></a>hal_pwm_stop</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_pwm_stop &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_disable
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_module_init
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_module_deinit
</UL>

<P><STRONG><a name="[126]"></a>hal_pwrmgr_LowCurrentLdo_enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_LowCurrentLdo_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_pwrmgr_LowCurrentLdo_enable &rArr; hal_flash_read &rArr; spif_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_low_power_io_init
</UL>

<P><STRONG><a name="[124]"></a>hal_pwrmgr_RAM_retention</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pwrmgr.o(i.hal_pwrmgr_RAM_retention))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_low_power_io_init
</UL>

<P><STRONG><a name="[c1]"></a>hal_pwrmgr_RAM_retention_clr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwrmgr.o(i.hal_pwrmgr_RAM_retention_clr))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_enter_sleep_rtc_reset
</UL>

<P><STRONG><a name="[125]"></a>hal_pwrmgr_RAM_retention_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, pwrmgr.o(i.hal_pwrmgr_RAM_retention_set))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_low_power_io_init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_sleep_process
</UL>

<P><STRONG><a name="[132]"></a>hal_pwrmgr_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_pwrmgr_init
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSleep (via Veneer)
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[136]"></a>hal_pwrmgr_is_lock</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_is_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_pwrmgr_is_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_exit_sleep (via Veneer)
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_enter_sleep (via Veneer)
</UL>

<P><STRONG><a name="[131]"></a>hal_pwrmgr_lock</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_exit_sleep (via Veneer)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_start
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_start (via Veneer)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit (via Veneer)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf (via Veneer)
</UL>

<P><STRONG><a name="[12a]"></a>hal_pwrmgr_register</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, pwrmgr.o(i.hal_pwrmgr_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_pwrmgr_register
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_init (via Veneer)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init (via Veneer)
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init (via Veneer)
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spif_cache_init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>hal_pwrmgr_sleep_process</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_sleep_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_sleep_process
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[c3]"></a>hal_pwrmgr_unlock</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSleep (via Veneer)
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_enter_sleep (via Veneer)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop (via Veneer)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle (via Veneer)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_tx_empty_handler
</UL>

<P><STRONG><a name="[137]"></a>hal_pwrmgr_unregister</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_unregister))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_unregister
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit (via Veneer)
</UL>

<P><STRONG><a name="[1f]"></a>hal_pwrmgr_wakeup_process</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_wakeup_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_wakeup_process
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[13a]"></a>hal_rom_boot_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, patch.o(i.hal_rom_boot_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hal_rom_boot_init &rArr; _rom_sec_boot_init &rArr; _efuse_chip_version_check &rArr; finidv
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rom_sec_boot_init
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[13e]"></a>hal_rtc_clock_config</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, clock.o(i.hal_rtc_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_rtc_clock_config &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13f]"></a>hal_spif_cache_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash.o(i.hal_spif_cache_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = hal_spif_cache_init &rArr; hw_spif_cache_config &rArr; hal_get_flash_info &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_spif_cache_config
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[417]"></a>hal_system_soft_reset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, clock.o(i.hal_system_soft_reset))
<BR><BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_reset (via Veneer)
</UL>

<P><STRONG><a name="[11f]"></a>hal_systick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.hal_systick))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_wait_tx_completed
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_xmit_polling (via Veneer)
</UL>

<P><STRONG><a name="[14]"></a>llCalcMaxScanTime1</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, patch.o(i.llCalcMaxScanTime1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llCalcMaxScanTime1 &rArr; read_LL_remainder_time1
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_LL_remainder_time1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ll_patch_slave)
</UL>
<P><STRONG><a name="[32]"></a>llConnTerminate1</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, patch.o(i.llConnTerminate1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llConnTerminate1
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llProcessChanMap (via Veneer)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llConnTerminate0 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[2f]"></a>llProcessTxData1</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, patch.o(i.llProcessTxData1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llProcessTxData1
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llProcessTxData0 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[15]"></a>llSecAdvAllow1</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, patch.o(i.llSecAdvAllow1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llSecAdvAllow1 &rArr; read_LL_remainder_time1
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_LL_remainder_time1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ll_patch_slave)
</UL>
<P><STRONG><a name="[19]"></a>llSetupNextSlaveEvent1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, patch.o(i.llSetupNextSlaveEvent1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llSetupNextSlaveEvent1
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupNextSlaveEvent0 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ll_patch_slave)
</UL>
<P><STRONG><a name="[17]"></a>llSetupSecAdvEvt1</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, patch.o(i.llSetupSecAdvEvt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = llSetupSecAdvEvt1 &rArr; rf_phy_change_cfg0
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecScannableAdvEvt (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecNonConnectableAdvEvt (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecConnectableAdvEvt (via Veneer)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv (via Veneer)
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_change_cfg0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ll_patch_slave)
</UL>
<P><STRONG><a name="[31]"></a>ll_adptive_adj_next_time1</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, patch.o(i.ll_adptive_adj_next_time1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ll_adptive_adj_next_time1
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_loop_cycle (via Veneer)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_anchor (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[30]"></a>ll_generateTxBuffer1</STRONG> (Thumb, 410 bytes, Stack size 40 bytes, patch.o(i.ll_generateTxBuffer1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ll_generateTxBuffer1
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_tx_read_ptr (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_write_tfifo (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_tfifo_wrptr (via Veneer)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llEnqueueCtrlPkt (via Veneer)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_tx_read_ptr (via Veneer)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTxBufferSize (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[23]"></a>ll_hw_go1</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, patch.o(i.ll_hw_go1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ll_hw_go1
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_max_length (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_fine_time (via Veneer)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_rx_timeout (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_tr_mode (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[155]"></a>ll_patch_slave</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, patch.o(i.ll_patch_slave))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>ll_processBasicIRQ_SRX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, patch.o(i.ll_processBasicIRQ_SRX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_processBasicIRQ_SRX
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1
</UL>

<P><STRONG><a name="[de]"></a>ll_processBasicIRQ_ScanTRX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, patch.o(i.ll_processBasicIRQ_ScanTRX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_processBasicIRQ_ScanTRX
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1
</UL>

<P><STRONG><a name="[dd]"></a>ll_processBasicIRQ_secondaryAdvTRX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, patch.o(i.ll_processBasicIRQ_secondaryAdvTRX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_processBasicIRQ_secondaryAdvTRX
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1
</UL>

<P><STRONG><a name="[e1]"></a>ll_processBasicIRQ_secondaryInitSRX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, patch.o(i.ll_processBasicIRQ_secondaryInitSRX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_processBasicIRQ_secondaryInitSRX
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1
</UL>

<P><STRONG><a name="[e0]"></a>ll_processBasicIRQ_secondaryScanSRX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, patch.o(i.ll_processBasicIRQ_secondaryScanSRX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_processBasicIRQ_secondaryScanSRX
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_processBasicIRQ (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IRQHandler1
</UL>

<P><STRONG><a name="[18]"></a>ll_scheduler2</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, patch.o(i.ll_scheduler2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_scheduler2
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_scheduler0 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ll_patch_slave)
</UL>
<P><STRONG><a name="[c]"></a>main</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = main &rArr; rf_phy_direct_test &rArr; rf_phy_dtm_trigged &rArr; rf_phy_dtm_ble_pkt_gen &rArr; gen_pn_prbs9
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_exit_sleep (via Veneer)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_patch_slave
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config (via Veneer)
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spif_cache_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_irq_init (via Veneer)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf_init (via Veneer)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_init (via Veneer)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_low_power_io_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1d]"></a>osalInitTasks</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, osal_simplebleperipheral.o(i.osalInitTasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = osalInitTasks &rArr; phy_timer_init &rArr; tuya_ble_sdk_demo_init &rArr; tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init (via Veneer)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_timer_init (via Veneer)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_CbTimerInit (via Veneer)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleBLEPeripheral_Init (via Veneer)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_Init (via Veneer)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init (via Veneer)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Init (via Veneer)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init (via Veneer)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Init (via Veneer)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Init (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_Init (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[169]"></a>rc32k_calibration</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rc32k_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rc32k_calibration
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[25]"></a>rf_calibrate1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rf_phy_driver.o(i.rf_calibrate1))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rf_calibrate1 &rArr; rf_tpCal_gen_cap_arrary &rArr; rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_gen_cap_arrary
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rxDcoc_cfg
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[17c]"></a>rf_phy_ana_cfg</STRONG> (Thumb, 228 bytes, Stack size 12 bytes, rf_phy_driver.o(i.rf_phy_ana_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rf_phy_ana_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>

<P><STRONG><a name="[16c]"></a>rf_phy_bb_cfg</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_bb_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rf_phy_bb_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_crc_fmt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
</UL>

<P><STRONG><a name="[26]"></a>rf_phy_change_cfg0</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, rf_phy_driver.o(i.rf_phy_change_cfg0))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rf_phy_change_cfg0
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupSecAdvEvt1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[15b]"></a>rf_phy_direct_test</STRONG> (Thumb, 630 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_direct_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = rf_phy_direct_test &rArr; rf_phy_dtm_trigged &rArr; rf_phy_dtm_ble_pkt_gen &rArr; gen_pn_prbs9
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf (via Veneer)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf_init (via Veneer)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_timer (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_fine_time (via Veneer)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_trigger (via Veneer)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_trx_settle (via Veneer)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_rst_tfifo (via Veneer)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_irq_status (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_clr_irq (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_get_pktFoot
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_evt_send
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_cmd_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[177]"></a>rf_phy_dtm_ble_pkt_gen</STRONG> (Thumb, 116 bytes, Stack size 264 bytes, rf_phy_driver.o(i.rf_phy_dtm_ble_pkt_gen))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = rf_phy_dtm_ble_pkt_gen &rArr; gen_pn_prbs9
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_write_tfifo (via Veneer)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_pn_prbs9
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>

<P><STRONG><a name="[16f]"></a>rf_phy_dtm_cmd_parse</STRONG> (Thumb, 904 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_dtm_cmd_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rf_phy_dtm_cmd_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin2pin3_control (via Veneer)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>

<P><STRONG><a name="[170]"></a>rf_phy_dtm_evt_send</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_dtm_evt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rf_phy_dtm_evt_send &rArr; hal_uart_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_byte (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>

<P><STRONG><a name="[171]"></a>rf_phy_dtm_trigged</STRONG> (Thumb, 688 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_dtm_trigged))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = rf_phy_dtm_trigged &rArr; rf_phy_dtm_ble_pkt_gen &rArr; gen_pn_prbs9
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_fine_time (via Veneer)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_trigger (via Veneer)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_timing (via Veneer)
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_stx (via Veneer)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_srx (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_irq (via Veneer)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_rst_tfifo (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_clr_irq (via Veneer)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_cfg_avg
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rxDcoc_cfg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_set_txPower
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_zigbee_pkt_gen
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_ble_pkt_gen
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>

<P><STRONG><a name="[180]"></a>rf_phy_dtm_zigbee_pkt_gen</STRONG> (Thumb, 110 bytes, Stack size 160 bytes, rf_phy_driver.o(i.rf_phy_dtm_zigbee_pkt_gen))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rf_phy_dtm_zigbee_pkt_gen
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zigbee_crc16_gen (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_write_tfifo (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>

<P><STRONG><a name="[175]"></a>rf_phy_get_pktFoot</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rf_phy_driver.o(i.rf_phy_get_pktFoot))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rf_phy_get_pktFoot
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_direct_test
</UL>

<P><STRONG><a name="[20]"></a>rf_phy_ini</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rf_phy_driver.o(i.rf_phy_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rf_phy_ini &rArr; rf_phy_bb_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_tx2rx_timing_config (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_set_txPower
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_bb_cfg
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[17f]"></a>rf_phy_set_txPower</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, rf_phy_driver.o(i.rf_phy_set_txPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rf_phy_set_txPower
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>

<P><STRONG><a name="[16b]"></a>rf_rxDcoc_cfg</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_rxDcoc_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rf_rxDcoc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>

<P><STRONG><a name="[17e]"></a>rf_tpCal_cfg_avg</STRONG> (Thumb, 182 bytes, Stack size 28 bytes, rf_phy_driver.o(i.rf_tpCal_cfg_avg))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rf_tpCal_cfg_avg &rArr; rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tp_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_dtm_trigged
</UL>

<P><STRONG><a name="[16a]"></a>rf_tpCal_gen_cap_arrary</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, rf_phy_driver.o(i.rf_tpCal_gen_cap_arrary))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rf_tpCal_gen_cap_arrary &rArr; rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tp_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[186]"></a>rf_tp_cal</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_tp_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_gen_cap_arrary
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_cfg_avg
</UL>

<P><STRONG><a name="[1b]"></a>ty_sleep_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.ty_sleep_handler))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[1a]"></a>ty_wakeup_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i.ty_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ty_wakeup_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[2c]"></a>wakeupProcess1</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, patch.o(i.wakeupProcess1))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = wakeupProcess1 &rArr; wakeup_init1 &rArr; check_96MXtal_by_rcTracking
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalTimeUpdate (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_irq_init (via Veneer)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_flag (via Veneer)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wakeup_process (via Veneer)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_system (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_timer (via Veneer)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_counter (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_fine_time (via Veneer)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_tx2rx_timing_config (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_debug_output (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL>
<P><STRONG><a name="[2b]"></a>wakeup_init1</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, patch.o(i.wakeup_init1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wakeup_init1 &rArr; check_96MXtal_by_rcTracking
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_init (via Veneer)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_timer (via Veneer)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_max_length (via Veneer)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_counter (via Veneer)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_timing (via Veneer)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_rx_timeout_1st (via Veneer)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_rx_timeout (via Veneer)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_loop_timeout (via Veneer)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_empty_head (via Veneer)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_ign_rfifo (via Veneer)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;efuse_init
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wdt_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_96MXtal_by_rcTracking
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_16MXtal_by_rcTracking
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeupProcess1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(_section_xip_code_)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[62]"></a>tuya_ble_disconnect_and_reset_timer_cb</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tuya_ble_sdk_demo.o(i.tuya_ble_disconnect_and_reset_timer_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = tuya_ble_disconnect_and_reset_timer_cb &rArr; tuya_ble_gap_disconnect &rArr; ty_ble_disconnect &rArr; GAPRole_TerminateConnection &rArr; GAP_TerminateLinkReq &rArr; disconnectNext &rArr; linkDB_FindFirst
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_sdk_demo.o(i.tuya_ble_disconnect_and_reset_timer_init)
</UL>
<P><STRONG><a name="[64]"></a>tuya_ble_sdk_callback</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, tuya_ble_sdk_demo.o(i.tuya_ble_sdk_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = tuya_ble_sdk_callback &rArr; tuya_ble_ota_handler &rArr; tuya_ble_ota_req_handler &rArr; ty_ble_set_conn_param &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_rtc_set_time
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_utc_sec_2_mytime
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_unbind_mode_rsp
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_send
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_get_time_rsp
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_dp_report_handler
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_handler
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_demo_handler
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ascii_to_int
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_update_conn_param_timer_start
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_sdk_demo.o(i.tuya_ble_sdk_demo_init)
</UL>
<P><STRONG><a name="[66]"></a>tuya_ble_update_conn_param_timer_cb</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tuya_ble_sdk_demo.o(i.tuya_ble_update_conn_param_timer_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = tuya_ble_update_conn_param_timer_cb &rArr; ty_ble_set_conn_param &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_conn_param
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_sdk_demo.o(i.tuya_ble_update_conn_param_timer_init)
</UL>
<P><STRONG><a name="[65]"></a>ty_uart_virtual_enter_sleep_timer_cb</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tuya_ble_sdk_test.o(i.ty_uart_virtual_enter_sleep_timer_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ty_uart_virtual_enter_sleep_timer_cb &rArr; ty_ble_stop_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart_uninit
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_uart2_uninit
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_wdt_uninit
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_system_enter_sleep
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_rtc_uninit
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_pwm_uninit
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_oled_clear
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_uninit
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_stop_adv
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_adc_uninit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_sdk_test.o(i.tuya_ble_sdk_test_init)
</UL>
<P><STRONG><a name="[27b]"></a>get_bulk_data_block_crc16</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, tuya_ble_bulk_data_demo.o(i.get_bulk_data_block_crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = get_bulk_data_block_crc16 &rArr; tuya_ble_nv_read &rArr; ty_flash_read &rArr; hal_flash_read &rArr; spif_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc16_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_bulk_data_demo_handler
</UL>

<P><STRONG><a name="[369]"></a>tuya_ble_common_uart_data_unpack</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, tuya_ble_api.o(i.tuya_ble_common_uart_data_unpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_common_uart_data_unpack
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
</UL>

<P><STRONG><a name="[2d7]"></a>prvHeapInit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, tuya_ble_heap.o(i.prvHeapInit))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTuyaPortMalloc
</UL>

<P><STRONG><a name="[2d8]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, tuya_ble_heap.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTuyaPortFree
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTuyaPortMalloc
</UL>

<P><STRONG><a name="[61]"></a>tuya_ble_vtimer_conncet_monitor_callback</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_vtimer_conncet_monitor_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = tuya_ble_vtimer_conncet_monitor_callback &rArr; tuya_ble_gap_disconnect &rArr; ty_ble_disconnect &rArr; GAPRole_TerminateConnection &rArr; GAP_TerminateLinkReq &rArr; disconnectNext &rArr; linkDB_FindFirst
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_main.o(i.tuya_ble_connect_monitor_timer_init)
</UL>
<P><STRONG><a name="[3d0]"></a>tuya_ble_sched_event_put</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, tuya_ble_event.o(i.tuya_ble_sched_event_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuya_ble_sched_event_put
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_message_send
</UL>

<P><STRONG><a name="[234]"></a>auth_settings_crc_ok</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tuya_ble_storage.o(i.auth_settings_crc_ok))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = auth_settings_crc_ok &rArr; tuya_ble_crc32_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
</UL>

<P><STRONG><a name="[313]"></a>sys_settings_crc_ok</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tuya_ble_storage.o(i.sys_settings_crc_ok))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sys_settings_crc_ok &rArr; tuya_ble_crc32_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
</UL>

<P><STRONG><a name="[231]"></a>applib_dt_dayindex</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, tuya_ble_unix_time.o(i.applib_dt_dayindex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = applib_dt_dayindex
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_utc_sec_2_mytime
</UL>

<P><STRONG><a name="[232]"></a>applib_dt_is_leap_year</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tuya_ble_unix_time.o(i.applib_dt_is_leap_year))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = applib_dt_is_leap_year
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_utc_sec_2_mytime
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_mytime_2_utc_sec
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_last_day_of_mon
</UL>

<P><STRONG><a name="[233]"></a>applib_dt_last_day_of_mon</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tuya_ble_unix_time.o(i.applib_dt_last_day_of_mon))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = applib_dt_last_day_of_mon &rArr; applib_dt_is_leap_year
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_is_leap_year
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_utc_sec_2_mytime
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_mytime_2_utc_sec
</UL>

<P><STRONG><a name="[236]"></a>ble_data_unpack</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, tuya_ble_data_handler.o(i.ble_data_unpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_data_unpack &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_recv_pkg_decode
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trsmitr_subpkg_len
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trsmitr_subpkg
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trsmitr_frame_total_len
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_air_recv_packet_free
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
</UL>

<P><STRONG><a name="[3c1]"></a>buffer_value_is_all_x</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, tuya_ble_data_handler.o(i.buffer_value_is_all_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = buffer_value_is_all_x
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_with_dst_date_resp
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_app_local_time_data_resp
</UL>

<P><STRONG><a name="[3ab]"></a>tuya_ble_handle_app_local_time_data_resp</STRONG> (Thumb, 146 bytes, Stack size 72 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_app_local_time_data_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = tuya_ble_handle_app_local_time_data_resp &rArr; tuya_ble_cb_event_send &rArr; tuya_ble_inter_event_response &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rtc_set_timestamp
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_value_is_all_x
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_mytime_2_utc_sec
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3a4]"></a>tuya_ble_handle_dev_info_req</STRONG> (Thumb, 294 bytes, Stack size 160 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_dev_info_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 900<LI>Call Chain = tuya_ble_handle_dev_info_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_addr_get
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rand_generator
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_register_key_generate
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_clear
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3ad]"></a>tuya_ble_handle_device_reset_req</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_device_reset_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 812<LI>Call Chain = tuya_ble_handle_device_reset_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3a0]"></a>tuya_ble_handle_dp_data_write_req</STRONG> (Thumb, 224 bytes, Stack size 104 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_dp_data_write_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 844<LI>Call Chain = tuya_ble_handle_dp_data_write_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_klv_list
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3a3]"></a>tuya_ble_handle_dp_query_req</STRONG> (Thumb, 118 bytes, Stack size 80 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_dp_query_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 820<LI>Call Chain = tuya_ble_handle_dp_query_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3a6]"></a>tuya_ble_handle_net_config_info_req</STRONG> (Thumb, 128 bytes, Stack size 96 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_net_config_info_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = tuya_ble_handle_net_config_info_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3a8]"></a>tuya_ble_handle_ota_req</STRONG> (Thumb, 136 bytes, Stack size 72 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_ota_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = tuya_ble_handle_ota_req &rArr; tuya_ble_uart_common_mcu_ota_data_from_ble_handler &rArr; tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_mcu_ota_data_from_ble_handler
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3a5]"></a>tuya_ble_handle_pair_req</STRONG> (Thumb, 278 bytes, Stack size 88 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_pair_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = tuya_ble_handle_pair_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_get_adv_connect_request_bit_status
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_stop
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3a9]"></a>tuya_ble_handle_unix_time_char_ms_resp</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_unix_time_char_ms_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = tuya_ble_handle_unix_time_char_ms_resp &rArr; atoll &rArr; __strtoll &rArr; _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rtc_set_timestamp
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_value_is_all_x
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoll (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3aa]"></a>tuya_ble_handle_unix_time_date_resp</STRONG> (Thumb, 140 bytes, Stack size 72 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_unix_time_date_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = tuya_ble_handle_unix_time_date_resp &rArr; tuya_ble_cb_event_send &rArr; tuya_ble_inter_event_response &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rtc_set_timestamp
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_value_is_all_x
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_mytime_2_utc_sec
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3ac]"></a>tuya_ble_handle_unix_time_with_dst_date_resp</STRONG> (Thumb, 164 bytes, Stack size 104 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_unix_time_with_dst_date_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = tuya_ble_handle_unix_time_with_dst_date_resp &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rtc_set_timestamp
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_value_is_all_x
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[3cc]"></a>weather_data_lktlv_parse</STRONG> (Thumb, 198 bytes, Stack size 80 bytes, tuya_ble_feature_weather.o(i.weather_data_lktlv_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = weather_data_lktlv_parse &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_key_string_to_enum_type
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_weather_data_received
</UL>

<P><STRONG><a name="[41c]"></a>weather_key_string_to_enum_type</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, tuya_ble_feature_weather.o(i.weather_key_string_to_enum_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = weather_key_string_to_enum_type
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_data_lktlv_parse
</UL>

<P><STRONG><a name="[3b9]"></a>tuya_ble_gatt_send_queue_free</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_queue_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = tuya_ble_gatt_send_queue_free &rArr; tuya_ble_free &rArr; vTuyaPortFree &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dequeue
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[316]"></a>get_frame_seq</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tuya_ble_mutli_tsf_protocol.o(i.get_frame_seq))
<BR><BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_send_pkg_encode_with_packet_length
</UL>

<P><STRONG><a name="[329]"></a>tuya_ble_auc_enter</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tuya_ble_auc_enter &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_start
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_timer_create
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_delay_ms
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_beacon_scan_start
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[32b]"></a>tuya_ble_auc_gpio_test</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_gpio_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = tuya_ble_auc_gpio_test &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_gpio_test
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[32e]"></a>tuya_ble_auc_query_fingerprint</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_query_fingerprint))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tuya_ble_auc_query_fingerprint &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[32a]"></a>tuya_ble_auc_query_hid</STRONG> (Thumb, 102 bytes, Stack size 88 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_query_hid))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = tuya_ble_auc_query_hid &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_buffer_value_is_all_x
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[32d]"></a>tuya_ble_auc_query_info</STRONG> (Thumb, 422 bytes, Stack size 24 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_query_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = tuya_ble_auc_query_info &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[326]"></a>tuya_ble_auc_read_mac</STRONG> (Thumb, 98 bytes, Stack size 104 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_read_mac))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = tuya_ble_auc_read_mac &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[330]"></a>tuya_ble_auc_rssi_test</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_rssi_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = tuya_ble_auc_rssi_test &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_beacon_scan_stop
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_beacon_get_rssi_avg
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[32c]"></a>tuya_ble_auc_write_auth_info</STRONG> (Thumb, 186 bytes, Stack size 96 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_write_auth_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = tuya_ble_auc_write_auth_info &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt_v4 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_updata_mac
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_asciitohex
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[32f]"></a>tuya_ble_auc_write_hid</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_write_hid))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = tuya_ble_auc_write_hid &rArr; tuya_ble_storage_write_hid &rArr; tuya_ble_storage_save_auth_settings &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_hid
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[358]"></a>tuya_ble_prod_asciitohex</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, tuya_ble_app_production_test.o(i.tuya_ble_prod_asciitohex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_prod_asciitohex
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
</UL>

<P><STRONG><a name="[332]"></a>tuya_ble_uart_prod_send</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, tuya_ble_app_production_test.o(i.tuya_ble_uart_prod_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; ty_uart2_send &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_check_sum
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_read_mac
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_gpio_test
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_enter
</UL>

<P><STRONG><a name="[60]"></a>tuya_ble_vtimer_prod_monitor_callback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tuya_ble_app_production_test.o(i.tuya_ble_vtimer_prod_monitor_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuya_ble_vtimer_prod_monitor_callback &rArr; tuya_ble_device_delay_ms &rArr; ty_system_delay_ms &rArr; WaitMs
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_app_production_test.o(i.tuya_ble_auc_enter)
</UL>
<P><STRONG><a name="[404]"></a>tuya_ble_uart_common_mcu_ota_data_from_uart_handler</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, tuya_ble_app_uart_common_handler.o(i.tuya_ble_uart_common_mcu_ota_data_from_uart_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = tuya_ble_uart_common_mcu_ota_data_from_uart_handler &rArr; tuya_ble_commData_send &rArr; tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; ty_ble_send_data &rArr; ty_ble_notify &rArr; GATT_Notification &rArr; ATT_HandleValueNoti &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_process
</UL>

<P><STRONG><a name="[67]"></a>ty_conn_status_cb</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tuya_ble_service.o(i.ty_conn_status_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ty_conn_status_cb &rArr; GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_service.o(i.tuya_gen_AddService)
</UL>
<P><STRONG><a name="[6b]"></a>ty_read_attr_cb</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, tuya_ble_service.o(i.ty_read_attr_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ty_read_attr_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_service.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>ty_write_attr_cb</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, tuya_ble_service.o(i.ty_write_attr_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ty_write_attr_cb &rArr; ty_ble_receive_data_handler &rArr; tuya_ble_gatt_receive_data &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_receive_data_handler
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_service.o(.constdata)
</UL>
<P><STRONG><a name="[2ce]"></a>oled_set_pos</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ty_oled.o(i.oled_set_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = oled_set_pos &rArr; oled_write_byte &rArr; ty_i2c_send &rArr; hal_i2c_wait_tx_completed &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_show_char
</UL>

<P><STRONG><a name="[2cf]"></a>oled_write_byte</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ty_oled.o(i.oled_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = oled_write_byte &rArr; ty_i2c_send &rArr; hal_i2c_wait_tx_completed &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_i2c_send
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_oled_clear
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_show_char
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_pos
</UL>

<P><STRONG><a name="[68]"></a>adc_evt</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ty_adc_phy62xx.o(i.adc_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = adc_evt &rArr; hal_adc_value_cal &rArr; hal_adc_load_calibration_value &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ty_adc_phy62xx.o(i.ty_adc_start)
</UL>
<P><STRONG><a name="[1]"></a>cpt_key_state_handler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ty_pin_phy62xx.o(i.cpt_key_state_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = cpt_key_state_handler &rArr; tuya_ble_sdk_test_wake_up_handler &rArr; ty_ble_start_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_test_wake_up_handler
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_mainloop_timer_start
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ty_pin_phy62xx.o(.data)
</UL>
<P><STRONG><a name="[3d4]"></a>tuya_ble_ota_data_handler</STRONG> (Thumb, 382 bytes, Stack size 40 bytes, tuya_ble_ota.o(i.tuya_ble_ota_data_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = tuya_ble_ota_data_handler &rArr; tuya_ble_ota_info_save &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_erase
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc16_compute
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inverted_array
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_rsp
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_info_save
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_exit
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_handler
</UL>

<P><STRONG><a name="[3d9]"></a>tuya_ble_ota_end_handler</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, tuya_ble_ota.o(i.tuya_ble_ota_end_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = tuya_ble_ota_end_handler &rArr; tuya_ble_ota_info_save &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_rsp
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_info_save
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_get_crc32_in_flash
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_handler
</UL>

<P><STRONG><a name="[3d6]"></a>tuya_ble_ota_exit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tuya_ble_ota.o(i.tuya_ble_ota_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tuya_ble_ota_exit &rArr; tuya_ble_disconnect_and_reset_timer_start &rArr; tuya_ble_timer_start &rArr; ty_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnect_and_reset_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_disconn_handler
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_req_handler
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_offset_handler
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_info_handler
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_end_handler
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_data_handler
</UL>

<P><STRONG><a name="[3db]"></a>tuya_ble_ota_file_info_handler</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, tuya_ble_ota.o(i.tuya_ble_ota_file_info_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = tuya_ble_ota_file_info_handler &rArr; tuya_ble_ota_rsp &rArr; tuya_ble_ota_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inverted_array
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_rsp
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_exit
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_handler
</UL>

<P><STRONG><a name="[3dc]"></a>tuya_ble_ota_file_offset_handler</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, tuya_ble_ota.o(i.tuya_ble_ota_file_offset_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = tuya_ble_ota_file_offset_handler &rArr; tuya_ble_ota_info_save &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inverted_array
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_rsp
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_info_save
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_get_crc32_in_flash
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_exit
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_handler
</UL>

<P><STRONG><a name="[3da]"></a>tuya_ble_ota_get_crc32_in_flash</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, tuya_ble_ota.o(i.tuya_ble_ota_get_crc32_in_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tuya_ble_ota_get_crc32_in_flash &rArr; tuya_ble_nv_read &rArr; ty_flash_read &rArr; hal_flash_read &rArr; spif_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_offset_handler
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_end_handler
</UL>

<P><STRONG><a name="[3d7]"></a>tuya_ble_ota_info_save</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tuya_ble_ota.o(i.tuya_ble_ota_info_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = tuya_ble_ota_info_save &rArr; tuya_ble_nv_write &rArr; ty_flash_write &rArr; hal_flash_write_by_dma &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_offset_handler
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_end_handler
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_data_handler
</UL>

<P><STRONG><a name="[3de]"></a>tuya_ble_ota_req_handler</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, tuya_ble_ota.o(i.tuya_ble_ota_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = tuya_ble_ota_req_handler &rArr; ty_ble_set_conn_param &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inverted_array
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_conn_param
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_set_dle
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_rsp
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_exit
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_handler
</UL>

<P><STRONG><a name="[3d5]"></a>tuya_ble_ota_rsp</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_ota.o(i.tuya_ble_ota_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = tuya_ble_ota_rsp &rArr; tuya_ble_ota_response &rArr; tuya_ble_malloc &rArr; pvTuyaPortMalloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_response
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_req_handler
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_offset_handler
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_file_info_handler
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_end_handler
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_ota_data_handler
</UL>

<P><STRONG><a name="[13b]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[122]"></a>hal_low_power_io_init</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, main.o(i.hal_low_power_io_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_low_power_io_init &rArr; hal_pwrmgr_LowCurrentLdo_enable &rArr; hal_flash_read &rArr; spif_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set (via Veneer)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention_set
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_LowCurrentLdo_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[139]"></a>hal_rfphy_init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, main.o(i.hal_rfphy_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hal_rfphy_init &rArr; hal_rom_boot_init &rArr; _rom_sec_boot_init &rArr; _efuse_chip_version_check &rArr; finidv
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_set_heap (via Veneer)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_boot_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_InitConnectContext (via Veneer)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>adc_wakeup_hdl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, adc.o(i.adc_wakeup_hdl))
<BR>[Address Reference Count : 1]<UL><LI> adc.o(i.hal_adc_init)
</UL>
<P><STRONG><a name="[23f]"></a>clear_adcc_cfg</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, adc.o(i.clear_adcc_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clear_adcc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_init
</UL>

<P><STRONG><a name="[287]"></a>hal_adc_load_calibration_value</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, adc.o(i.hal_adc_load_calibration_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = hal_adc_load_calibration_value &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[283]"></a>set_sampling_resolution</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, adc.o(i.set_sampling_resolution))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_sampling_resolution
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
</UL>

<P><STRONG><a name="[ba]"></a>spif_lock</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, flash.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spif_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_by_dma
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_sector
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_flash_info
</UL>

<P><STRONG><a name="[bd]"></a>spif_unlock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spif_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_by_dma
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_sector
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_flash_info
</UL>

<P><STRONG><a name="[100]"></a>_spif_wait_nobusy_x</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, flash.o(i._spif_wait_nobusy_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_rddata (via Veneer)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_cmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_by_dma
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_sector
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_flash_info
</UL>

<P><STRONG><a name="[10f]"></a>hal_cache_tag_flush</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, flash.o(i.hal_cache_tag_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_cache_tag_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_spif_cache_config
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_sector
</UL>

<P><STRONG><a name="[12]"></a>hw_spif_cache_config</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, flash.o(i.hw_spif_cache_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hw_spif_cache_config &rArr; hal_get_flash_info &rArr; _spif_wait_nobusy_x
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_cache_tag_flush
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spif_config (via Veneer)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_flash_info
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spif_cache_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flash.o(i.hal_spif_cache_init)
</UL>
<P><STRONG><a name="[28e]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_handler
</UL>

<P><STRONG><a name="[28d]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gpio.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_handler
</UL>

<P><STRONG><a name="[296]"></a>hal_gpio_interrupt_enable</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gpio.o(i.hal_gpio_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_event
</UL>

<P><STRONG><a name="[28f]"></a>hal_gpio_retention_enable</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_retention_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_retention_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_sleep_handler
</UL>

<P><STRONG><a name="[49]"></a>hal_gpio_sleep_handler</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_sleep_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_gpio_sleep_handler &rArr; hal_gpio_wakeup_set &rArr; hal_gpio_wakeup_control
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_retention_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(i.hal_gpio_init)
</UL>
<P><STRONG><a name="[294]"></a>hal_gpio_wakeup_control</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gpio.o(i.hal_gpio_wakeup_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_gpio_wakeup_control
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
</UL>

<P><STRONG><a name="[48]"></a>hal_gpio_wakeup_handler</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = hal_gpio_wakeup_handler &rArr; hal_gpioin_enable &rArr; hal_gpio_pin_init &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin2pin3_control
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_event_pin
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_retention_enable
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(i.hal_gpio_init)
</UL>
<P><STRONG><a name="[27f]"></a>hal_gpioin_event</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, gpio.o(i.hal_gpioin_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_gpioin_event &rArr; hal_gpio_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_event_pin
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_GPIO_IRQHandler
</UL>

<P><STRONG><a name="[293]"></a>hal_gpioin_event_pin</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.hal_gpioin_event_pin))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_event
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_handler
</UL>

<P><STRONG><a name="[45]"></a>_uart_putc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, my_printf.o(i._uart_putc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _uart_putc &rArr; hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> my_printf.o(i.dbg_printf)
</UL>
<P><STRONG><a name="[244]"></a>log_vsprintf</STRONG> (Thumb, 608 bytes, Stack size 56 bytes, my_printf.o(i.log_vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;skip_atoi
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;number
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
</UL>

<P><STRONG><a name="[2bc]"></a>number</STRONG> (Thumb, 356 bytes, Stack size 128 bytes, my_printf.o(i.number))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = number
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_vsprintf
</UL>

<P><STRONG><a name="[2bb]"></a>skip_atoi</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, my_printf.o(i.skip_atoi))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_vsprintf
</UL>

<P><STRONG><a name="[138]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, pwrmgr.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_wakeup_process
</UL>

<P><STRONG><a name="[310]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, spi.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_enable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_wakeup_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_wakeup_handler
</UL>

<P><STRONG><a name="[29b]"></a>hal_spi_master_init</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, spi.o(i.hal_spi_master_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_spi_master_init
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_get_pclk (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
</UL>

<P><STRONG><a name="[29a]"></a>hal_spi_pin_init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, spi.o(i.hal_spi_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_spi_pin_init &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
</UL>

<P><STRONG><a name="[2a2]"></a>hal_spi_write_fifo</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, spi.o(i.hal_spi_write_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_spi_write_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit
</UL>

<P><STRONG><a name="[2a1]"></a>hal_spi_xmit_polling</STRONG> (Thumb, 404 bytes, Stack size 48 bytes, spi.o(i.hal_spi_xmit_polling))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = hal_spi_xmit_polling &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_systick (via Veneer)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ms_intv (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit
</UL>

<P><STRONG><a name="[4c]"></a>spi0_sleep_handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, spi.o(i.spi0_sleep_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi0_sleep_handler &rArr; hal_spi_bus_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_deinit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spi.o(i.hal_spi_init)
</UL>
<P><STRONG><a name="[4b]"></a>spi0_wakeup_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, spi.o(i.spi0_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi0_wakeup_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spi.o(i.hal_spi_init)
</UL>
<P><STRONG><a name="[4e]"></a>spi1_sleep_handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, spi.o(i.spi1_sleep_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi1_sleep_handler &rArr; hal_spi_bus_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_deinit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spi.o(i.hal_spi_init)
</UL>
<P><STRONG><a name="[4d]"></a>spi1_wakeup_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, spi.o(i.spi1_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi1_wakeup_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spi.o(i.hal_spi_init)
</UL>
<P><STRONG><a name="[29d]"></a>spi_int_disable</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, spi.o(i.spi_int_disable))
<BR><BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
</UL>

<P><STRONG><a name="[281]"></a>spi_int_handle</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, spi.o(i.spi_int_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spi_int_handle &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI1_IRQHandler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI0_IRQHandler
</UL>

<P><STRONG><a name="[280]"></a>spis_int_handle</STRONG> (Thumb, 252 bytes, Stack size 88 bytes, spi.o(i.spis_int_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = spis_int_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI1_IRQHandler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI0_IRQHandler
</UL>

<P><STRONG><a name="[91]"></a>irq_rx_handler</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, uart.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = irq_rx_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_UART0_IRQHandler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_UART1_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>irq_tx_empty_handler</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, uart.o(_section_sram_code_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = irq_tx_empty_handler &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_UART0_IRQHandler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_UART1_IRQHandler
</UL>

<P><STRONG><a name="[2a7]"></a>txmit_buf_polling</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, uart.o(i.txmit_buf_polling))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = txmit_buf_polling
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
</UL>

<P><STRONG><a name="[2a6]"></a>txmit_buf_use_tx_buf</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, uart.o(i.txmit_buf_use_tx_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_enable_irq (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_disable_irq (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
</UL>

<P><STRONG><a name="[2a4]"></a>uart_hw_deinit</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, uart.o(i.uart_hw_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_hw_deinit &rArr; hal_clk_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_reset (via Veneer)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_disable (via Veneer)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_init
</UL>

<P><STRONG><a name="[2a5]"></a>uart_hw_init</STRONG> (Thumb, 308 bytes, Stack size 48 bytes, uart.o(i.uart_hw_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = uart_hw_init &rArr; uart_hw_deinit &rArr; hal_clk_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_reset (via Veneer)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_gate_enable (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_get_pclk (via Veneer)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wakeup_process_1
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wakeup_process_0
</UL>

<P><STRONG><a name="[50]"></a>uart_wakeup_process_0</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, uart.o(i.uart_wakeup_process_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = uart_wakeup_process_0 &rArr; uart_hw_init &rArr; uart_hw_deinit &rArr; hal_clk_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(i.hal_uart_init)
</UL>
<P><STRONG><a name="[4f]"></a>uart_wakeup_process_1</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, uart.o(i.uart_wakeup_process_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = uart_wakeup_process_1 &rArr; uart_hw_init &rArr; uart_hw_deinit &rArr; hal_clk_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(i.hal_uart_init)
</UL>
<P><STRONG><a name="[1e4]"></a>gattServApp_FindAuthorizeAttrCB</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gattservapp.o(i.gattServApp_FindAuthorizeAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
</UL>

<P><STRONG><a name="[1dd]"></a>gattServApp_FindCharCfgItem</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindCharCfgItem))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteCharCfg
</UL>

<P><STRONG><a name="[26d]"></a>gattServApp_FindPrepareWriteQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindPrepareWriteQ))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB
</UL>

<P><STRONG><a name="[1e5]"></a>gattServApp_FindServiceCBs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindServiceCBs))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
</UL>

<P><STRONG><a name="[3f]"></a>gattServApp_HandleConnStatusCB</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_HandleConnStatusCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gattServApp_HandleConnStatusCB &rArr; GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattservapp.o(i.GATTServApp_Init)
</UL>
<P><STRONG><a name="[26e]"></a>gattServApp_ProcessExecuteWriteReq</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessExecuteWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = gattServApp_ProcessExecuteWriteReq &rArr; ATT_ExecuteWriteRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExecuteWriteRsp
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[26f]"></a>gattServApp_ProcessFindByTypeValueReq</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, gattservapp.o(i.gattServApp_ProcessFindByTypeValueReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = gattServApp_ProcessFindByTypeValueReq &rArr; ATT_FindByTypeValueRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_FindByTypeValueRsp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[1e2]"></a>gattServApp_ProcessMsg</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = gattServApp_ProcessMsg &rArr; gattServApp_ProcessReadByTypeReq &rArr; ATT_ReadByTypeRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_AppCompletedMsg
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadRsp
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadBlobRsp
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExchangeMTURsp
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ErrorRsp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent
</UL>

<P><STRONG><a name="[274]"></a>gattServApp_ProcessPrepareWriteReq</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_ProcessPrepareWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = gattServApp_ProcessPrepareWriteReq &rArr; ATT_PrepareWriteRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_PrepareWriteRsp
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[272]"></a>gattServApp_ProcessReadByGrpTypeReq</STRONG> (Thumb, 332 bytes, Stack size 72 bytes, gattservapp.o(i.gattServApp_ProcessReadByGrpTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = gattServApp_ProcessReadByGrpTypeReq &rArr; ATT_ReadByGrpTypeRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadByGrpTypeRsp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[270]"></a>gattServApp_ProcessReadByTypeReq</STRONG> (Thumb, 302 bytes, Stack size 72 bytes, gattservapp.o(i.gattServApp_ProcessReadByTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = gattServApp_ProcessReadByTypeReq &rArr; ATT_ReadByTypeRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadByTypeRsp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[271]"></a>gattServApp_ProcessReadMultiReq</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, gattservapp.o(i.gattServApp_ProcessReadMultiReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = gattServApp_ProcessReadMultiReq &rArr; ATT_ReadMultiRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadMultiRsp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[273]"></a>gattServApp_ProcessWriteReq</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = gattServApp_ProcessWriteReq &rArr; ATT_WriteRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_WriteRsp
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[1da]"></a>gattServApp_SetNumPrepareWrites</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_SetNumPrepareWrites))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattServApp_SetNumPrepareWrites
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
</UL>

<P><STRONG><a name="[6e]"></a>gattServApp_WriteAttrCB</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gattServApp_WriteAttrCB &rArr; GATTServApp_ProcessCCCWriteReq &rArr; GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattservapp.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>ggs_ReadAttrCB</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, gapgattserver.o(i.ggs_ReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ggs_ReadAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapgattserver.o(.constdata)
</UL>
<P><STRONG><a name="[1fc]"></a>ggs_SetAttrWPermit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gapgattserver.o(i.ggs_SetAttrWPermit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ggs_SetAttrWPermit
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
</UL>

<P><STRONG><a name="[70]"></a>ggs_WriteAttrCB</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, gapgattserver.o(i.ggs_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ggs_WriteAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapgattserver.o(.constdata)
</UL>
<P><STRONG><a name="[263]"></a>gapRole_ProcessGAPMsg</STRONG> (Thumb, 478 bytes, Stack size 24 bytes, peripheral.o(i.gapRole_ProcessGAPMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapRole_ProcessGAPMsg &rArr; GAP_UpdateAdvertisingData
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_get_timeoutEx (via Veneer)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_UpdateAdvertisingData
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_EndDiscoverable
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
</UL>

<P><STRONG><a name="[1ab]"></a>gapRole_ProcessOSALMsg</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, peripheral.o(i.gapRole_ProcessOSALMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gapRole_ProcessOSALMsg &rArr; dbg_printf &rArr; log_vsprintf &rArr; number
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
</UL>

<P><STRONG><a name="[1af]"></a>gapRole_startConnUpdate</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, peripheral.o(i.gapRole_startConnUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ConnParamUpdateReq
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SendUpdateParam
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
</UL>

<P><STRONG><a name="[2]"></a>param_update_CB</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, simplebleperipheral.o(i.param_update_CB))
<BR>[Address Reference Count : 1]<UL><LI> simplebleperipheral.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>peripheralStateNotificationCB</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, simplebleperipheral.o(i.peripheralStateNotificationCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = peripheralStateNotificationCB &rArr; ty_ble_start_adv &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate &rArr; L2CAP_ConnParamUpdateReq &rArr; l2capSendReq &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ty_ble_start_adv
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_ReadBDADDRCmd (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simplebleperipheral.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>peripheralStateReadRssiCB</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, simplebleperipheral.o(i.peripheralStateReadRssiCB))
<BR>[Address Reference Count : 1]<UL><LI> simplebleperipheral.o(.data)
</UL>
<P><STRONG><a name="[37c]"></a>hextoascii</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, tuya_ble_secure.o(i.hextoascii))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hextoascii
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encrypt_old_with_key
</UL>

<P><STRONG><a name="[317]"></a>tuya_ble_Add_Pkcs</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, tuya_ble_secure.o(i.tuya_ble_Add_Pkcs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tuya_ble_Add_Pkcs
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encryption
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encrypt_old_with_key
</UL>

<P><STRONG><a name="[376]"></a>tuya_ble_device_id_key_generate</STRONG> (Thumb, 62 bytes, Stack size 88 bytes, tuya_ble_secure.o(i.tuya_ble_device_id_key_generate))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = tuya_ble_device_id_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate
</UL>

<P><STRONG><a name="[3c0]"></a>tuya_ble_generate_key1</STRONG> (Thumb, 74 bytes, Stack size 56 bytes, tuya_ble_secure.o(i.tuya_ble_generate_key1))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = tuya_ble_generate_key1 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate
</UL>

<P><STRONG><a name="[372]"></a>tuya_ble_key_generate</STRONG> (Thumb, 476 bytes, Stack size 40 bytes, tuya_ble_secure.o(i.tuya_ble_key_generate))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = tuya_ble_key_generate &rArr; tuya_ble_generate_key1 &rArr; tuya_ble_aes128_cbc_encrypt &rArr; mbedtls_aes_crypt_cbc &rArr; mbedtls_aes_crypt_ecb &rArr; mbedtls_internal_aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_generate_key1
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_key_generate
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encryption
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_decryption
</UL>

<P><STRONG><a name="[261]"></a>gapSendDeviceInitDoneEvent</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gap_configmgr.o(i.gapSendDeviceInitDoneEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapSendDeviceInitDoneEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapReadBufSizeCmdStatus
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapReadBD_ADDRStatus
</UL>

<P><STRONG><a name="[1d2]"></a>disconnectNext</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gap_linkmgr.o(i.disconnectNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = disconnectNext &rArr; linkDB_FindFirst
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_DisconnectCmd (via Veneer)
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_FindFirst
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_TerminateLinkReq
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessDisconnectCompleteEvt
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnectionCompleteEvt
</UL>

<P><STRONG><a name="[249]"></a>gapFreeAuthLink</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gap_linkmgr.o(i.gapFreeAuthLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessDisconnectCompleteEvt
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendAuthEvent
</UL>

<P><STRONG><a name="[24d]"></a>sendAuthEvent</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, gap_linkmgr.o(i.sendAuthEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFreeAuthLink
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapPairingCompleteCB
</UL>

<P><STRONG><a name="[258]"></a>sendTerminateEvent</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gap_linkmgr.o(i.sendTerminateEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sendTerminateEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessDisconnectCompleteEvt
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnectionCompleteEvt
</UL>

<P><STRONG><a name="[1c9]"></a>gapAllocAdvRecs</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gap_peridevmgr.o(i.gapAllocAdvRecs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapAllocAdvRecs
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_PeriDevMgrInit
</UL>

<P><STRONG><a name="[1c3]"></a>gapFreeAdvertState</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gap_peridevmgr.o(i.gapFreeAdvertState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapFreeAdvertState
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_MakeDiscoverable
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvEnableStatus
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendMakeDiscEvent
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessAdvertisingEvt
</UL>

<P><STRONG><a name="[5]"></a>gapPeriProcessHCICmdCompleteEvt</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, gap_peridevmgr.o(i.gapPeriProcessHCICmdCompleteEvt))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = gapPeriProcessHCICmdCompleteEvt &rArr; gapWriteAdvEnableStatus &rArr; isLimitedDiscoverableMode &rArr; gapFindADType
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvEnableStatus
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvDataStatus
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSetAdvParamsStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gap_peridevmgr.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>gapProcessAdvertisingEvt</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, gap_peridevmgr.o(i.gapProcessAdvertisingEvt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapProcessAdvertisingEvt &rArr; GAP_EndDiscoverable
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_EndDiscoverable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFreeAdvertState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gap_peridevmgr.o(.data)
</UL>
<P><STRONG><a name="[265]"></a>gapSendMakeDiscEvent</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gap_peridevmgr.o(i.gapSendMakeDiscEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapSendMakeDiscEvent &rArr; gapFreeAdvertState
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFreeAdvertState
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvEnableStatus
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSetAdvParamsStatus
</UL>

<P><STRONG><a name="[267]"></a>isLimitedDiscoverableMode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gap_peridevmgr.o(i.isLimitedDiscoverableMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = isLimitedDiscoverableMode &rArr; gapFindADType
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapFindADType
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapWriteAdvEnableStatus
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSetAdvParams
</UL>

<P><STRONG><a name="[25b]"></a>gapProcessHCICmdCompleteEvt</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, gap_task.o(i.gapProcessHCICmdCompleteEvt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapProcessHCICmdCompleteEvt &rArr; gapReadBD_ADDRStatus &rArr; gapSendDeviceInitDoneEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapReadBufSizeCmdStatus
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapReadBD_ADDRStatus
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessRandomAddrComplete
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessOSALMsg
</UL>

<P><STRONG><a name="[1ca]"></a>gapProcessOSALMsg</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, gap_task.o(i.gapProcessOSALMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gapProcessOSALMsg &rArr; L2CAP_CmdReject &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_CmdReject
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessHCICmdCompleteEvt
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessDisconnectCompleteEvt
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnectionCompleteEvt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapProcessConnUpdateCompleteEvt
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ProcessEvent
</UL>

<P><STRONG><a name="[269]"></a>gattFindServerInfo</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gatt_server.o(i.gattFindServerInfo))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServerProcessMsgCB
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServerHandleConnStatusCB
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattGetServerStatus
</UL>

<P><STRONG><a name="[1f4]"></a>gattGetServerStatus</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gatt_server.o(i.gattGetServerStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gattGetServerStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattFindServerInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Notification
</UL>

<P><STRONG><a name="[7d]"></a>gattProcessExchangeMTUReq</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gatt_server.o(i.gattProcessExchangeMTUReq))
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>gattProcessExecuteWriteReq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gatt_server.o(i.gattProcessExecuteWriteReq))
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>gattProcessFindByTypeValueReq</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gatt_server.o(i.gattProcessFindByTypeValueReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gattProcessFindByTypeValueReq &rArr; GATT_FindHandleUUID &rArr; ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>gattProcessFindInfoReq</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, gatt_server.o(i.gattProcessFindInfoReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = gattProcessFindInfoReq &rArr; ATT_FindInfoRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_FindInfoRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>gattProcessReadByGrpTypeReq</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gatt_server.o(i.gattProcessReadByGrpTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gattProcessReadByGrpTypeReq &rArr; GATT_FindHandleUUID &rArr; ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_CompareUUID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>gattProcessReadByTypeReq</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gatt_server.o(i.gattProcessReadByTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gattProcessReadByTypeReq &rArr; GATT_FindHandleUUID &rArr; ATT_CompareUUID &rArr; ATT_ConvertUUIDto128
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>gattProcessReadMultiReq</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gatt_server.o(i.gattProcessReadMultiReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gattProcessReadMultiReq &rArr; GATT_VerifyReadPermissions &rArr; linkDB_Authen
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>gattProcessReadReq</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gatt_server.o(i.gattProcessReadReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattProcessReadReq &rArr; GATT_VerifyReadPermissions &rArr; linkDB_Authen
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>gattProcessWriteReq</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gatt_server.o(i.gattProcessWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gattProcessWriteReq &rArr; GATT_VerifyWritePermissions &rArr; linkDB_Authen
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyWritePermissions
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(.constdata)
</UL>
<P><STRONG><a name="[26b]"></a>gattResetServerInfo</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gatt_server.o(i.gattResetServerInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattResetServerInfo &rArr; gattStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattStopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServerProcessMsgCB
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServerHandleConnStatusCB
</UL>

<P><STRONG><a name="[41]"></a>gattServerHandleConnStatusCB</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gatt_server.o(i.gattServerHandleConnStatusCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattServerHandleConnStatusCB &rArr; gattNotifyEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattNotifyEvent
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattResetServerInfo
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattFindServerInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(i.GATT_InitServer)
</UL>
<P><STRONG><a name="[40]"></a>gattServerProcessMsgCB</STRONG> (Thumb, 200 bytes, Stack size 288 bytes, gatt_server.o(i.gattServerProcessMsgCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = gattServerProcessMsgCB &rArr; ATT_ErrorRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ErrorRsp
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattNotifyEvent
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattResetServerInfo
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattFindServerInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_server.o(i.GATT_InitServer)
</UL>
<P><STRONG><a name="[1ef]"></a>gattServiceLastHandle</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gatt_server.o(i.gattServiceLastHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gattServiceLastHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_ServiceNumAttrs
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr
</UL>

<P><STRONG><a name="[1f6]"></a>gattProcessRxData</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gatt_task.o(i.gattProcessRxData))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gattProcessRxData &rArr; ATT_ErrorRsp &rArr; attSendMsg &rArr; SM_GenerateAuthenSig &rArr; sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ErrorRsp
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ParsePacket
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_free (via Veneer)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HostNumCompletedPkts
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_ProcessEvent
</UL>

<P><STRONG><a name="[2ae]"></a>l2capProcessRsp</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, l2cap_task.o(i.l2capProcessRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = l2capProcessRsp &rArr; l2capNotifySignal
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capStopTimer
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capParseParamUpdateRsp
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capParseCmdReject
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifySignal
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capFreeChannel
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capFindLocalId
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessSignal
</UL>

<P><STRONG><a name="[206]"></a>l2capProcessRxData</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, l2cap_task.o(i.l2capProcessRxData))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = l2capProcessRxData &rArr; l2capProcessSignal &rArr; L2CAP_CmdReject &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_free (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capParsePacket
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifyData
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessSignal
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HostNumCompletedPkts
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ProcessEvent
</UL>

<P><STRONG><a name="[2b4]"></a>l2capProcessSignal</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, l2cap_task.o(i.l2capProcessSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = l2capProcessSignal &rArr; L2CAP_CmdReject &rArr; l2capSendCmd &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capParseSignalHdr
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifySignal
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capHandleRxError
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ParseParamUpdateReq
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRsp
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_CmdReject
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capProcessRxData
</UL>

<P><STRONG><a name="[2ba]"></a>reportStatusChange</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, linkdb.o(i.reportStatusChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = reportStatusChange
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Remove
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Add
</UL>

<P><STRONG><a name="[a]"></a>smResponderProcessLTKReq</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, sm_rsppairing.o(i.smResponderProcessLTKReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = smResponderProcessLTKReq &rArr; smEndPairing &rArr; gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_s1
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smDetermineKeySize
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_LtkReqReplyCmd (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_LE_LtkReqNegReplyCmd (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_rsppairing.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>smResponderSendNextKeyInfo</STRONG> (Thumb, 428 bytes, Stack size 32 bytes, sm_rsppairing.o(i.smResponderSendNextKeyInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = smResponderSendNextKeyInfo &rArr; smPairingSendMasterID &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_CbTimerStart (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_rand (via Veneer)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendSingingInfo
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendMasterID
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendIdentityInfo
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendIdentityAddrInfo
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smPairingSendEncInfo
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smDetermineKeySize
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateRandBuf
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapGetSRK
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapGetIRK
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapGetDevAddressMode
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapGetDevAddress
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_rsppairing.o(.data)
</UL>
<P><STRONG><a name="[308]"></a>smpResponderProcessEncryptionInformation</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sm_rsppairing.o(i.smpResponderProcessEncryptionInformation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smpResponderProcessEncryptionInformation
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smDetermineKeySize
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
</UL>

<P><STRONG><a name="[309]"></a>smpResponderProcessIdentityAddrInfo</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, sm_rsppairing.o(i.smpResponderProcessIdentityAddrInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = smpResponderProcessIdentityAddrInfo &rArr; smEndPairing &rArr; gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
</UL>

<P><STRONG><a name="[30a]"></a>smpResponderProcessIdentityInfo</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sm_rsppairing.o(i.smpResponderProcessIdentityInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpResponderProcessIdentityInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
</UL>

<P><STRONG><a name="[8]"></a>smpResponderProcessIncoming</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, sm_rsppairing.o(i.smpResponderProcessIncoming))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = smpResponderProcessIncoming &rArr; smpResponderProcessPairingRandom &rArr; sm_c1 &rArr; sm_c1new &rArr; sm_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smAuthReqToUint8
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingReq
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessSigningInfo
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingRandom
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessPairingConfirm
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessMasterID
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIdentityInfo
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIdentityAddrInfo
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessEncryptionInformation
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapSendPairingReqEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sm_rsppairing.o(.data)
</UL>
<P><STRONG><a name="[30e]"></a>smpResponderProcessMasterID</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, sm_rsppairing.o(i.smpResponderProcessMasterID))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = smpResponderProcessMasterID &rArr; smEndPairing &rArr; gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
</UL>

<P><STRONG><a name="[30c]"></a>smpResponderProcessPairingConfirm</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, sm_rsppairing.o(i.smpResponderProcessPairingConfirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = smpResponderProcessPairingConfirm &rArr; sm_c1 &rArr; sm_c1new &rArr; sm_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateConfirm
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
</UL>

<P><STRONG><a name="[30d]"></a>smpResponderProcessPairingRandom</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, sm_rsppairing.o(i.smpResponderProcessPairingRandom))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = smpResponderProcessPairingRandom &rArr; sm_c1 &rArr; sm_c1new &rArr; sm_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGenerateRandMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
</UL>

<P><STRONG><a name="[30f]"></a>smpResponderProcessSigningInfo</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, sm_rsppairing.o(i.smpResponderProcessSigningInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = smpResponderProcessSigningInfo &rArr; smEndPairing &rArr; gapPairingCompleteCB &rArr; sendAuthEvent &rArr; gapFreeAuthLink
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpResponderProcessIncoming
</UL>

<P><STRONG><a name="[218]"></a>smProcessOSALMsg</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, sm_task.o(i.smProcessOSALMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = smProcessOSALMsg &rArr; smProcessDataMsg &rArr; smSendFailAndEnd &rArr; smSendSMMsg &rArr; L2CAP_SendData &rArr; l2capEncapSendData &rArr; l2capPktToSegmentBuff &rArr; L2CAP_Fragment_bm_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_bm_free (via Veneer)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessRandComplete
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessEncryptChange
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_ProcessEvent
</UL>

<P><STRONG><a name="[190]"></a>TRNG_Output</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, patch.o(_section_xip_code_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRNG_INIT
</UL>

<P><STRONG><a name="[18a]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, patch.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1
</UL>

<P><STRONG><a name="[107]"></a>check_16MXtal_by_rcTracking</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, patch.o(i.check_16MXtal_by_rcTracking))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = check_16MXtal_by_rcTracking
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_flag (via Veneer)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_enter_sleep_rtc_reset
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_counter (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1
</UL>

<P><STRONG><a name="[10a]"></a>check_96MXtal_by_rcTracking</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, patch.o(i.check_96MXtal_by_rcTracking))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = check_96MXtal_by_rcTracking
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init1
</UL>

<P><STRONG><a name="[141]"></a>read_LL_remainder_time1</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, patch.o(i.read_LL_remainder_time1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = read_LL_remainder_time1
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_fine_time (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSecAdvAllow1
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llCalcMaxScanTime1
</UL>

<P><STRONG><a name="[51]"></a>l2capHandleTimerCB</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, l2cap_util.o(i.l2capHandleTimerCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = l2capHandleTimerCB &rArr; l2capNotifySignal
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2capNotifySignal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cap_util.o(i.l2capSendReq)
</UL>
<P><STRONG><a name="[277]"></a>generate_subkey</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, sm_mgr.o(i.generate_subkey))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xor_128
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEncryptLocal
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftshift_onebit
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_CMAC
</UL>

<P><STRONG><a name="[279]"></a>leftshift_onebit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sm_mgr.o(i.leftshift_onebit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = leftshift_onebit
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_subkey
</UL>

<P><STRONG><a name="[2d9]"></a>smEncrypt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sm_mgr.o(i.smEncrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Encrypt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_s1
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1new
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_ah
</UL>

<P><STRONG><a name="[278]"></a>smEncryptLocal</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sm_mgr.o(i.smEncryptLocal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smEncryptLocal
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Encrypt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_CMAC
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_subkey
</UL>

<P><STRONG><a name="[215]"></a>sm_CMAC</STRONG> (Thumb, 340 bytes, Stack size 64 bytes, sm_mgr.o(i.sm_CMAC))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = sm_CMAC &rArr; generate_subkey &rArr; xor_128
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xor_128
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEncryptLocal
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_subkey
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_VerifyAuthenSig
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_GenerateAuthenSig
</UL>

<P><STRONG><a name="[305]"></a>sm_xor</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sm_mgr.o(i.sm_xor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sm_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1new
</UL>

<P><STRONG><a name="[27a]"></a>xor_128</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, sm_mgr.o(i.xor_128))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = xor_128
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_CMAC
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_subkey
</UL>

<P><STRONG><a name="[2dc]"></a>smFreePairingParams</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, sm_pairing.o(i.smFreePairingParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = smFreePairingParams &rArr; smStopRspTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_free (via Veneer)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smStopRspTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smLinkCheck
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smEndPairing
</UL>

<P><STRONG><a name="[2e1]"></a>smSetPairingReqRsp</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sm_pairing.o(i.smSetPairingReqRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smSetPairingReqRsp &rArr; smUint8ToAuthReq
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smUint8ToAuthReq
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_c1
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smGeneratePairingReqRsp
</UL>

<P><STRONG><a name="[2f5]"></a>smpProcessIncoming</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, sm_pairing.o(i.smpProcessIncoming))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpProcessIncoming
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Find
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smProcessDataMsg
</UL>

<P><STRONG><a name="[f9]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[f5]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[fd]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[fc]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
